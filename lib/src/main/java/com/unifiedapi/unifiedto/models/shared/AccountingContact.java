/* 
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

package com.unifiedapi.unifiedto.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.unifiedapi.unifiedto.utils.DateTimeDeserializer;
import com.unifiedapi.unifiedto.utils.DateTimeSerializer;
import java.time.OffsetDateTime;


public class AccountingContact {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billing_address")
    public PropertyAccountingContactBillingAddress billingAddress;

    public AccountingContact withBillingAddress(PropertyAccountingContactBillingAddress billingAddress) {
        this.billingAddress = billingAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company_name")
    public String companyName;

    public AccountingContact withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public AccountingContact withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;

    public AccountingContact withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emails")
    public AccountingEmail[] emails;

    public AccountingContact withEmails(AccountingEmail[] emails) {
        this.emails = emails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public AccountingContact withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identification")
    public String identification;

    public AccountingContact withIdentification(String identification) {
        this.identification = identification;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_active")
    public Boolean isActive;

    public AccountingContact withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_customer")
    public Boolean isCustomer;

    public AccountingContact withIsCustomer(Boolean isCustomer) {
        this.isCustomer = isCustomer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_supplier")
    public Boolean isSupplier;

    public AccountingContact withIsSupplier(Boolean isSupplier) {
        this.isSupplier = isSupplier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public AccountingContact withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_methods")
    public AccountingContactPaymentMethod[] paymentMethods;

    public AccountingContact withPaymentMethods(AccountingContactPaymentMethod[] paymentMethods) {
        this.paymentMethods = paymentMethods;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("portal_url")
    public String portalUrl;

    public AccountingContact withPortalUrl(String portalUrl) {
        this.portalUrl = portalUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("raw")
    public java.util.Map<String, java.lang.Object> raw;

    public AccountingContact withRaw(java.util.Map<String, java.lang.Object> raw) {
        this.raw = raw;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping_address")
    public PropertyAccountingContactShippingAddress shippingAddress;

    public AccountingContact withShippingAddress(PropertyAccountingContactShippingAddress shippingAddress) {
        this.shippingAddress = shippingAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_exemption")
    public TaxExemption taxExemption;

    public AccountingContact withTaxExemption(TaxExemption taxExemption) {
        this.taxExemption = taxExemption;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_number")
    public String taxNumber;

    public AccountingContact withTaxNumber(String taxNumber) {
        this.taxNumber = taxNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("telephones")
    public AccountingTelephone[] telephones;

    public AccountingContact withTelephones(AccountingTelephone[] telephones) {
        this.telephones = telephones;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;

    public AccountingContact withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public AccountingContact(){}
}
