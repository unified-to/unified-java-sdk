/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.unifiedapi.unifiedto.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.unifiedapi.unifiedto.utils.SpeakeasyMetadata;


public class GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=env")
    public String env;

    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest withEnv(String env) {
        this.env = env;
        return this;
    }
    
    /**
     * Your user identifier to associate with the new Integration
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=external_xref")
    public String externalXref;

    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest withExternalXref(String externalXref) {
        this.externalXref = externalXref;
        return this;
    }
    
    /**
     * The URL where you want the user to be redirect to after an unsuccessful authentication. An "error" variable will be appended.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=failure_redirect")
    public String failureRedirect;

    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest withFailureRedirect(String failureRedirect) {
        this.failureRedirect = failureRedirect;
        return this;
    }
    
    /**
     * Type of the supported integration
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=integration_type")
    public String integrationType;

    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest withIntegrationType(String integrationType) {
        this.integrationType = integrationType;
        return this;
    }
    
    /**
     * Language: en, fr, es, it, pt, zh, hi
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=lang")
    public String lang;

    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest withLang(String lang) {
        this.lang = lang;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=redirect")
    public Boolean redirect;

    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest withRedirect(Boolean redirect) {
        this.redirect = redirect;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=scopes")
    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeScopes[] scopes;

    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest withScopes(GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeScopes[] scopes) {
        this.scopes = scopes;
        return this;
    }
    
    /**
     * Extra state to send back to your success URL
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=state")
    public String state;

    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest withState(String state) {
        this.state = state;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=subdomain")
    public String subdomain;

    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest withSubdomain(String subdomain) {
        this.subdomain = subdomain;
        return this;
    }
    
    /**
     * The URL where you want the user to be redirect to after a successful authentication.  The connection ID will be appended with (id=&lt;connectionId&gt;) to this URL, as will the state that was provided.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=success_redirect")
    public String successRedirect;

    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest withSuccessRedirect(String successRedirect) {
        this.successRedirect = successRedirect;
        return this;
    }
    
    /**
     * The ID of the workspace
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=workspace_id")
    public String workspaceId;

    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest withWorkspaceId(String workspaceId) {
        this.workspaceId = workspaceId;
        return this;
    }
    
    public GetUnifiedIntegrationAuthWorkspaceIdIntegrationTypeRequest(@JsonProperty("integration_type") String integrationType, @JsonProperty("workspace_id") String workspaceId) {
        this.integrationType = integrationType;
        this.workspaceId = workspaceId;
  }
}
