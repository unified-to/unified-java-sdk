/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.GetUnifiedConnectionRequest;
import to.unified.unified_java_sdk.models.operations.ListUnifiedConnectionsRequest;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedConnectionRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUnifiedConnectionRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedConnectionRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedConnectionsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedConnectionsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateUnifiedConnectionResponse;
import to.unified.unified_java_sdk.operations.CreateUnifiedConnection;
import to.unified.unified_java_sdk.operations.GetUnifiedConnection;
import to.unified.unified_java_sdk.operations.ListUnifiedConnections;
import to.unified.unified_java_sdk.operations.PatchUnifiedConnection;
import to.unified.unified_java_sdk.operations.RemoveUnifiedConnection;
import to.unified.unified_java_sdk.operations.UpdateUnifiedConnection;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncConnection {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Connection syncSDK;

    AsyncConnection(Connection syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Connection sync() {
        return syncSDK;
    }


    /**
     * Create connection
     * 
     * <p>Used only to import existing customer credentials; use "Authorize new connection" instead
     * 
     * @return The async call builder
     */
    public CreateUnifiedConnectionRequestBuilder createUnifiedConnection() {
        return new CreateUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Create connection
     * 
     * <p>Used only to import existing customer credentials; use "Authorize new connection" instead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateUnifiedConnectionResponse>} - The async response
     */
    public CompletableFuture<CreateUnifiedConnectionResponse> createUnifiedConnection(to.unified.unified_java_sdk.models.shared.Connection request) {
        AsyncRequestOperation<to.unified.unified_java_sdk.models.shared.Connection, CreateUnifiedConnectionResponse> operation
              = new CreateUnifiedConnection.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve connection
     * 
     * @return The async call builder
     */
    public GetUnifiedConnectionRequestBuilder getUnifiedConnection() {
        return new GetUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetUnifiedConnectionResponse>} - The async response
     */
    public CompletableFuture<GetUnifiedConnectionResponse> getUnifiedConnection(GetUnifiedConnectionRequest request) {
        AsyncRequestOperation<GetUnifiedConnectionRequest, GetUnifiedConnectionResponse> operation
              = new GetUnifiedConnection.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all connections
     * 
     * @return The async call builder
     */
    public ListUnifiedConnectionsRequestBuilder listUnifiedConnections() {
        return new ListUnifiedConnectionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all connections
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUnifiedConnectionsResponse>} - The async response
     */
    public CompletableFuture<ListUnifiedConnectionsResponse> listUnifiedConnections(ListUnifiedConnectionsRequest request) {
        AsyncRequestOperation<ListUnifiedConnectionsRequest, ListUnifiedConnectionsResponse> operation
              = new ListUnifiedConnections.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update connection
     * 
     * @return The async call builder
     */
    public PatchUnifiedConnectionRequestBuilder patchUnifiedConnection() {
        return new PatchUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchUnifiedConnectionResponse>} - The async response
     */
    public CompletableFuture<PatchUnifiedConnectionResponse> patchUnifiedConnection(PatchUnifiedConnectionRequest request) {
        AsyncRequestOperation<PatchUnifiedConnectionRequest, PatchUnifiedConnectionResponse> operation
              = new PatchUnifiedConnection.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove connection
     * 
     * @return The async call builder
     */
    public RemoveUnifiedConnectionRequestBuilder removeUnifiedConnection() {
        return new RemoveUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveUnifiedConnectionResponse>} - The async response
     */
    public CompletableFuture<RemoveUnifiedConnectionResponse> removeUnifiedConnection(RemoveUnifiedConnectionRequest request) {
        AsyncRequestOperation<RemoveUnifiedConnectionRequest, RemoveUnifiedConnectionResponse> operation
              = new RemoveUnifiedConnection.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update connection
     * 
     * @return The async call builder
     */
    public UpdateUnifiedConnectionRequestBuilder updateUnifiedConnection() {
        return new UpdateUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateUnifiedConnectionResponse>} - The async response
     */
    public CompletableFuture<UpdateUnifiedConnectionResponse> updateUnifiedConnection(UpdateUnifiedConnectionRequest request) {
        AsyncRequestOperation<UpdateUnifiedConnectionRequest, UpdateUnifiedConnectionResponse> operation
              = new UpdateUnifiedConnection.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
