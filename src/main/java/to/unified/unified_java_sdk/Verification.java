/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateVerificationRequestRequest;
import to.unified.unified_java_sdk.models.operations.CreateVerificationRequestRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateVerificationRequestResponse;
import to.unified.unified_java_sdk.models.operations.GetVerificationPackageRequest;
import to.unified.unified_java_sdk.models.operations.GetVerificationPackageRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetVerificationPackageResponse;
import to.unified.unified_java_sdk.models.operations.GetVerificationRequestRequest;
import to.unified.unified_java_sdk.models.operations.GetVerificationRequestRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetVerificationRequestResponse;
import to.unified.unified_java_sdk.models.operations.ListVerificationPackagesRequest;
import to.unified.unified_java_sdk.models.operations.ListVerificationPackagesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListVerificationPackagesResponse;
import to.unified.unified_java_sdk.models.operations.ListVerificationRequestsRequest;
import to.unified.unified_java_sdk.models.operations.ListVerificationRequestsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListVerificationRequestsResponse;
import to.unified.unified_java_sdk.models.operations.PatchVerificationRequestRequest;
import to.unified.unified_java_sdk.models.operations.PatchVerificationRequestRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchVerificationRequestResponse;
import to.unified.unified_java_sdk.models.operations.RemoveVerificationRequestRequest;
import to.unified.unified_java_sdk.models.operations.RemoveVerificationRequestRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveVerificationRequestResponse;
import to.unified.unified_java_sdk.models.operations.UpdateVerificationRequestRequest;
import to.unified.unified_java_sdk.models.operations.UpdateVerificationRequestRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateVerificationRequestResponse;
import to.unified.unified_java_sdk.operations.CreateVerificationRequest;
import to.unified.unified_java_sdk.operations.GetVerificationPackage;
import to.unified.unified_java_sdk.operations.GetVerificationRequest;
import to.unified.unified_java_sdk.operations.ListVerificationPackages;
import to.unified.unified_java_sdk.operations.ListVerificationRequests;
import to.unified.unified_java_sdk.operations.PatchVerificationRequest;
import to.unified.unified_java_sdk.operations.RemoveVerificationRequest;
import to.unified.unified_java_sdk.operations.UpdateVerificationRequest;


public class Verification {
    private final SDKConfiguration sdkConfiguration;
    private final AsyncVerification asyncSDK;

    Verification(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncVerification(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncVerification async() {
        return asyncSDK;
    }

    /**
     * Create a request
     * 
     * @return The call builder
     */
    public CreateVerificationRequestRequestBuilder createVerificationRequest() {
        return new CreateVerificationRequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateVerificationRequestResponse createVerificationRequest(CreateVerificationRequestRequest request) throws Exception {
        RequestOperation<CreateVerificationRequestRequest, CreateVerificationRequestResponse> operation
              = new CreateVerificationRequest.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a package
     * 
     * @return The call builder
     */
    public GetVerificationPackageRequestBuilder getVerificationPackage() {
        return new GetVerificationPackageRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a package
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetVerificationPackageResponse getVerificationPackage(GetVerificationPackageRequest request) throws Exception {
        RequestOperation<GetVerificationPackageRequest, GetVerificationPackageResponse> operation
              = new GetVerificationPackage.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a request
     * 
     * @return The call builder
     */
    public GetVerificationRequestRequestBuilder getVerificationRequest() {
        return new GetVerificationRequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetVerificationRequestResponse getVerificationRequest(GetVerificationRequestRequest request) throws Exception {
        RequestOperation<GetVerificationRequestRequest, GetVerificationRequestResponse> operation
              = new GetVerificationRequest.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all packages
     * 
     * @return The call builder
     */
    public ListVerificationPackagesRequestBuilder listVerificationPackages() {
        return new ListVerificationPackagesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all packages
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListVerificationPackagesResponse listVerificationPackages(ListVerificationPackagesRequest request) throws Exception {
        RequestOperation<ListVerificationPackagesRequest, ListVerificationPackagesResponse> operation
              = new ListVerificationPackages.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all requests
     * 
     * @return The call builder
     */
    public ListVerificationRequestsRequestBuilder listVerificationRequests() {
        return new ListVerificationRequestsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all requests
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListVerificationRequestsResponse listVerificationRequests(ListVerificationRequestsRequest request) throws Exception {
        RequestOperation<ListVerificationRequestsRequest, ListVerificationRequestsResponse> operation
              = new ListVerificationRequests.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a request
     * 
     * @return The call builder
     */
    public PatchVerificationRequestRequestBuilder patchVerificationRequest() {
        return new PatchVerificationRequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchVerificationRequestResponse patchVerificationRequest(PatchVerificationRequestRequest request) throws Exception {
        RequestOperation<PatchVerificationRequestRequest, PatchVerificationRequestResponse> operation
              = new PatchVerificationRequest.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a request
     * 
     * @return The call builder
     */
    public RemoveVerificationRequestRequestBuilder removeVerificationRequest() {
        return new RemoveVerificationRequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveVerificationRequestResponse removeVerificationRequest(RemoveVerificationRequestRequest request) throws Exception {
        RequestOperation<RemoveVerificationRequestRequest, RemoveVerificationRequestResponse> operation
              = new RemoveVerificationRequest.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a request
     * 
     * @return The call builder
     */
    public UpdateVerificationRequestRequestBuilder updateVerificationRequest() {
        return new UpdateVerificationRequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateVerificationRequestResponse updateVerificationRequest(UpdateVerificationRequestRequest request) throws Exception {
        RequestOperation<UpdateVerificationRequestRequest, UpdateVerificationRequestResponse> operation
              = new UpdateVerificationRequest.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
