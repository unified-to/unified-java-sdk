/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.CreateScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.GetScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisGroupsRequest;
import to.unified.unified_java_sdk.models.operations.ListScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.PatchScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.RemoveScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.UpdateScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.async.GetHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.async.GetScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListHrisGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListHrisGroupsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateScimGroupsResponse;
import to.unified.unified_java_sdk.operations.CreateHrisGroup;
import to.unified.unified_java_sdk.operations.CreateScimGroups;
import to.unified.unified_java_sdk.operations.GetHrisGroup;
import to.unified.unified_java_sdk.operations.GetScimGroups;
import to.unified.unified_java_sdk.operations.ListHrisGroups;
import to.unified.unified_java_sdk.operations.ListScimGroups;
import to.unified.unified_java_sdk.operations.PatchHrisGroup;
import to.unified.unified_java_sdk.operations.PatchScimGroups;
import to.unified.unified_java_sdk.operations.RemoveHrisGroup;
import to.unified.unified_java_sdk.operations.RemoveScimGroups;
import to.unified.unified_java_sdk.operations.UpdateHrisGroup;
import to.unified.unified_java_sdk.operations.UpdateScimGroups;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncGroup {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Group syncSDK;

    AsyncGroup(Group syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Group sync() {
        return syncSDK;
    }


    /**
     * Create a group
     * 
     * @return The async call builder
     */
    public CreateHrisGroupRequestBuilder createHrisGroup() {
        return new CreateHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateHrisGroupResponse&gt; - The async response
     */
    public CompletableFuture<CreateHrisGroupResponse> createHrisGroup(CreateHrisGroupRequest request) {
        AsyncRequestOperation<CreateHrisGroupRequest, CreateHrisGroupResponse> operation
              = new CreateHrisGroup.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create group
     * 
     * @return The async call builder
     */
    public CreateScimGroupsRequestBuilder createScimGroups() {
        return new CreateScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Create group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateScimGroupsResponse&gt; - The async response
     */
    public CompletableFuture<CreateScimGroupsResponse> createScimGroups(CreateScimGroupsRequest request) {
        AsyncRequestOperation<CreateScimGroupsRequest, CreateScimGroupsResponse> operation
              = new CreateScimGroups.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a group
     * 
     * @return The async call builder
     */
    public GetHrisGroupRequestBuilder getHrisGroup() {
        return new GetHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetHrisGroupResponse&gt; - The async response
     */
    public CompletableFuture<GetHrisGroupResponse> getHrisGroup(GetHrisGroupRequest request) {
        AsyncRequestOperation<GetHrisGroupRequest, GetHrisGroupResponse> operation
              = new GetHrisGroup.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get group
     * 
     * @return The async call builder
     */
    public GetScimGroupsRequestBuilder getScimGroups() {
        return new GetScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Get group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetScimGroupsResponse&gt; - The async response
     */
    public CompletableFuture<GetScimGroupsResponse> getScimGroups(GetScimGroupsRequest request) {
        AsyncRequestOperation<GetScimGroupsRequest, GetScimGroupsResponse> operation
              = new GetScimGroups.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all groups
     * 
     * @return The async call builder
     */
    public ListHrisGroupsRequestBuilder listHrisGroups() {
        return new ListHrisGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all groups
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListHrisGroupsResponse&gt; - The async response
     */
    public CompletableFuture<ListHrisGroupsResponse> listHrisGroups(ListHrisGroupsRequest request) {
        AsyncRequestOperation<ListHrisGroupsRequest, ListHrisGroupsResponse> operation
              = new ListHrisGroups.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List groups
     * 
     * @return The async call builder
     */
    public ListScimGroupsRequestBuilder listScimGroups() {
        return new ListScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * List groups
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListScimGroupsResponse&gt; - The async response
     */
    public CompletableFuture<ListScimGroupsResponse> listScimGroups(ListScimGroupsRequest request) {
        AsyncRequestOperation<ListScimGroupsRequest, ListScimGroupsResponse> operation
              = new ListScimGroups.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a group
     * 
     * @return The async call builder
     */
    public PatchHrisGroupRequestBuilder patchHrisGroup() {
        return new PatchHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchHrisGroupResponse&gt; - The async response
     */
    public CompletableFuture<PatchHrisGroupResponse> patchHrisGroup(PatchHrisGroupRequest request) {
        AsyncRequestOperation<PatchHrisGroupRequest, PatchHrisGroupResponse> operation
              = new PatchHrisGroup.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update group
     * 
     * @return The async call builder
     */
    public PatchScimGroupsRequestBuilder patchScimGroups() {
        return new PatchScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Update group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchScimGroupsResponse&gt; - The async response
     */
    public CompletableFuture<PatchScimGroupsResponse> patchScimGroups(PatchScimGroupsRequest request) {
        AsyncRequestOperation<PatchScimGroupsRequest, PatchScimGroupsResponse> operation
              = new PatchScimGroups.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a group
     * 
     * @return The async call builder
     */
    public RemoveHrisGroupRequestBuilder removeHrisGroup() {
        return new RemoveHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveHrisGroupResponse&gt; - The async response
     */
    public CompletableFuture<RemoveHrisGroupResponse> removeHrisGroup(RemoveHrisGroupRequest request) {
        AsyncRequestOperation<RemoveHrisGroupRequest, RemoveHrisGroupResponse> operation
              = new RemoveHrisGroup.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Delete group
     * 
     * @return The async call builder
     */
    public RemoveScimGroupsRequestBuilder removeScimGroups() {
        return new RemoveScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveScimGroupsResponse&gt; - The async response
     */
    public CompletableFuture<RemoveScimGroupsResponse> removeScimGroups(RemoveScimGroupsRequest request) {
        AsyncRequestOperation<RemoveScimGroupsRequest, RemoveScimGroupsResponse> operation
              = new RemoveScimGroups.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a group
     * 
     * @return The async call builder
     */
    public UpdateHrisGroupRequestBuilder updateHrisGroup() {
        return new UpdateHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateHrisGroupResponse&gt; - The async response
     */
    public CompletableFuture<UpdateHrisGroupResponse> updateHrisGroup(UpdateHrisGroupRequest request) {
        AsyncRequestOperation<UpdateHrisGroupRequest, UpdateHrisGroupResponse> operation
              = new UpdateHrisGroup.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update group
     * 
     * @return The async call builder
     */
    public UpdateScimGroupsRequestBuilder updateScimGroups() {
        return new UpdateScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Update group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateScimGroupsResponse&gt; - The async response
     */
    public CompletableFuture<UpdateScimGroupsResponse> updateScimGroups(UpdateScimGroupsRequest request) {
        AsyncRequestOperation<UpdateScimGroupsRequest, UpdateScimGroupsResponse> operation
              = new UpdateScimGroups.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
