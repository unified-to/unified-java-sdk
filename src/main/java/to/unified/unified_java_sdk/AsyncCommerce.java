/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.CreateCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.CreateCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.CreateCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.CreateCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceCollectionsRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceInventoriesRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceItemsRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceLocationsRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceReviewsRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceReviewResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceReviewResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceCollectionsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceCollectionsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceInventoriesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceInventoriesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceItemsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceItemsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceLocationsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceLocationsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceReviewsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceReviewsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceReviewResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceReviewResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceReviewResponse;
import to.unified.unified_java_sdk.operations.CreateCommerceCollection;
import to.unified.unified_java_sdk.operations.CreateCommerceInventory;
import to.unified.unified_java_sdk.operations.CreateCommerceItem;
import to.unified.unified_java_sdk.operations.CreateCommerceLocation;
import to.unified.unified_java_sdk.operations.CreateCommerceReview;
import to.unified.unified_java_sdk.operations.GetCommerceCollection;
import to.unified.unified_java_sdk.operations.GetCommerceInventory;
import to.unified.unified_java_sdk.operations.GetCommerceItem;
import to.unified.unified_java_sdk.operations.GetCommerceLocation;
import to.unified.unified_java_sdk.operations.GetCommerceReview;
import to.unified.unified_java_sdk.operations.ListCommerceCollections;
import to.unified.unified_java_sdk.operations.ListCommerceInventories;
import to.unified.unified_java_sdk.operations.ListCommerceItems;
import to.unified.unified_java_sdk.operations.ListCommerceLocations;
import to.unified.unified_java_sdk.operations.ListCommerceReviews;
import to.unified.unified_java_sdk.operations.PatchCommerceCollection;
import to.unified.unified_java_sdk.operations.PatchCommerceInventory;
import to.unified.unified_java_sdk.operations.PatchCommerceItem;
import to.unified.unified_java_sdk.operations.PatchCommerceLocation;
import to.unified.unified_java_sdk.operations.PatchCommerceReview;
import to.unified.unified_java_sdk.operations.RemoveCommerceCollection;
import to.unified.unified_java_sdk.operations.RemoveCommerceInventory;
import to.unified.unified_java_sdk.operations.RemoveCommerceItem;
import to.unified.unified_java_sdk.operations.RemoveCommerceLocation;
import to.unified.unified_java_sdk.operations.RemoveCommerceReview;
import to.unified.unified_java_sdk.operations.UpdateCommerceCollection;
import to.unified.unified_java_sdk.operations.UpdateCommerceInventory;
import to.unified.unified_java_sdk.operations.UpdateCommerceItem;
import to.unified.unified_java_sdk.operations.UpdateCommerceLocation;
import to.unified.unified_java_sdk.operations.UpdateCommerceReview;


public class AsyncCommerce {
    private final SDKConfiguration sdkConfiguration;
    private final Commerce syncSDK;

    AsyncCommerce(Commerce syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Commerce sync() {
        return syncSDK;
    }


    /**
     * Create a collection
     * 
     * @return The async call builder
     */
    public CreateCommerceCollectionRequestBuilder createCommerceCollection() {
        return new CreateCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCommerceCollectionResponse&gt; - The async response
     */
    public CompletableFuture<CreateCommerceCollectionResponse> createCommerceCollection(CreateCommerceCollectionRequest request) {
        AsyncRequestOperation<CreateCommerceCollectionRequest, CreateCommerceCollectionResponse> operation
              = new CreateCommerceCollection.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create an inventory
     * 
     * @return The async call builder
     */
    public CreateCommerceInventoryRequestBuilder createCommerceInventory() {
        return new CreateCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCommerceInventoryResponse&gt; - The async response
     */
    public CompletableFuture<CreateCommerceInventoryResponse> createCommerceInventory(CreateCommerceInventoryRequest request) {
        AsyncRequestOperation<CreateCommerceInventoryRequest, CreateCommerceInventoryResponse> operation
              = new CreateCommerceInventory.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create an item
     * 
     * @return The async call builder
     */
    public CreateCommerceItemRequestBuilder createCommerceItem() {
        return new CreateCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCommerceItemResponse&gt; - The async response
     */
    public CompletableFuture<CreateCommerceItemResponse> createCommerceItem(CreateCommerceItemRequest request) {
        AsyncRequestOperation<CreateCommerceItemRequest, CreateCommerceItemResponse> operation
              = new CreateCommerceItem.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a location
     * 
     * @return The async call builder
     */
    public CreateCommerceLocationRequestBuilder createCommerceLocation() {
        return new CreateCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCommerceLocationResponse&gt; - The async response
     */
    public CompletableFuture<CreateCommerceLocationResponse> createCommerceLocation(CreateCommerceLocationRequest request) {
        AsyncRequestOperation<CreateCommerceLocationRequest, CreateCommerceLocationResponse> operation
              = new CreateCommerceLocation.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a review
     * 
     * @return The async call builder
     */
    public CreateCommerceReviewRequestBuilder createCommerceReview() {
        return new CreateCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCommerceReviewResponse&gt; - The async response
     */
    public CompletableFuture<CreateCommerceReviewResponse> createCommerceReview(CreateCommerceReviewRequest request) {
        AsyncRequestOperation<CreateCommerceReviewRequest, CreateCommerceReviewResponse> operation
              = new CreateCommerceReview.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a collection
     * 
     * @return The async call builder
     */
    public GetCommerceCollectionRequestBuilder getCommerceCollection() {
        return new GetCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCommerceCollectionResponse&gt; - The async response
     */
    public CompletableFuture<GetCommerceCollectionResponse> getCommerceCollection(GetCommerceCollectionRequest request) {
        AsyncRequestOperation<GetCommerceCollectionRequest, GetCommerceCollectionResponse> operation
              = new GetCommerceCollection.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an inventory
     * 
     * @return The async call builder
     */
    public GetCommerceInventoryRequestBuilder getCommerceInventory() {
        return new GetCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCommerceInventoryResponse&gt; - The async response
     */
    public CompletableFuture<GetCommerceInventoryResponse> getCommerceInventory(GetCommerceInventoryRequest request) {
        AsyncRequestOperation<GetCommerceInventoryRequest, GetCommerceInventoryResponse> operation
              = new GetCommerceInventory.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an item
     * 
     * @return The async call builder
     */
    public GetCommerceItemRequestBuilder getCommerceItem() {
        return new GetCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCommerceItemResponse&gt; - The async response
     */
    public CompletableFuture<GetCommerceItemResponse> getCommerceItem(GetCommerceItemRequest request) {
        AsyncRequestOperation<GetCommerceItemRequest, GetCommerceItemResponse> operation
              = new GetCommerceItem.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a location
     * 
     * @return The async call builder
     */
    public GetCommerceLocationRequestBuilder getCommerceLocation() {
        return new GetCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCommerceLocationResponse&gt; - The async response
     */
    public CompletableFuture<GetCommerceLocationResponse> getCommerceLocation(GetCommerceLocationRequest request) {
        AsyncRequestOperation<GetCommerceLocationRequest, GetCommerceLocationResponse> operation
              = new GetCommerceLocation.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a review
     * 
     * @return The async call builder
     */
    public GetCommerceReviewRequestBuilder getCommerceReview() {
        return new GetCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCommerceReviewResponse&gt; - The async response
     */
    public CompletableFuture<GetCommerceReviewResponse> getCommerceReview(GetCommerceReviewRequest request) {
        AsyncRequestOperation<GetCommerceReviewRequest, GetCommerceReviewResponse> operation
              = new GetCommerceReview.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all collections
     * 
     * @return The async call builder
     */
    public ListCommerceCollectionsRequestBuilder listCommerceCollections() {
        return new ListCommerceCollectionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all collections
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCommerceCollectionsResponse&gt; - The async response
     */
    public CompletableFuture<ListCommerceCollectionsResponse> listCommerceCollections(ListCommerceCollectionsRequest request) {
        AsyncRequestOperation<ListCommerceCollectionsRequest, ListCommerceCollectionsResponse> operation
              = new ListCommerceCollections.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all inventories
     * 
     * @return The async call builder
     */
    public ListCommerceInventoriesRequestBuilder listCommerceInventories() {
        return new ListCommerceInventoriesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all inventories
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCommerceInventoriesResponse&gt; - The async response
     */
    public CompletableFuture<ListCommerceInventoriesResponse> listCommerceInventories(ListCommerceInventoriesRequest request) {
        AsyncRequestOperation<ListCommerceInventoriesRequest, ListCommerceInventoriesResponse> operation
              = new ListCommerceInventories.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all items
     * 
     * @return The async call builder
     */
    public ListCommerceItemsRequestBuilder listCommerceItems() {
        return new ListCommerceItemsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all items
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCommerceItemsResponse&gt; - The async response
     */
    public CompletableFuture<ListCommerceItemsResponse> listCommerceItems(ListCommerceItemsRequest request) {
        AsyncRequestOperation<ListCommerceItemsRequest, ListCommerceItemsResponse> operation
              = new ListCommerceItems.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all locations
     * 
     * @return The async call builder
     */
    public ListCommerceLocationsRequestBuilder listCommerceLocations() {
        return new ListCommerceLocationsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all locations
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCommerceLocationsResponse&gt; - The async response
     */
    public CompletableFuture<ListCommerceLocationsResponse> listCommerceLocations(ListCommerceLocationsRequest request) {
        AsyncRequestOperation<ListCommerceLocationsRequest, ListCommerceLocationsResponse> operation
              = new ListCommerceLocations.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all reviews
     * 
     * @return The async call builder
     */
    public ListCommerceReviewsRequestBuilder listCommerceReviews() {
        return new ListCommerceReviewsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all reviews
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCommerceReviewsResponse&gt; - The async response
     */
    public CompletableFuture<ListCommerceReviewsResponse> listCommerceReviews(ListCommerceReviewsRequest request) {
        AsyncRequestOperation<ListCommerceReviewsRequest, ListCommerceReviewsResponse> operation
              = new ListCommerceReviews.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a collection
     * 
     * @return The async call builder
     */
    public PatchCommerceCollectionRequestBuilder patchCommerceCollection() {
        return new PatchCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCommerceCollectionResponse&gt; - The async response
     */
    public CompletableFuture<PatchCommerceCollectionResponse> patchCommerceCollection(PatchCommerceCollectionRequest request) {
        AsyncRequestOperation<PatchCommerceCollectionRequest, PatchCommerceCollectionResponse> operation
              = new PatchCommerceCollection.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an inventory
     * 
     * @return The async call builder
     */
    public PatchCommerceInventoryRequestBuilder patchCommerceInventory() {
        return new PatchCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCommerceInventoryResponse&gt; - The async response
     */
    public CompletableFuture<PatchCommerceInventoryResponse> patchCommerceInventory(PatchCommerceInventoryRequest request) {
        AsyncRequestOperation<PatchCommerceInventoryRequest, PatchCommerceInventoryResponse> operation
              = new PatchCommerceInventory.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an item
     * 
     * @return The async call builder
     */
    public PatchCommerceItemRequestBuilder patchCommerceItem() {
        return new PatchCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCommerceItemResponse&gt; - The async response
     */
    public CompletableFuture<PatchCommerceItemResponse> patchCommerceItem(PatchCommerceItemRequest request) {
        AsyncRequestOperation<PatchCommerceItemRequest, PatchCommerceItemResponse> operation
              = new PatchCommerceItem.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a location
     * 
     * @return The async call builder
     */
    public PatchCommerceLocationRequestBuilder patchCommerceLocation() {
        return new PatchCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCommerceLocationResponse&gt; - The async response
     */
    public CompletableFuture<PatchCommerceLocationResponse> patchCommerceLocation(PatchCommerceLocationRequest request) {
        AsyncRequestOperation<PatchCommerceLocationRequest, PatchCommerceLocationResponse> operation
              = new PatchCommerceLocation.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a review
     * 
     * @return The async call builder
     */
    public PatchCommerceReviewRequestBuilder patchCommerceReview() {
        return new PatchCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCommerceReviewResponse&gt; - The async response
     */
    public CompletableFuture<PatchCommerceReviewResponse> patchCommerceReview(PatchCommerceReviewRequest request) {
        AsyncRequestOperation<PatchCommerceReviewRequest, PatchCommerceReviewResponse> operation
              = new PatchCommerceReview.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a collection
     * 
     * @return The async call builder
     */
    public RemoveCommerceCollectionRequestBuilder removeCommerceCollection() {
        return new RemoveCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCommerceCollectionResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCommerceCollectionResponse> removeCommerceCollection(RemoveCommerceCollectionRequest request) {
        AsyncRequestOperation<RemoveCommerceCollectionRequest, RemoveCommerceCollectionResponse> operation
              = new RemoveCommerceCollection.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an inventory
     * 
     * @return The async call builder
     */
    public RemoveCommerceInventoryRequestBuilder removeCommerceInventory() {
        return new RemoveCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCommerceInventoryResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCommerceInventoryResponse> removeCommerceInventory(RemoveCommerceInventoryRequest request) {
        AsyncRequestOperation<RemoveCommerceInventoryRequest, RemoveCommerceInventoryResponse> operation
              = new RemoveCommerceInventory.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an item
     * 
     * @return The async call builder
     */
    public RemoveCommerceItemRequestBuilder removeCommerceItem() {
        return new RemoveCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCommerceItemResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCommerceItemResponse> removeCommerceItem(RemoveCommerceItemRequest request) {
        AsyncRequestOperation<RemoveCommerceItemRequest, RemoveCommerceItemResponse> operation
              = new RemoveCommerceItem.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a location
     * 
     * @return The async call builder
     */
    public RemoveCommerceLocationRequestBuilder removeCommerceLocation() {
        return new RemoveCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCommerceLocationResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCommerceLocationResponse> removeCommerceLocation(RemoveCommerceLocationRequest request) {
        AsyncRequestOperation<RemoveCommerceLocationRequest, RemoveCommerceLocationResponse> operation
              = new RemoveCommerceLocation.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a review
     * 
     * @return The async call builder
     */
    public RemoveCommerceReviewRequestBuilder removeCommerceReview() {
        return new RemoveCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCommerceReviewResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCommerceReviewResponse> removeCommerceReview(RemoveCommerceReviewRequest request) {
        AsyncRequestOperation<RemoveCommerceReviewRequest, RemoveCommerceReviewResponse> operation
              = new RemoveCommerceReview.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a collection
     * 
     * @return The async call builder
     */
    public UpdateCommerceCollectionRequestBuilder updateCommerceCollection() {
        return new UpdateCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCommerceCollectionResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCommerceCollectionResponse> updateCommerceCollection(UpdateCommerceCollectionRequest request) {
        AsyncRequestOperation<UpdateCommerceCollectionRequest, UpdateCommerceCollectionResponse> operation
              = new UpdateCommerceCollection.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an inventory
     * 
     * @return The async call builder
     */
    public UpdateCommerceInventoryRequestBuilder updateCommerceInventory() {
        return new UpdateCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCommerceInventoryResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCommerceInventoryResponse> updateCommerceInventory(UpdateCommerceInventoryRequest request) {
        AsyncRequestOperation<UpdateCommerceInventoryRequest, UpdateCommerceInventoryResponse> operation
              = new UpdateCommerceInventory.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an item
     * 
     * @return The async call builder
     */
    public UpdateCommerceItemRequestBuilder updateCommerceItem() {
        return new UpdateCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCommerceItemResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCommerceItemResponse> updateCommerceItem(UpdateCommerceItemRequest request) {
        AsyncRequestOperation<UpdateCommerceItemRequest, UpdateCommerceItemResponse> operation
              = new UpdateCommerceItem.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a location
     * 
     * @return The async call builder
     */
    public UpdateCommerceLocationRequestBuilder updateCommerceLocation() {
        return new UpdateCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCommerceLocationResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCommerceLocationResponse> updateCommerceLocation(UpdateCommerceLocationRequest request) {
        AsyncRequestOperation<UpdateCommerceLocationRequest, UpdateCommerceLocationResponse> operation
              = new UpdateCommerceLocation.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a review
     * 
     * @return The async call builder
     */
    public UpdateCommerceReviewRequestBuilder updateCommerceReview() {
        return new UpdateCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCommerceReviewResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCommerceReviewResponse> updateCommerceReview(UpdateCommerceReviewRequest request) {
        AsyncRequestOperation<UpdateCommerceReviewRequest, UpdateCommerceReviewResponse> operation
              = new UpdateCommerceReview.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
