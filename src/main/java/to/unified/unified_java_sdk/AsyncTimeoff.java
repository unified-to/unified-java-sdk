/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.GetHrisTimeoffRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisTimeoffsRequest;
import to.unified.unified_java_sdk.models.operations.async.GetHrisTimeoffRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetHrisTimeoffResponse;
import to.unified.unified_java_sdk.models.operations.async.ListHrisTimeoffsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListHrisTimeoffsResponse;
import to.unified.unified_java_sdk.operations.GetHrisTimeoff;
import to.unified.unified_java_sdk.operations.ListHrisTimeoffs;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncTimeoff {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Timeoff syncSDK;

    AsyncTimeoff(Timeoff syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Timeoff sync() {
        return syncSDK;
    }


    /**
     * Retrieve a timeoff
     * 
     * @return The async call builder
     */
    public GetHrisTimeoffRequestBuilder getHrisTimeoff() {
        return new GetHrisTimeoffRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a timeoff
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetHrisTimeoffResponse&gt; - The async response
     */
    public CompletableFuture<GetHrisTimeoffResponse> getHrisTimeoff(GetHrisTimeoffRequest request) {
        AsyncRequestOperation<GetHrisTimeoffRequest, GetHrisTimeoffResponse> operation
              = new GetHrisTimeoff.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all timeoffs
     * 
     * @return The async call builder
     */
    public ListHrisTimeoffsRequestBuilder listHrisTimeoffs() {
        return new ListHrisTimeoffsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all timeoffs
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListHrisTimeoffsResponse&gt; - The async response
     */
    public CompletableFuture<ListHrisTimeoffsResponse> listHrisTimeoffs(ListHrisTimeoffsRequest request) {
        AsyncRequestOperation<ListHrisTimeoffsRequest, ListHrisTimeoffsResponse> operation
              = new ListHrisTimeoffs.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
