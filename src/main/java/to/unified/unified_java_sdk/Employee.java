/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import java.util.List;
import java.util.Optional;
import to.unified.unified_java_sdk.models.operations.CreateHrisEmployeeRequest;
import to.unified.unified_java_sdk.models.operations.CreateHrisEmployeeRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateHrisEmployeeResponse;
import to.unified.unified_java_sdk.models.operations.GetHrisEmployeeRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisEmployeeRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetHrisEmployeeResponse;
import to.unified.unified_java_sdk.models.operations.ListHrisEmployeesRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisEmployeesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListHrisEmployeesResponse;
import to.unified.unified_java_sdk.models.operations.PatchHrisEmployeeRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisEmployeeRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchHrisEmployeeResponse;
import to.unified.unified_java_sdk.models.operations.RemoveHrisEmployeeRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisEmployeeRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveHrisEmployeeResponse;
import to.unified.unified_java_sdk.models.operations.UpdateHrisEmployeeRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisEmployeeRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateHrisEmployeeResponse;
import to.unified.unified_java_sdk.operations.CreateHrisEmployeeOperation;
import to.unified.unified_java_sdk.operations.GetHrisEmployeeOperation;
import to.unified.unified_java_sdk.operations.ListHrisEmployeesOperation;
import to.unified.unified_java_sdk.operations.PatchHrisEmployeeOperation;
import to.unified.unified_java_sdk.operations.RemoveHrisEmployeeOperation;
import to.unified.unified_java_sdk.operations.UpdateHrisEmployeeOperation;


public class Employee {
    private final SDKConfiguration sdkConfiguration;

    Employee(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create an employee
     * 
     * @return The call builder
     */
    public CreateHrisEmployeeRequestBuilder createHrisEmployee() {
        return new CreateHrisEmployeeRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an employee
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateHrisEmployeeResponse createHrisEmployee(
            CreateHrisEmployeeRequest request) throws Exception {
        RequestOperation<CreateHrisEmployeeRequest, CreateHrisEmployeeResponse> operation
              = new CreateHrisEmployeeOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve an employee
     * 
     * @return The call builder
     */
    public GetHrisEmployeeRequestBuilder getHrisEmployee() {
        return new GetHrisEmployeeRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an employee
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetHrisEmployeeResponse getHrisEmployee(
            GetHrisEmployeeRequest request) throws Exception {
        RequestOperation<GetHrisEmployeeRequest, GetHrisEmployeeResponse> operation
              = new GetHrisEmployeeOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all employees
     * 
     * @return The call builder
     */
    public ListHrisEmployeesRequestBuilder listHrisEmployees() {
        return new ListHrisEmployeesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all employees
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListHrisEmployeesResponse listHrisEmployees(
            ListHrisEmployeesRequest request) throws Exception {
        RequestOperation<ListHrisEmployeesRequest, ListHrisEmployeesResponse> operation
              = new ListHrisEmployeesOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update an employee
     * 
     * @return The call builder
     */
    public PatchHrisEmployeeRequestBuilder patchHrisEmployee() {
        return new PatchHrisEmployeeRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an employee
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchHrisEmployeeResponse patchHrisEmployee(
            PatchHrisEmployeeRequest request) throws Exception {
        RequestOperation<PatchHrisEmployeeRequest, PatchHrisEmployeeResponse> operation
              = new PatchHrisEmployeeOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove an employee
     * 
     * @return The call builder
     */
    public RemoveHrisEmployeeRequestBuilder removeHrisEmployee() {
        return new RemoveHrisEmployeeRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an employee
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveHrisEmployeeResponse removeHrisEmployee(
            RemoveHrisEmployeeRequest request) throws Exception {
        RequestOperation<RemoveHrisEmployeeRequest, RemoveHrisEmployeeResponse> operation
              = new RemoveHrisEmployeeOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update an employee
     * 
     * @return The call builder
     */
    public UpdateHrisEmployeeRequestBuilder updateHrisEmployee() {
        return new UpdateHrisEmployeeRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an employee
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateHrisEmployeeResponse updateHrisEmployee(
            UpdateHrisEmployeeRequest request) throws Exception {
        RequestOperation<UpdateHrisEmployeeRequest, UpdateHrisEmployeeResponse> operation
              = new UpdateHrisEmployeeOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
