/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import to.unified.unified_java_sdk.models.operations.CreatePassthroughJsonRequest;
import to.unified.unified_java_sdk.models.operations.CreatePassthroughJsonRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreatePassthroughJsonResponse;
import to.unified.unified_java_sdk.models.operations.CreatePassthroughRawRequest;
import to.unified.unified_java_sdk.models.operations.CreatePassthroughRawRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreatePassthroughRawResponse;
import to.unified.unified_java_sdk.models.operations.ListPassthroughsRequest;
import to.unified.unified_java_sdk.models.operations.ListPassthroughsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListPassthroughsResponse;
import to.unified.unified_java_sdk.models.operations.PatchPassthroughJsonRequest;
import to.unified.unified_java_sdk.models.operations.PatchPassthroughJsonRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchPassthroughJsonResponse;
import to.unified.unified_java_sdk.models.operations.PatchPassthroughRawRequest;
import to.unified.unified_java_sdk.models.operations.PatchPassthroughRawRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchPassthroughRawResponse;
import to.unified.unified_java_sdk.models.operations.RemovePassthroughRequest;
import to.unified.unified_java_sdk.models.operations.RemovePassthroughRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemovePassthroughResponse;
import to.unified.unified_java_sdk.models.operations.UpdatePassthroughJsonRequest;
import to.unified.unified_java_sdk.models.operations.UpdatePassthroughJsonRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdatePassthroughJsonResponse;
import to.unified.unified_java_sdk.models.operations.UpdatePassthroughRawRequest;
import to.unified.unified_java_sdk.models.operations.UpdatePassthroughRawRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdatePassthroughRawResponse;
import to.unified.unified_java_sdk.operations.CreatePassthroughJson;
import to.unified.unified_java_sdk.operations.CreatePassthroughRaw;
import to.unified.unified_java_sdk.operations.ListPassthroughs;
import to.unified.unified_java_sdk.operations.PatchPassthroughJson;
import to.unified.unified_java_sdk.operations.PatchPassthroughRaw;
import to.unified.unified_java_sdk.operations.RemovePassthrough;
import to.unified.unified_java_sdk.operations.UpdatePassthroughJson;
import to.unified.unified_java_sdk.operations.UpdatePassthroughRaw;
import to.unified.unified_java_sdk.utils.Headers;


public class Passthrough {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncPassthrough asyncSDK;

    Passthrough(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncPassthrough(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncPassthrough async() {
        return asyncSDK;
    }

    /**
     * Passthrough POST
     * 
     * @return The call builder
     */
    public CreatePassthroughJsonRequestBuilder createPassthroughJson() {
        return new CreatePassthroughJsonRequestBuilder(sdkConfiguration);
    }

    /**
     * Passthrough POST
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreatePassthroughJsonResponse createPassthroughJson(CreatePassthroughJsonRequest request) {
        RequestOperation<CreatePassthroughJsonRequest, CreatePassthroughJsonResponse> operation
              = new CreatePassthroughJson.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Passthrough POST
     * 
     * @return The call builder
     */
    public CreatePassthroughRawRequestBuilder createPassthroughRaw() {
        return new CreatePassthroughRawRequestBuilder(sdkConfiguration);
    }

    /**
     * Passthrough POST
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreatePassthroughRawResponse createPassthroughRaw(CreatePassthroughRawRequest request) {
        RequestOperation<CreatePassthroughRawRequest, CreatePassthroughRawResponse> operation
              = new CreatePassthroughRaw.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Passthrough GET
     * 
     * @return The call builder
     */
    public ListPassthroughsRequestBuilder listPassthroughs() {
        return new ListPassthroughsRequestBuilder(sdkConfiguration);
    }

    /**
     * Passthrough GET
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListPassthroughsResponse listPassthroughs(ListPassthroughsRequest request) {
        RequestOperation<ListPassthroughsRequest, ListPassthroughsResponse> operation
              = new ListPassthroughs.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Passthrough PUT
     * 
     * @return The call builder
     */
    public PatchPassthroughJsonRequestBuilder patchPassthroughJson() {
        return new PatchPassthroughJsonRequestBuilder(sdkConfiguration);
    }

    /**
     * Passthrough PUT
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchPassthroughJsonResponse patchPassthroughJson(PatchPassthroughJsonRequest request) {
        RequestOperation<PatchPassthroughJsonRequest, PatchPassthroughJsonResponse> operation
              = new PatchPassthroughJson.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Passthrough PUT
     * 
     * @return The call builder
     */
    public PatchPassthroughRawRequestBuilder patchPassthroughRaw() {
        return new PatchPassthroughRawRequestBuilder(sdkConfiguration);
    }

    /**
     * Passthrough PUT
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchPassthroughRawResponse patchPassthroughRaw(PatchPassthroughRawRequest request) {
        RequestOperation<PatchPassthroughRawRequest, PatchPassthroughRawResponse> operation
              = new PatchPassthroughRaw.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Passthrough DELETE
     * 
     * @return The call builder
     */
    public RemovePassthroughRequestBuilder removePassthrough() {
        return new RemovePassthroughRequestBuilder(sdkConfiguration);
    }

    /**
     * Passthrough DELETE
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemovePassthroughResponse removePassthrough(RemovePassthroughRequest request) {
        RequestOperation<RemovePassthroughRequest, RemovePassthroughResponse> operation
              = new RemovePassthrough.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Passthrough PUT
     * 
     * @return The call builder
     */
    public UpdatePassthroughJsonRequestBuilder updatePassthroughJson() {
        return new UpdatePassthroughJsonRequestBuilder(sdkConfiguration);
    }

    /**
     * Passthrough PUT
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdatePassthroughJsonResponse updatePassthroughJson(UpdatePassthroughJsonRequest request) {
        RequestOperation<UpdatePassthroughJsonRequest, UpdatePassthroughJsonResponse> operation
              = new UpdatePassthroughJson.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Passthrough PUT
     * 
     * @return The call builder
     */
    public UpdatePassthroughRawRequestBuilder updatePassthroughRaw() {
        return new UpdatePassthroughRawRequestBuilder(sdkConfiguration);
    }

    /**
     * Passthrough PUT
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdatePassthroughRawResponse updatePassthroughRaw(UpdatePassthroughRawRequest request) {
        RequestOperation<UpdatePassthroughRawRequest, UpdatePassthroughRawResponse> operation
              = new UpdatePassthroughRaw.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
