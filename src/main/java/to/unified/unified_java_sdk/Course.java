/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import java.util.List;
import java.util.Optional;
import to.unified.unified_java_sdk.models.operations.CreateLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.CreateLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.GetLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.ListLmsCoursesRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsCoursesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListLmsCoursesResponse;
import to.unified.unified_java_sdk.models.operations.PatchLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.RemoveLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.UpdateLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateLmsCourseResponse;
import to.unified.unified_java_sdk.operations.CreateLmsCourseOperation;
import to.unified.unified_java_sdk.operations.GetLmsCourseOperation;
import to.unified.unified_java_sdk.operations.ListLmsCoursesOperation;
import to.unified.unified_java_sdk.operations.PatchLmsCourseOperation;
import to.unified.unified_java_sdk.operations.RemoveLmsCourseOperation;
import to.unified.unified_java_sdk.operations.UpdateLmsCourseOperation;


public class Course {
    private final SDKConfiguration sdkConfiguration;

    Course(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * Create a course
     * 
     * @return The call builder
     */
    public CreateLmsCourseRequestBuilder createLmsCourse() {
        return new CreateLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateLmsCourseResponse createLmsCourse(CreateLmsCourseRequest request) throws Exception {
        RequestOperation<CreateLmsCourseRequest, CreateLmsCourseResponse> operation
              = new CreateLmsCourseOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a course
     * 
     * @return The call builder
     */
    public GetLmsCourseRequestBuilder getLmsCourse() {
        return new GetLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetLmsCourseResponse getLmsCourse(GetLmsCourseRequest request) throws Exception {
        RequestOperation<GetLmsCourseRequest, GetLmsCourseResponse> operation
              = new GetLmsCourseOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all courses
     * 
     * @return The call builder
     */
    public ListLmsCoursesRequestBuilder listLmsCourses() {
        return new ListLmsCoursesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all courses
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListLmsCoursesResponse listLmsCourses(ListLmsCoursesRequest request) throws Exception {
        RequestOperation<ListLmsCoursesRequest, ListLmsCoursesResponse> operation
              = new ListLmsCoursesOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a course
     * 
     * @return The call builder
     */
    public PatchLmsCourseRequestBuilder patchLmsCourse() {
        return new PatchLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchLmsCourseResponse patchLmsCourse(PatchLmsCourseRequest request) throws Exception {
        RequestOperation<PatchLmsCourseRequest, PatchLmsCourseResponse> operation
              = new PatchLmsCourseOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a course
     * 
     * @return The call builder
     */
    public RemoveLmsCourseRequestBuilder removeLmsCourse() {
        return new RemoveLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveLmsCourseResponse removeLmsCourse(RemoveLmsCourseRequest request) throws Exception {
        RequestOperation<RemoveLmsCourseRequest, RemoveLmsCourseResponse> operation
              = new RemoveLmsCourseOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a course
     * 
     * @return The call builder
     */
    public UpdateLmsCourseRequestBuilder updateLmsCourse() {
        return new UpdateLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateLmsCourseResponse updateLmsCourse(UpdateLmsCourseRequest request) throws Exception {
        RequestOperation<UpdateLmsCourseRequest, UpdateLmsCourseResponse> operation
              = new UpdateLmsCourseOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
