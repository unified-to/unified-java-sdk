/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import java.util.List;
import java.util.Optional;
import to.unified.unified_java_sdk.models.operations.CreateCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.CreateHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.CreateHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.GetAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.GetCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.GetHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.ListAtsCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAtsCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.ListCrmCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCrmCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.ListEnrichCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.ListEnrichCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListEnrichCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.ListHrisCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListHrisCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.PatchCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.PatchHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.RemoveHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.UpdateHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateHrisCompanyResponse;
import to.unified.unified_java_sdk.operations.CreateCrmCompanyOperation;
import to.unified.unified_java_sdk.operations.CreateHrisCompanyOperation;
import to.unified.unified_java_sdk.operations.GetAtsCompanyOperation;
import to.unified.unified_java_sdk.operations.GetCrmCompanyOperation;
import to.unified.unified_java_sdk.operations.GetHrisCompanyOperation;
import to.unified.unified_java_sdk.operations.ListAtsCompaniesOperation;
import to.unified.unified_java_sdk.operations.ListCrmCompaniesOperation;
import to.unified.unified_java_sdk.operations.ListEnrichCompaniesOperation;
import to.unified.unified_java_sdk.operations.ListHrisCompaniesOperation;
import to.unified.unified_java_sdk.operations.PatchCrmCompanyOperation;
import to.unified.unified_java_sdk.operations.PatchHrisCompanyOperation;
import to.unified.unified_java_sdk.operations.RemoveCrmCompanyOperation;
import to.unified.unified_java_sdk.operations.RemoveHrisCompanyOperation;
import to.unified.unified_java_sdk.operations.UpdateCrmCompanyOperation;
import to.unified.unified_java_sdk.operations.UpdateHrisCompanyOperation;


public class Company {
    private final SDKConfiguration sdkConfiguration;

    Company(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a company
     * 
     * @return The call builder
     */
    public CreateCrmCompanyRequestBuilder createCrmCompany() {
        return new CreateCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCrmCompanyResponse createCrmCompany(
            CreateCrmCompanyRequest request) throws Exception {
        RequestOperation<CreateCrmCompanyRequest, CreateCrmCompanyResponse> operation
              = new CreateCrmCompanyOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create a company
     * 
     * @return The call builder
     */
    public CreateHrisCompanyRequestBuilder createHrisCompany() {
        return new CreateHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateHrisCompanyResponse createHrisCompany(
            CreateHrisCompanyRequest request) throws Exception {
        RequestOperation<CreateHrisCompanyRequest, CreateHrisCompanyResponse> operation
              = new CreateHrisCompanyOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve a company
     * 
     * @return The call builder
     */
    public GetAtsCompanyRequestBuilder getAtsCompany() {
        return new GetAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAtsCompanyResponse getAtsCompany(
            GetAtsCompanyRequest request) throws Exception {
        RequestOperation<GetAtsCompanyRequest, GetAtsCompanyResponse> operation
              = new GetAtsCompanyOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve a company
     * 
     * @return The call builder
     */
    public GetCrmCompanyRequestBuilder getCrmCompany() {
        return new GetCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCrmCompanyResponse getCrmCompany(
            GetCrmCompanyRequest request) throws Exception {
        RequestOperation<GetCrmCompanyRequest, GetCrmCompanyResponse> operation
              = new GetCrmCompanyOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve a company
     * 
     * @return The call builder
     */
    public GetHrisCompanyRequestBuilder getHrisCompany() {
        return new GetHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetHrisCompanyResponse getHrisCompany(
            GetHrisCompanyRequest request) throws Exception {
        RequestOperation<GetHrisCompanyRequest, GetHrisCompanyResponse> operation
              = new GetHrisCompanyOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all companies
     * 
     * @return The call builder
     */
    public ListAtsCompaniesRequestBuilder listAtsCompanies() {
        return new ListAtsCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all companies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAtsCompaniesResponse listAtsCompanies(
            ListAtsCompaniesRequest request) throws Exception {
        RequestOperation<ListAtsCompaniesRequest, ListAtsCompaniesResponse> operation
              = new ListAtsCompaniesOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all companies
     * 
     * @return The call builder
     */
    public ListCrmCompaniesRequestBuilder listCrmCompanies() {
        return new ListCrmCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all companies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCrmCompaniesResponse listCrmCompanies(
            ListCrmCompaniesRequest request) throws Exception {
        RequestOperation<ListCrmCompaniesRequest, ListCrmCompaniesResponse> operation
              = new ListCrmCompaniesOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve enrichment information for a company
     * 
     * @return The call builder
     */
    public ListEnrichCompaniesRequestBuilder listEnrichCompanies() {
        return new ListEnrichCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve enrichment information for a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListEnrichCompaniesResponse listEnrichCompanies(
            ListEnrichCompaniesRequest request) throws Exception {
        RequestOperation<ListEnrichCompaniesRequest, ListEnrichCompaniesResponse> operation
              = new ListEnrichCompaniesOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all companies
     * 
     * @return The call builder
     */
    public ListHrisCompaniesRequestBuilder listHrisCompanies() {
        return new ListHrisCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all companies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListHrisCompaniesResponse listHrisCompanies(
            ListHrisCompaniesRequest request) throws Exception {
        RequestOperation<ListHrisCompaniesRequest, ListHrisCompaniesResponse> operation
              = new ListHrisCompaniesOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a company
     * 
     * @return The call builder
     */
    public PatchCrmCompanyRequestBuilder patchCrmCompany() {
        return new PatchCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCrmCompanyResponse patchCrmCompany(
            PatchCrmCompanyRequest request) throws Exception {
        RequestOperation<PatchCrmCompanyRequest, PatchCrmCompanyResponse> operation
              = new PatchCrmCompanyOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a company
     * 
     * @return The call builder
     */
    public PatchHrisCompanyRequestBuilder patchHrisCompany() {
        return new PatchHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchHrisCompanyResponse patchHrisCompany(
            PatchHrisCompanyRequest request) throws Exception {
        RequestOperation<PatchHrisCompanyRequest, PatchHrisCompanyResponse> operation
              = new PatchHrisCompanyOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove a company
     * 
     * @return The call builder
     */
    public RemoveCrmCompanyRequestBuilder removeCrmCompany() {
        return new RemoveCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCrmCompanyResponse removeCrmCompany(
            RemoveCrmCompanyRequest request) throws Exception {
        RequestOperation<RemoveCrmCompanyRequest, RemoveCrmCompanyResponse> operation
              = new RemoveCrmCompanyOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove a company
     * 
     * @return The call builder
     */
    public RemoveHrisCompanyRequestBuilder removeHrisCompany() {
        return new RemoveHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveHrisCompanyResponse removeHrisCompany(
            RemoveHrisCompanyRequest request) throws Exception {
        RequestOperation<RemoveHrisCompanyRequest, RemoveHrisCompanyResponse> operation
              = new RemoveHrisCompanyOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a company
     * 
     * @return The call builder
     */
    public UpdateCrmCompanyRequestBuilder updateCrmCompany() {
        return new UpdateCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCrmCompanyResponse updateCrmCompany(
            UpdateCrmCompanyRequest request) throws Exception {
        RequestOperation<UpdateCrmCompanyRequest, UpdateCrmCompanyResponse> operation
              = new UpdateCrmCompanyOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a company
     * 
     * @return The call builder
     */
    public UpdateHrisCompanyRequestBuilder updateHrisCompany() {
        return new UpdateHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateHrisCompanyResponse updateHrisCompany(
            UpdateHrisCompanyRequest request) throws Exception {
        RequestOperation<UpdateHrisCompanyRequest, UpdateHrisCompanyResponse> operation
              = new UpdateHrisCompanyOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
