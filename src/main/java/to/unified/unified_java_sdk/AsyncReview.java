/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceReviewsRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceReviewResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceReviewResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceReviewsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceReviewsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceReviewResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceReviewResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceReviewResponse;
import to.unified.unified_java_sdk.operations.CreateCommerceReview;
import to.unified.unified_java_sdk.operations.GetCommerceReview;
import to.unified.unified_java_sdk.operations.ListCommerceReviews;
import to.unified.unified_java_sdk.operations.PatchCommerceReview;
import to.unified.unified_java_sdk.operations.RemoveCommerceReview;
import to.unified.unified_java_sdk.operations.UpdateCommerceReview;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncReview {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Review syncSDK;

    AsyncReview(Review syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Review sync() {
        return syncSDK;
    }


    /**
     * Create a review
     * 
     * @return The async call builder
     */
    public CreateCommerceReviewRequestBuilder createCommerceReview() {
        return new CreateCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCommerceReviewResponse&gt; - The async response
     */
    public CompletableFuture<CreateCommerceReviewResponse> createCommerceReview(CreateCommerceReviewRequest request) {
        AsyncRequestOperation<CreateCommerceReviewRequest, CreateCommerceReviewResponse> operation
              = new CreateCommerceReview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a review
     * 
     * @return The async call builder
     */
    public GetCommerceReviewRequestBuilder getCommerceReview() {
        return new GetCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCommerceReviewResponse&gt; - The async response
     */
    public CompletableFuture<GetCommerceReviewResponse> getCommerceReview(GetCommerceReviewRequest request) {
        AsyncRequestOperation<GetCommerceReviewRequest, GetCommerceReviewResponse> operation
              = new GetCommerceReview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all reviews
     * 
     * @return The async call builder
     */
    public ListCommerceReviewsRequestBuilder listCommerceReviews() {
        return new ListCommerceReviewsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all reviews
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCommerceReviewsResponse&gt; - The async response
     */
    public CompletableFuture<ListCommerceReviewsResponse> listCommerceReviews(ListCommerceReviewsRequest request) {
        AsyncRequestOperation<ListCommerceReviewsRequest, ListCommerceReviewsResponse> operation
              = new ListCommerceReviews.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a review
     * 
     * @return The async call builder
     */
    public PatchCommerceReviewRequestBuilder patchCommerceReview() {
        return new PatchCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCommerceReviewResponse&gt; - The async response
     */
    public CompletableFuture<PatchCommerceReviewResponse> patchCommerceReview(PatchCommerceReviewRequest request) {
        AsyncRequestOperation<PatchCommerceReviewRequest, PatchCommerceReviewResponse> operation
              = new PatchCommerceReview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a review
     * 
     * @return The async call builder
     */
    public RemoveCommerceReviewRequestBuilder removeCommerceReview() {
        return new RemoveCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCommerceReviewResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCommerceReviewResponse> removeCommerceReview(RemoveCommerceReviewRequest request) {
        AsyncRequestOperation<RemoveCommerceReviewRequest, RemoveCommerceReviewResponse> operation
              = new RemoveCommerceReview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a review
     * 
     * @return The async call builder
     */
    public UpdateCommerceReviewRequestBuilder updateCommerceReview() {
        return new UpdateCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCommerceReviewResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCommerceReviewResponse> updateCommerceReview(UpdateCommerceReviewRequest request) {
        AsyncRequestOperation<UpdateCommerceReviewRequest, UpdateCommerceReviewResponse> operation
              = new UpdateCommerceReview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
