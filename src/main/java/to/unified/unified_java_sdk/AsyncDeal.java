/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmDealsRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCrmDealsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCrmDealsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmDealResponse;
import to.unified.unified_java_sdk.operations.CreateCrmDeal;
import to.unified.unified_java_sdk.operations.GetCrmDeal;
import to.unified.unified_java_sdk.operations.ListCrmDeals;
import to.unified.unified_java_sdk.operations.PatchCrmDeal;
import to.unified.unified_java_sdk.operations.RemoveCrmDeal;
import to.unified.unified_java_sdk.operations.UpdateCrmDeal;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncDeal {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Deal syncSDK;

    AsyncDeal(Deal syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Deal sync() {
        return syncSDK;
    }


    /**
     * Create a deal
     * 
     * @return The async call builder
     */
    public CreateCrmDealRequestBuilder createCrmDeal() {
        return new CreateCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateCrmDealResponse>} - The async response
     */
    public CompletableFuture<CreateCrmDealResponse> createCrmDeal(CreateCrmDealRequest request) {
        AsyncRequestOperation<CreateCrmDealRequest, CreateCrmDealResponse> operation
              = new CreateCrmDeal.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a deal
     * 
     * @return The async call builder
     */
    public GetCrmDealRequestBuilder getCrmDeal() {
        return new GetCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetCrmDealResponse>} - The async response
     */
    public CompletableFuture<GetCrmDealResponse> getCrmDeal(GetCrmDealRequest request) {
        AsyncRequestOperation<GetCrmDealRequest, GetCrmDealResponse> operation
              = new GetCrmDeal.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all deals
     * 
     * @return The async call builder
     */
    public ListCrmDealsRequestBuilder listCrmDeals() {
        return new ListCrmDealsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all deals
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListCrmDealsResponse>} - The async response
     */
    public CompletableFuture<ListCrmDealsResponse> listCrmDeals(ListCrmDealsRequest request) {
        AsyncRequestOperation<ListCrmDealsRequest, ListCrmDealsResponse> operation
              = new ListCrmDeals.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a deal
     * 
     * @return The async call builder
     */
    public PatchCrmDealRequestBuilder patchCrmDeal() {
        return new PatchCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchCrmDealResponse>} - The async response
     */
    public CompletableFuture<PatchCrmDealResponse> patchCrmDeal(PatchCrmDealRequest request) {
        AsyncRequestOperation<PatchCrmDealRequest, PatchCrmDealResponse> operation
              = new PatchCrmDeal.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a deal
     * 
     * @return The async call builder
     */
    public RemoveCrmDealRequestBuilder removeCrmDeal() {
        return new RemoveCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveCrmDealResponse>} - The async response
     */
    public CompletableFuture<RemoveCrmDealResponse> removeCrmDeal(RemoveCrmDealRequest request) {
        AsyncRequestOperation<RemoveCrmDealRequest, RemoveCrmDealResponse> operation
              = new RemoveCrmDeal.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a deal
     * 
     * @return The async call builder
     */
    public UpdateCrmDealRequestBuilder updateCrmDeal() {
        return new UpdateCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateCrmDealResponse>} - The async response
     */
    public CompletableFuture<UpdateCrmDealResponse> updateCrmDeal(UpdateCrmDealRequest request) {
        AsyncRequestOperation<UpdateCrmDealRequest, UpdateCrmDealResponse> operation
              = new UpdateCrmDeal.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
