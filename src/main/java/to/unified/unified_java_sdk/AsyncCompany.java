/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.CreateHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.ListEnrichCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.GetHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCrmCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCrmCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListEnrichCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListEnrichCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListHrisCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListHrisCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateHrisCompanyResponse;
import to.unified.unified_java_sdk.operations.CreateAtsCompany;
import to.unified.unified_java_sdk.operations.CreateCrmCompany;
import to.unified.unified_java_sdk.operations.CreateHrisCompany;
import to.unified.unified_java_sdk.operations.GetAtsCompany;
import to.unified.unified_java_sdk.operations.GetCrmCompany;
import to.unified.unified_java_sdk.operations.GetHrisCompany;
import to.unified.unified_java_sdk.operations.ListAtsCompanies;
import to.unified.unified_java_sdk.operations.ListCrmCompanies;
import to.unified.unified_java_sdk.operations.ListEnrichCompanies;
import to.unified.unified_java_sdk.operations.ListHrisCompanies;
import to.unified.unified_java_sdk.operations.PatchAtsCompany;
import to.unified.unified_java_sdk.operations.PatchCrmCompany;
import to.unified.unified_java_sdk.operations.PatchHrisCompany;
import to.unified.unified_java_sdk.operations.RemoveAtsCompany;
import to.unified.unified_java_sdk.operations.RemoveCrmCompany;
import to.unified.unified_java_sdk.operations.RemoveHrisCompany;
import to.unified.unified_java_sdk.operations.UpdateAtsCompany;
import to.unified.unified_java_sdk.operations.UpdateCrmCompany;
import to.unified.unified_java_sdk.operations.UpdateHrisCompany;


public class AsyncCompany {
    private final SDKConfiguration sdkConfiguration;
    private final Company syncSDK;

    AsyncCompany(Company syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Company sync() {
        return syncSDK;
    }


    /**
     * Create a company
     * 
     * @return The async call builder
     */
    public CreateAtsCompanyRequestBuilder createAtsCompany() {
        return new CreateAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateAtsCompanyResponse&gt; - The async response
     */
    public CompletableFuture<CreateAtsCompanyResponse> createAtsCompany(CreateAtsCompanyRequest request) {
        AsyncRequestOperation<CreateAtsCompanyRequest, CreateAtsCompanyResponse> operation
              = new CreateAtsCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a company
     * 
     * @return The async call builder
     */
    public CreateCrmCompanyRequestBuilder createCrmCompany() {
        return new CreateCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCrmCompanyResponse&gt; - The async response
     */
    public CompletableFuture<CreateCrmCompanyResponse> createCrmCompany(CreateCrmCompanyRequest request) {
        AsyncRequestOperation<CreateCrmCompanyRequest, CreateCrmCompanyResponse> operation
              = new CreateCrmCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a company
     * 
     * @return The async call builder
     */
    public CreateHrisCompanyRequestBuilder createHrisCompany() {
        return new CreateHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateHrisCompanyResponse&gt; - The async response
     */
    public CompletableFuture<CreateHrisCompanyResponse> createHrisCompany(CreateHrisCompanyRequest request) {
        AsyncRequestOperation<CreateHrisCompanyRequest, CreateHrisCompanyResponse> operation
              = new CreateHrisCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a company
     * 
     * @return The async call builder
     */
    public GetAtsCompanyRequestBuilder getAtsCompany() {
        return new GetAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetAtsCompanyResponse&gt; - The async response
     */
    public CompletableFuture<GetAtsCompanyResponse> getAtsCompany(GetAtsCompanyRequest request) {
        AsyncRequestOperation<GetAtsCompanyRequest, GetAtsCompanyResponse> operation
              = new GetAtsCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a company
     * 
     * @return The async call builder
     */
    public GetCrmCompanyRequestBuilder getCrmCompany() {
        return new GetCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCrmCompanyResponse&gt; - The async response
     */
    public CompletableFuture<GetCrmCompanyResponse> getCrmCompany(GetCrmCompanyRequest request) {
        AsyncRequestOperation<GetCrmCompanyRequest, GetCrmCompanyResponse> operation
              = new GetCrmCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a company
     * 
     * @return The async call builder
     */
    public GetHrisCompanyRequestBuilder getHrisCompany() {
        return new GetHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetHrisCompanyResponse&gt; - The async response
     */
    public CompletableFuture<GetHrisCompanyResponse> getHrisCompany(GetHrisCompanyRequest request) {
        AsyncRequestOperation<GetHrisCompanyRequest, GetHrisCompanyResponse> operation
              = new GetHrisCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all companies
     * 
     * @return The async call builder
     */
    public ListAtsCompaniesRequestBuilder listAtsCompanies() {
        return new ListAtsCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all companies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListAtsCompaniesResponse&gt; - The async response
     */
    public CompletableFuture<ListAtsCompaniesResponse> listAtsCompanies(ListAtsCompaniesRequest request) {
        AsyncRequestOperation<ListAtsCompaniesRequest, ListAtsCompaniesResponse> operation
              = new ListAtsCompanies.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all companies
     * 
     * @return The async call builder
     */
    public ListCrmCompaniesRequestBuilder listCrmCompanies() {
        return new ListCrmCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all companies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCrmCompaniesResponse&gt; - The async response
     */
    public CompletableFuture<ListCrmCompaniesResponse> listCrmCompanies(ListCrmCompaniesRequest request) {
        AsyncRequestOperation<ListCrmCompaniesRequest, ListCrmCompaniesResponse> operation
              = new ListCrmCompanies.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve enrichment information for a company
     * 
     * @return The async call builder
     */
    public ListEnrichCompaniesRequestBuilder listEnrichCompanies() {
        return new ListEnrichCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve enrichment information for a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListEnrichCompaniesResponse&gt; - The async response
     */
    public CompletableFuture<ListEnrichCompaniesResponse> listEnrichCompanies(ListEnrichCompaniesRequest request) {
        AsyncRequestOperation<ListEnrichCompaniesRequest, ListEnrichCompaniesResponse> operation
              = new ListEnrichCompanies.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all companies
     * 
     * @return The async call builder
     */
    public ListHrisCompaniesRequestBuilder listHrisCompanies() {
        return new ListHrisCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all companies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListHrisCompaniesResponse&gt; - The async response
     */
    public CompletableFuture<ListHrisCompaniesResponse> listHrisCompanies(ListHrisCompaniesRequest request) {
        AsyncRequestOperation<ListHrisCompaniesRequest, ListHrisCompaniesResponse> operation
              = new ListHrisCompanies.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a company
     * 
     * @return The async call builder
     */
    public PatchAtsCompanyRequestBuilder patchAtsCompany() {
        return new PatchAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchAtsCompanyResponse&gt; - The async response
     */
    public CompletableFuture<PatchAtsCompanyResponse> patchAtsCompany(PatchAtsCompanyRequest request) {
        AsyncRequestOperation<PatchAtsCompanyRequest, PatchAtsCompanyResponse> operation
              = new PatchAtsCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a company
     * 
     * @return The async call builder
     */
    public PatchCrmCompanyRequestBuilder patchCrmCompany() {
        return new PatchCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCrmCompanyResponse&gt; - The async response
     */
    public CompletableFuture<PatchCrmCompanyResponse> patchCrmCompany(PatchCrmCompanyRequest request) {
        AsyncRequestOperation<PatchCrmCompanyRequest, PatchCrmCompanyResponse> operation
              = new PatchCrmCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a company
     * 
     * @return The async call builder
     */
    public PatchHrisCompanyRequestBuilder patchHrisCompany() {
        return new PatchHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchHrisCompanyResponse&gt; - The async response
     */
    public CompletableFuture<PatchHrisCompanyResponse> patchHrisCompany(PatchHrisCompanyRequest request) {
        AsyncRequestOperation<PatchHrisCompanyRequest, PatchHrisCompanyResponse> operation
              = new PatchHrisCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a company
     * 
     * @return The async call builder
     */
    public RemoveAtsCompanyRequestBuilder removeAtsCompany() {
        return new RemoveAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveAtsCompanyResponse&gt; - The async response
     */
    public CompletableFuture<RemoveAtsCompanyResponse> removeAtsCompany(RemoveAtsCompanyRequest request) {
        AsyncRequestOperation<RemoveAtsCompanyRequest, RemoveAtsCompanyResponse> operation
              = new RemoveAtsCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a company
     * 
     * @return The async call builder
     */
    public RemoveCrmCompanyRequestBuilder removeCrmCompany() {
        return new RemoveCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCrmCompanyResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCrmCompanyResponse> removeCrmCompany(RemoveCrmCompanyRequest request) {
        AsyncRequestOperation<RemoveCrmCompanyRequest, RemoveCrmCompanyResponse> operation
              = new RemoveCrmCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a company
     * 
     * @return The async call builder
     */
    public RemoveHrisCompanyRequestBuilder removeHrisCompany() {
        return new RemoveHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveHrisCompanyResponse&gt; - The async response
     */
    public CompletableFuture<RemoveHrisCompanyResponse> removeHrisCompany(RemoveHrisCompanyRequest request) {
        AsyncRequestOperation<RemoveHrisCompanyRequest, RemoveHrisCompanyResponse> operation
              = new RemoveHrisCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a company
     * 
     * @return The async call builder
     */
    public UpdateAtsCompanyRequestBuilder updateAtsCompany() {
        return new UpdateAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateAtsCompanyResponse&gt; - The async response
     */
    public CompletableFuture<UpdateAtsCompanyResponse> updateAtsCompany(UpdateAtsCompanyRequest request) {
        AsyncRequestOperation<UpdateAtsCompanyRequest, UpdateAtsCompanyResponse> operation
              = new UpdateAtsCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a company
     * 
     * @return The async call builder
     */
    public UpdateCrmCompanyRequestBuilder updateCrmCompany() {
        return new UpdateCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCrmCompanyResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCrmCompanyResponse> updateCrmCompany(UpdateCrmCompanyRequest request) {
        AsyncRequestOperation<UpdateCrmCompanyRequest, UpdateCrmCompanyResponse> operation
              = new UpdateCrmCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a company
     * 
     * @return The async call builder
     */
    public UpdateHrisCompanyRequestBuilder updateHrisCompany() {
        return new UpdateHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateHrisCompanyResponse&gt; - The async response
     */
    public CompletableFuture<UpdateHrisCompanyResponse> updateHrisCompany(UpdateHrisCompanyRequest request) {
        AsyncRequestOperation<UpdateHrisCompanyRequest, UpdateHrisCompanyResponse> operation
              = new UpdateHrisCompany.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
