/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsJobsRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsJobsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsJobsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsJobResponse;
import to.unified.unified_java_sdk.operations.CreateAtsJob;
import to.unified.unified_java_sdk.operations.GetAtsJob;
import to.unified.unified_java_sdk.operations.ListAtsJobs;
import to.unified.unified_java_sdk.operations.PatchAtsJob;
import to.unified.unified_java_sdk.operations.RemoveAtsJob;
import to.unified.unified_java_sdk.operations.UpdateAtsJob;


public class AsyncJob {
    private final SDKConfiguration sdkConfiguration;
    private final Job syncSDK;

    AsyncJob(Job syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Job sync() {
        return syncSDK;
    }


    /**
     * Create a job
     * 
     * @return The async call builder
     */
    public CreateAtsJobRequestBuilder createAtsJob() {
        return new CreateAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateAtsJobResponse&gt; - The async response
     */
    public CompletableFuture<CreateAtsJobResponse> createAtsJob(CreateAtsJobRequest request) {
        AsyncRequestOperation<CreateAtsJobRequest, CreateAtsJobResponse> operation
              = new CreateAtsJob.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a job
     * 
     * @return The async call builder
     */
    public GetAtsJobRequestBuilder getAtsJob() {
        return new GetAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetAtsJobResponse&gt; - The async response
     */
    public CompletableFuture<GetAtsJobResponse> getAtsJob(GetAtsJobRequest request) {
        AsyncRequestOperation<GetAtsJobRequest, GetAtsJobResponse> operation
              = new GetAtsJob.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all jobs
     * 
     * @return The async call builder
     */
    public ListAtsJobsRequestBuilder listAtsJobs() {
        return new ListAtsJobsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all jobs
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListAtsJobsResponse&gt; - The async response
     */
    public CompletableFuture<ListAtsJobsResponse> listAtsJobs(ListAtsJobsRequest request) {
        AsyncRequestOperation<ListAtsJobsRequest, ListAtsJobsResponse> operation
              = new ListAtsJobs.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a job
     * 
     * @return The async call builder
     */
    public PatchAtsJobRequestBuilder patchAtsJob() {
        return new PatchAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchAtsJobResponse&gt; - The async response
     */
    public CompletableFuture<PatchAtsJobResponse> patchAtsJob(PatchAtsJobRequest request) {
        AsyncRequestOperation<PatchAtsJobRequest, PatchAtsJobResponse> operation
              = new PatchAtsJob.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a job
     * 
     * @return The async call builder
     */
    public RemoveAtsJobRequestBuilder removeAtsJob() {
        return new RemoveAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveAtsJobResponse&gt; - The async response
     */
    public CompletableFuture<RemoveAtsJobResponse> removeAtsJob(RemoveAtsJobRequest request) {
        AsyncRequestOperation<RemoveAtsJobRequest, RemoveAtsJobResponse> operation
              = new RemoveAtsJob.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a job
     * 
     * @return The async call builder
     */
    public UpdateAtsJobRequestBuilder updateAtsJob() {
        return new UpdateAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateAtsJobResponse&gt; - The async response
     */
    public CompletableFuture<UpdateAtsJobResponse> updateAtsJob(UpdateAtsJobRequest request) {
        AsyncRequestOperation<UpdateAtsJobRequest, UpdateAtsJobResponse> operation
              = new UpdateAtsJob.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
