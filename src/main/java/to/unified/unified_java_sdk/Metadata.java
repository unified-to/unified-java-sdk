/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateMetadataMetadataRequest;
import to.unified.unified_java_sdk.models.operations.CreateMetadataMetadataRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateMetadataMetadataResponse;
import to.unified.unified_java_sdk.models.operations.GetMetadataMetadataRequest;
import to.unified.unified_java_sdk.models.operations.GetMetadataMetadataRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetMetadataMetadataResponse;
import to.unified.unified_java_sdk.models.operations.ListMetadataMetadatasRequest;
import to.unified.unified_java_sdk.models.operations.ListMetadataMetadatasRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListMetadataMetadatasResponse;
import to.unified.unified_java_sdk.models.operations.PatchMetadataMetadataRequest;
import to.unified.unified_java_sdk.models.operations.PatchMetadataMetadataRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchMetadataMetadataResponse;
import to.unified.unified_java_sdk.models.operations.RemoveMetadataMetadataRequest;
import to.unified.unified_java_sdk.models.operations.RemoveMetadataMetadataRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveMetadataMetadataResponse;
import to.unified.unified_java_sdk.models.operations.UpdateMetadataMetadataRequest;
import to.unified.unified_java_sdk.models.operations.UpdateMetadataMetadataRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateMetadataMetadataResponse;
import to.unified.unified_java_sdk.operations.CreateMetadataMetadata;
import to.unified.unified_java_sdk.operations.GetMetadataMetadata;
import to.unified.unified_java_sdk.operations.ListMetadataMetadatas;
import to.unified.unified_java_sdk.operations.PatchMetadataMetadata;
import to.unified.unified_java_sdk.operations.RemoveMetadataMetadata;
import to.unified.unified_java_sdk.operations.UpdateMetadataMetadata;


public class Metadata {
    private final SDKConfiguration sdkConfiguration;

    Metadata(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a metadata
     * 
     * @return The call builder
     */
    public CreateMetadataMetadataRequestBuilder createMetadataMetadata() {
        return new CreateMetadataMetadataRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a metadata
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateMetadataMetadataResponse createMetadataMetadata(CreateMetadataMetadataRequest request) throws Exception {
        RequestOperation<CreateMetadataMetadataRequest, CreateMetadataMetadataResponse> operation
              = new CreateMetadataMetadata.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a metadata
     * 
     * @return The call builder
     */
    public GetMetadataMetadataRequestBuilder getMetadataMetadata() {
        return new GetMetadataMetadataRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a metadata
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetMetadataMetadataResponse getMetadataMetadata(GetMetadataMetadataRequest request) throws Exception {
        RequestOperation<GetMetadataMetadataRequest, GetMetadataMetadataResponse> operation
              = new GetMetadataMetadata.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all metadatas
     * 
     * @return The call builder
     */
    public ListMetadataMetadatasRequestBuilder listMetadataMetadatas() {
        return new ListMetadataMetadatasRequestBuilder(sdkConfiguration);
    }

    /**
     * List all metadatas
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListMetadataMetadatasResponse listMetadataMetadatas(ListMetadataMetadatasRequest request) throws Exception {
        RequestOperation<ListMetadataMetadatasRequest, ListMetadataMetadatasResponse> operation
              = new ListMetadataMetadatas.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a metadata
     * 
     * @return The call builder
     */
    public PatchMetadataMetadataRequestBuilder patchMetadataMetadata() {
        return new PatchMetadataMetadataRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a metadata
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchMetadataMetadataResponse patchMetadataMetadata(PatchMetadataMetadataRequest request) throws Exception {
        RequestOperation<PatchMetadataMetadataRequest, PatchMetadataMetadataResponse> operation
              = new PatchMetadataMetadata.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a metadata
     * 
     * @return The call builder
     */
    public RemoveMetadataMetadataRequestBuilder removeMetadataMetadata() {
        return new RemoveMetadataMetadataRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a metadata
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveMetadataMetadataResponse removeMetadataMetadata(RemoveMetadataMetadataRequest request) throws Exception {
        RequestOperation<RemoveMetadataMetadataRequest, RemoveMetadataMetadataResponse> operation
              = new RemoveMetadataMetadata.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a metadata
     * 
     * @return The call builder
     */
    public UpdateMetadataMetadataRequestBuilder updateMetadataMetadata() {
        return new UpdateMetadataMetadataRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a metadata
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateMetadataMetadataResponse updateMetadataMetadata(UpdateMetadataMetadataRequest request) throws Exception {
        RequestOperation<UpdateMetadataMetadataRequest, UpdateMetadataMetadataResponse> operation
              = new UpdateMetadataMetadata.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
