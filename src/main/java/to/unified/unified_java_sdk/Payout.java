/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import to.unified.unified_java_sdk.models.operations.GetPaymentPayoutRequest;
import to.unified.unified_java_sdk.models.operations.GetPaymentPayoutRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetPaymentPayoutResponse;
import to.unified.unified_java_sdk.models.operations.ListPaymentPayoutsRequest;
import to.unified.unified_java_sdk.models.operations.ListPaymentPayoutsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListPaymentPayoutsResponse;
import to.unified.unified_java_sdk.operations.GetPaymentPayout;
import to.unified.unified_java_sdk.operations.ListPaymentPayouts;
import to.unified.unified_java_sdk.utils.Headers;


public class Payout {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncPayout asyncSDK;

    Payout(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncPayout(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncPayout async() {
        return asyncSDK;
    }

    /**
     * Retrieve a payout
     * 
     * @return The call builder
     */
    public GetPaymentPayoutRequestBuilder getPaymentPayout() {
        return new GetPaymentPayoutRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a payout
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetPaymentPayoutResponse getPaymentPayout(GetPaymentPayoutRequest request) {
        RequestOperation<GetPaymentPayoutRequest, GetPaymentPayoutResponse> operation
              = new GetPaymentPayout.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all payouts
     * 
     * @return The call builder
     */
    public ListPaymentPayoutsRequestBuilder listPaymentPayouts() {
        return new ListPaymentPayoutsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all payouts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListPaymentPayoutsResponse listPaymentPayouts(ListPaymentPayoutsRequest request) {
        RequestOperation<ListPaymentPayoutsRequest, ListPaymentPayoutsResponse> operation
              = new ListPaymentPayouts.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
