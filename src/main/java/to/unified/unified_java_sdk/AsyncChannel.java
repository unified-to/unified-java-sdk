/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.GetMessagingChannelRequest;
import to.unified.unified_java_sdk.models.operations.ListMessagingChannelsRequest;
import to.unified.unified_java_sdk.models.operations.async.GetMessagingChannelRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetMessagingChannelResponse;
import to.unified.unified_java_sdk.models.operations.async.ListMessagingChannelsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListMessagingChannelsResponse;
import to.unified.unified_java_sdk.operations.GetMessagingChannel;
import to.unified.unified_java_sdk.operations.ListMessagingChannels;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncChannel {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Channel syncSDK;

    AsyncChannel(Channel syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Channel sync() {
        return syncSDK;
    }


    /**
     * Retrieve a channel
     * 
     * @return The async call builder
     */
    public GetMessagingChannelRequestBuilder getMessagingChannel() {
        return new GetMessagingChannelRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a channel
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetMessagingChannelResponse&gt; - The async response
     */
    public CompletableFuture<GetMessagingChannelResponse> getMessagingChannel(GetMessagingChannelRequest request) {
        AsyncRequestOperation<GetMessagingChannelRequest, GetMessagingChannelResponse> operation
              = new GetMessagingChannel.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all channels
     * 
     * @return The async call builder
     */
    public ListMessagingChannelsRequestBuilder listMessagingChannels() {
        return new ListMessagingChannelsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all channels
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListMessagingChannelsResponse&gt; - The async response
     */
    public CompletableFuture<ListMessagingChannelsResponse> listMessagingChannels(ListMessagingChannelsRequest request) {
        AsyncRequestOperation<ListMessagingChannelsRequest, ListMessagingChannelsResponse> operation
              = new ListMessagingChannels.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
