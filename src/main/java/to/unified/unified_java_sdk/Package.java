/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.GetVerificationPackageRequest;
import to.unified.unified_java_sdk.models.operations.GetVerificationPackageRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetVerificationPackageResponse;
import to.unified.unified_java_sdk.models.operations.ListVerificationPackagesRequest;
import to.unified.unified_java_sdk.models.operations.ListVerificationPackagesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListVerificationPackagesResponse;
import to.unified.unified_java_sdk.operations.GetVerificationPackage;
import to.unified.unified_java_sdk.operations.ListVerificationPackages;
import to.unified.unified_java_sdk.utils.Headers;


public class Package {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncPackage asyncSDK;

    Package(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncPackage(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncPackage async() {
        return asyncSDK;
    }

    /**
     * Retrieve a package
     * 
     * @return The call builder
     */
    public GetVerificationPackageRequestBuilder getVerificationPackage() {
        return new GetVerificationPackageRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a package
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetVerificationPackageResponse getVerificationPackage(GetVerificationPackageRequest request) throws Exception {
        RequestOperation<GetVerificationPackageRequest, GetVerificationPackageResponse> operation
              = new GetVerificationPackage.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all packages
     * 
     * @return The call builder
     */
    public ListVerificationPackagesRequestBuilder listVerificationPackages() {
        return new ListVerificationPackagesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all packages
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListVerificationPackagesResponse listVerificationPackages(ListVerificationPackagesRequest request) throws Exception {
        RequestOperation<ListVerificationPackagesRequest, ListVerificationPackagesResponse> operation
              = new ListVerificationPackages.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
