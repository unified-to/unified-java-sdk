/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsInstructorsRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.async.GetLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.async.ListLmsInstructorsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListLmsInstructorsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateLmsInstructorResponse;
import to.unified.unified_java_sdk.operations.CreateLmsInstructor;
import to.unified.unified_java_sdk.operations.GetLmsInstructor;
import to.unified.unified_java_sdk.operations.ListLmsInstructors;
import to.unified.unified_java_sdk.operations.PatchLmsInstructor;
import to.unified.unified_java_sdk.operations.RemoveLmsInstructor;
import to.unified.unified_java_sdk.operations.UpdateLmsInstructor;


public class AsyncInstructor {
    private final SDKConfiguration sdkConfiguration;
    private final Instructor syncSDK;

    AsyncInstructor(Instructor syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Instructor sync() {
        return syncSDK;
    }


    /**
     * Create an instructor
     * 
     * @return The async call builder
     */
    public CreateLmsInstructorRequestBuilder createLmsInstructor() {
        return new CreateLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateLmsInstructorResponse&gt; - The async response
     */
    public CompletableFuture<CreateLmsInstructorResponse> createLmsInstructor(CreateLmsInstructorRequest request) {
        AsyncRequestOperation<CreateLmsInstructorRequest, CreateLmsInstructorResponse> operation
              = new CreateLmsInstructor.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an instructor
     * 
     * @return The async call builder
     */
    public GetLmsInstructorRequestBuilder getLmsInstructor() {
        return new GetLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetLmsInstructorResponse&gt; - The async response
     */
    public CompletableFuture<GetLmsInstructorResponse> getLmsInstructor(GetLmsInstructorRequest request) {
        AsyncRequestOperation<GetLmsInstructorRequest, GetLmsInstructorResponse> operation
              = new GetLmsInstructor.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all instructors
     * 
     * @return The async call builder
     */
    public ListLmsInstructorsRequestBuilder listLmsInstructors() {
        return new ListLmsInstructorsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all instructors
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListLmsInstructorsResponse&gt; - The async response
     */
    public CompletableFuture<ListLmsInstructorsResponse> listLmsInstructors(ListLmsInstructorsRequest request) {
        AsyncRequestOperation<ListLmsInstructorsRequest, ListLmsInstructorsResponse> operation
              = new ListLmsInstructors.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an instructor
     * 
     * @return The async call builder
     */
    public PatchLmsInstructorRequestBuilder patchLmsInstructor() {
        return new PatchLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchLmsInstructorResponse&gt; - The async response
     */
    public CompletableFuture<PatchLmsInstructorResponse> patchLmsInstructor(PatchLmsInstructorRequest request) {
        AsyncRequestOperation<PatchLmsInstructorRequest, PatchLmsInstructorResponse> operation
              = new PatchLmsInstructor.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an instructor
     * 
     * @return The async call builder
     */
    public RemoveLmsInstructorRequestBuilder removeLmsInstructor() {
        return new RemoveLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveLmsInstructorResponse&gt; - The async response
     */
    public CompletableFuture<RemoveLmsInstructorResponse> removeLmsInstructor(RemoveLmsInstructorRequest request) {
        AsyncRequestOperation<RemoveLmsInstructorRequest, RemoveLmsInstructorResponse> operation
              = new RemoveLmsInstructor.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an instructor
     * 
     * @return The async call builder
     */
    public UpdateLmsInstructorRequestBuilder updateLmsInstructor() {
        return new UpdateLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateLmsInstructorResponse&gt; - The async response
     */
    public CompletableFuture<UpdateLmsInstructorResponse> updateLmsInstructor(UpdateLmsInstructorRequest request) {
        AsyncRequestOperation<UpdateLmsInstructorRequest, UpdateLmsInstructorResponse> operation
              = new UpdateLmsInstructor.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
