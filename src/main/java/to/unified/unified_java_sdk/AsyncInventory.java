/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceInventoriesRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceInventoriesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceInventoriesResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceInventoryResponse;
import to.unified.unified_java_sdk.operations.CreateCommerceInventory;
import to.unified.unified_java_sdk.operations.GetCommerceInventory;
import to.unified.unified_java_sdk.operations.ListCommerceInventories;
import to.unified.unified_java_sdk.operations.PatchCommerceInventory;
import to.unified.unified_java_sdk.operations.RemoveCommerceInventory;
import to.unified.unified_java_sdk.operations.UpdateCommerceInventory;


public class AsyncInventory {
    private final SDKConfiguration sdkConfiguration;
    private final Inventory syncSDK;

    AsyncInventory(Inventory syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Inventory sync() {
        return syncSDK;
    }


    /**
     * Create an inventory
     * 
     * @return The async call builder
     */
    public CreateCommerceInventoryRequestBuilder createCommerceInventory() {
        return new CreateCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCommerceInventoryResponse&gt; - The async response
     */
    public CompletableFuture<CreateCommerceInventoryResponse> createCommerceInventory(CreateCommerceInventoryRequest request) {
        AsyncRequestOperation<CreateCommerceInventoryRequest, CreateCommerceInventoryResponse> operation
              = new CreateCommerceInventory.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an inventory
     * 
     * @return The async call builder
     */
    public GetCommerceInventoryRequestBuilder getCommerceInventory() {
        return new GetCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCommerceInventoryResponse&gt; - The async response
     */
    public CompletableFuture<GetCommerceInventoryResponse> getCommerceInventory(GetCommerceInventoryRequest request) {
        AsyncRequestOperation<GetCommerceInventoryRequest, GetCommerceInventoryResponse> operation
              = new GetCommerceInventory.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all inventories
     * 
     * @return The async call builder
     */
    public ListCommerceInventoriesRequestBuilder listCommerceInventories() {
        return new ListCommerceInventoriesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all inventories
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCommerceInventoriesResponse&gt; - The async response
     */
    public CompletableFuture<ListCommerceInventoriesResponse> listCommerceInventories(ListCommerceInventoriesRequest request) {
        AsyncRequestOperation<ListCommerceInventoriesRequest, ListCommerceInventoriesResponse> operation
              = new ListCommerceInventories.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an inventory
     * 
     * @return The async call builder
     */
    public PatchCommerceInventoryRequestBuilder patchCommerceInventory() {
        return new PatchCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCommerceInventoryResponse&gt; - The async response
     */
    public CompletableFuture<PatchCommerceInventoryResponse> patchCommerceInventory(PatchCommerceInventoryRequest request) {
        AsyncRequestOperation<PatchCommerceInventoryRequest, PatchCommerceInventoryResponse> operation
              = new PatchCommerceInventory.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an inventory
     * 
     * @return The async call builder
     */
    public RemoveCommerceInventoryRequestBuilder removeCommerceInventory() {
        return new RemoveCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCommerceInventoryResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCommerceInventoryResponse> removeCommerceInventory(RemoveCommerceInventoryRequest request) {
        AsyncRequestOperation<RemoveCommerceInventoryRequest, RemoveCommerceInventoryResponse> operation
              = new RemoveCommerceInventory.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an inventory
     * 
     * @return The async call builder
     */
    public UpdateCommerceInventoryRequestBuilder updateCommerceInventory() {
        return new UpdateCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCommerceInventoryResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCommerceInventoryResponse> updateCommerceInventory(UpdateCommerceInventoryRequest request) {
        AsyncRequestOperation<UpdateCommerceInventoryRequest, UpdateCommerceInventoryResponse> operation
              = new UpdateCommerceInventory.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
