/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import to.unified.unified_java_sdk.models.operations.CreateTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.CreateTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.GetTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.GetTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.ListTaskProjectsRequest;
import to.unified.unified_java_sdk.models.operations.ListTaskProjectsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListTaskProjectsResponse;
import to.unified.unified_java_sdk.models.operations.PatchTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.PatchTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.RemoveTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.RemoveTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.UpdateTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.UpdateTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateTaskProjectResponse;
import to.unified.unified_java_sdk.operations.CreateTaskProject;
import to.unified.unified_java_sdk.operations.GetTaskProject;
import to.unified.unified_java_sdk.operations.ListTaskProjects;
import to.unified.unified_java_sdk.operations.PatchTaskProject;
import to.unified.unified_java_sdk.operations.RemoveTaskProject;
import to.unified.unified_java_sdk.operations.UpdateTaskProject;
import to.unified.unified_java_sdk.utils.Headers;


public class Project {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncProject asyncSDK;

    Project(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncProject(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncProject async() {
        return asyncSDK;
    }

    /**
     * Create a project
     * 
     * @return The call builder
     */
    public CreateTaskProjectRequestBuilder createTaskProject() {
        return new CreateTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateTaskProjectResponse createTaskProject(CreateTaskProjectRequest request) {
        RequestOperation<CreateTaskProjectRequest, CreateTaskProjectResponse> operation
              = new CreateTaskProject.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a project
     * 
     * @return The call builder
     */
    public GetTaskProjectRequestBuilder getTaskProject() {
        return new GetTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetTaskProjectResponse getTaskProject(GetTaskProjectRequest request) {
        RequestOperation<GetTaskProjectRequest, GetTaskProjectResponse> operation
              = new GetTaskProject.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all projects
     * 
     * @return The call builder
     */
    public ListTaskProjectsRequestBuilder listTaskProjects() {
        return new ListTaskProjectsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all projects
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListTaskProjectsResponse listTaskProjects(ListTaskProjectsRequest request) {
        RequestOperation<ListTaskProjectsRequest, ListTaskProjectsResponse> operation
              = new ListTaskProjects.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a project
     * 
     * @return The call builder
     */
    public PatchTaskProjectRequestBuilder patchTaskProject() {
        return new PatchTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchTaskProjectResponse patchTaskProject(PatchTaskProjectRequest request) {
        RequestOperation<PatchTaskProjectRequest, PatchTaskProjectResponse> operation
              = new PatchTaskProject.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a project
     * 
     * @return The call builder
     */
    public RemoveTaskProjectRequestBuilder removeTaskProject() {
        return new RemoveTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveTaskProjectResponse removeTaskProject(RemoveTaskProjectRequest request) {
        RequestOperation<RemoveTaskProjectRequest, RemoveTaskProjectResponse> operation
              = new RemoveTaskProject.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a project
     * 
     * @return The call builder
     */
    public UpdateTaskProjectRequestBuilder updateTaskProject() {
        return new UpdateTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateTaskProjectResponse updateTaskProject(UpdateTaskProjectRequest request) {
        RequestOperation<UpdateTaskProjectRequest, UpdateTaskProjectResponse> operation
              = new UpdateTaskProject.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
