/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;
import to.unified.unified_java_sdk.utils.Utils;

public class CrmEmail {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    private Optional<String> email;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    private Optional<? extends CrmEmailType> type;

    @JsonCreator
    public CrmEmail(
            @JsonProperty("email") Optional<String> email,
            @JsonProperty("type") Optional<? extends CrmEmailType> type) {
        Utils.checkNotNull(email, "email");
        Utils.checkNotNull(type, "type");
        this.email = email;
        this.type = type;
    }
    
    public CrmEmail() {
        this(Optional.empty(), Optional.empty());
    }

    @JsonIgnore
    public Optional<String> email() {
        return email;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CrmEmailType> type() {
        return (Optional<CrmEmailType>) type;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public CrmEmail withEmail(String email) {
        Utils.checkNotNull(email, "email");
        this.email = Optional.ofNullable(email);
        return this;
    }

    public CrmEmail withEmail(Optional<String> email) {
        Utils.checkNotNull(email, "email");
        this.email = email;
        return this;
    }

    public CrmEmail withType(CrmEmailType type) {
        Utils.checkNotNull(type, "type");
        this.type = Optional.ofNullable(type);
        return this;
    }

    public CrmEmail withType(Optional<? extends CrmEmailType> type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CrmEmail other = (CrmEmail) o;
        return 
            Utils.enhancedDeepEquals(this.email, other.email) &&
            Utils.enhancedDeepEquals(this.type, other.type);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            email,
            type);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CrmEmail.class,
                "email", email,
                "type", type);
    }
    
    public final static class Builder {
 
        private Optional<String> email = Optional.empty();
 
        private Optional<? extends CrmEmailType> type = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder email(String email) {
            Utils.checkNotNull(email, "email");
            this.email = Optional.ofNullable(email);
            return this;
        }

        public Builder email(Optional<String> email) {
            Utils.checkNotNull(email, "email");
            this.email = email;
            return this;
        }

        public Builder type(CrmEmailType type) {
            Utils.checkNotNull(type, "type");
            this.type = Optional.ofNullable(type);
            return this;
        }

        public Builder type(Optional<? extends CrmEmailType> type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }
        
        public CrmEmail build() {
            return new CrmEmail(
                email,
                type);
        }
    }
}
