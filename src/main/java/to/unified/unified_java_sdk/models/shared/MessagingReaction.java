/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import to.unified.unified_java_sdk.utils.Utils;

public class MessagingReaction {

    @JsonProperty("member")
    private PropertyMessagingReactionMember member;

    @JsonProperty("reaction")
    private String reaction;

    @JsonCreator
    public MessagingReaction(
            @JsonProperty("member") PropertyMessagingReactionMember member,
            @JsonProperty("reaction") String reaction) {
        Utils.checkNotNull(member, "member");
        Utils.checkNotNull(reaction, "reaction");
        this.member = member;
        this.reaction = reaction;
    }

    @JsonIgnore
    public PropertyMessagingReactionMember member() {
        return member;
    }

    @JsonIgnore
    public String reaction() {
        return reaction;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public MessagingReaction withMember(PropertyMessagingReactionMember member) {
        Utils.checkNotNull(member, "member");
        this.member = member;
        return this;
    }

    public MessagingReaction withReaction(String reaction) {
        Utils.checkNotNull(reaction, "reaction");
        this.reaction = reaction;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MessagingReaction other = (MessagingReaction) o;
        return 
            Objects.deepEquals(this.member, other.member) &&
            Objects.deepEquals(this.reaction, other.reaction);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            member,
            reaction);
    }
    
    @Override
    public String toString() {
        return Utils.toString(MessagingReaction.class,
                "member", member,
                "reaction", reaction);
    }
    
    public final static class Builder {
 
        private PropertyMessagingReactionMember member;
 
        private String reaction;
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder member(PropertyMessagingReactionMember member) {
            Utils.checkNotNull(member, "member");
            this.member = member;
            return this;
        }

        public Builder reaction(String reaction) {
            Utils.checkNotNull(reaction, "reaction");
            this.reaction = reaction;
            return this;
        }
        
        public MessagingReaction build() {
            return new MessagingReaction(
                member,
                reaction);
        }
    }
}
