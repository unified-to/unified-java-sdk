/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk.models.operations.async;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.SDKConfiguration;
import to.unified.unified_java_sdk.models.operations.ListCalendarCalendarsRequest;
import to.unified.unified_java_sdk.operations.ListCalendarCalendars;
import to.unified.unified_java_sdk.utils.Headers;
import to.unified.unified_java_sdk.utils.Utils;

public class ListCalendarCalendarsRequestBuilder {

    private ListCalendarCalendarsRequest request;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public ListCalendarCalendarsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public ListCalendarCalendarsRequestBuilder request(ListCalendarCalendarsRequest request) {
        Utils.checkNotNull(request, "request");
        this.request = request;
        return this;
    }

    public CompletableFuture<ListCalendarCalendarsResponse> call() {
        
        AsyncRequestOperation<ListCalendarCalendarsRequest, ListCalendarCalendarsResponse> operation
              = new ListCalendarCalendars.Async(sdkConfiguration, _headers);

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
