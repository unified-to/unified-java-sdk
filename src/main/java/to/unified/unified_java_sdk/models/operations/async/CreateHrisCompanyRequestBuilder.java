/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk.models.operations.async;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.lang.Exception;
import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.SDKConfiguration;
import to.unified.unified_java_sdk.models.operations.CreateHrisCompanyRequest;
import to.unified.unified_java_sdk.operations.CreateHrisCompany;
import to.unified.unified_java_sdk.utils.Headers;
import to.unified.unified_java_sdk.utils.Utils;

public class CreateHrisCompanyRequestBuilder {

    private CreateHrisCompanyRequest request;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public CreateHrisCompanyRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CreateHrisCompanyRequestBuilder request(CreateHrisCompanyRequest request) {
        Utils.checkNotNull(request, "request");
        this.request = request;
        return this;
    }

    public CompletableFuture<CreateHrisCompanyResponse> call() throws Exception {
        
        AsyncRequestOperation<CreateHrisCompanyRequest, CreateHrisCompanyResponse> operation
              = new CreateHrisCompany.Async(sdkConfiguration, _headers);

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
