/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk.models.operations.async;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.lang.Exception;
import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.SDKConfiguration;
import to.unified.unified_java_sdk.models.operations.RemoveRepoPullrequestRequest;
import to.unified.unified_java_sdk.operations.RemoveRepoPullrequest;
import to.unified.unified_java_sdk.utils.Utils;

public class RemoveRepoPullrequestRequestBuilder {

    private RemoveRepoPullrequestRequest request;
    private final SDKConfiguration sdkConfiguration;

    public RemoveRepoPullrequestRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public RemoveRepoPullrequestRequestBuilder request(RemoveRepoPullrequestRequest request) {
        Utils.checkNotNull(request, "request");
        this.request = request;
        return this;
    }

    public CompletableFuture<RemoveRepoPullrequestResponse> call() throws Exception {
        
        AsyncRequestOperation<RemoveRepoPullrequestRequest, RemoveRepoPullrequestResponse> operation
              = new RemoveRepoPullrequest.Async(sdkConfiguration);

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
