/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmContactsRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmDealsRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmEventsRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmLeadsRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmPipelinesRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmPipelineResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCrmPipelineResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCrmCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCrmCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCrmContactsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCrmContactsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCrmDealsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCrmDealsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCrmEventsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCrmEventsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCrmLeadsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCrmLeadsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCrmPipelinesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCrmPipelinesResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmPipelineResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmPipelineResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmPipelineResponse;
import to.unified.unified_java_sdk.operations.CreateCrmCompany;
import to.unified.unified_java_sdk.operations.CreateCrmContact;
import to.unified.unified_java_sdk.operations.CreateCrmDeal;
import to.unified.unified_java_sdk.operations.CreateCrmEvent;
import to.unified.unified_java_sdk.operations.CreateCrmLead;
import to.unified.unified_java_sdk.operations.CreateCrmPipeline;
import to.unified.unified_java_sdk.operations.GetCrmCompany;
import to.unified.unified_java_sdk.operations.GetCrmContact;
import to.unified.unified_java_sdk.operations.GetCrmDeal;
import to.unified.unified_java_sdk.operations.GetCrmEvent;
import to.unified.unified_java_sdk.operations.GetCrmLead;
import to.unified.unified_java_sdk.operations.GetCrmPipeline;
import to.unified.unified_java_sdk.operations.ListCrmCompanies;
import to.unified.unified_java_sdk.operations.ListCrmContacts;
import to.unified.unified_java_sdk.operations.ListCrmDeals;
import to.unified.unified_java_sdk.operations.ListCrmEvents;
import to.unified.unified_java_sdk.operations.ListCrmLeads;
import to.unified.unified_java_sdk.operations.ListCrmPipelines;
import to.unified.unified_java_sdk.operations.PatchCrmCompany;
import to.unified.unified_java_sdk.operations.PatchCrmContact;
import to.unified.unified_java_sdk.operations.PatchCrmDeal;
import to.unified.unified_java_sdk.operations.PatchCrmEvent;
import to.unified.unified_java_sdk.operations.PatchCrmLead;
import to.unified.unified_java_sdk.operations.PatchCrmPipeline;
import to.unified.unified_java_sdk.operations.RemoveCrmCompany;
import to.unified.unified_java_sdk.operations.RemoveCrmContact;
import to.unified.unified_java_sdk.operations.RemoveCrmDeal;
import to.unified.unified_java_sdk.operations.RemoveCrmEvent;
import to.unified.unified_java_sdk.operations.RemoveCrmLead;
import to.unified.unified_java_sdk.operations.RemoveCrmPipeline;
import to.unified.unified_java_sdk.operations.UpdateCrmCompany;
import to.unified.unified_java_sdk.operations.UpdateCrmContact;
import to.unified.unified_java_sdk.operations.UpdateCrmDeal;
import to.unified.unified_java_sdk.operations.UpdateCrmEvent;
import to.unified.unified_java_sdk.operations.UpdateCrmLead;
import to.unified.unified_java_sdk.operations.UpdateCrmPipeline;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncCrm {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Crm syncSDK;

    AsyncCrm(Crm syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Crm sync() {
        return syncSDK;
    }


    /**
     * Create a company
     * 
     * @return The async call builder
     */
    public CreateCrmCompanyRequestBuilder createCrmCompany() {
        return new CreateCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCrmCompanyResponse&gt; - The async response
     */
    public CompletableFuture<CreateCrmCompanyResponse> createCrmCompany(CreateCrmCompanyRequest request) {
        AsyncRequestOperation<CreateCrmCompanyRequest, CreateCrmCompanyResponse> operation
              = new CreateCrmCompany.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a contact
     * 
     * @return The async call builder
     */
    public CreateCrmContactRequestBuilder createCrmContact() {
        return new CreateCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCrmContactResponse&gt; - The async response
     */
    public CompletableFuture<CreateCrmContactResponse> createCrmContact(CreateCrmContactRequest request) {
        AsyncRequestOperation<CreateCrmContactRequest, CreateCrmContactResponse> operation
              = new CreateCrmContact.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a deal
     * 
     * @return The async call builder
     */
    public CreateCrmDealRequestBuilder createCrmDeal() {
        return new CreateCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCrmDealResponse&gt; - The async response
     */
    public CompletableFuture<CreateCrmDealResponse> createCrmDeal(CreateCrmDealRequest request) {
        AsyncRequestOperation<CreateCrmDealRequest, CreateCrmDealResponse> operation
              = new CreateCrmDeal.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create an event
     * 
     * @return The async call builder
     */
    public CreateCrmEventRequestBuilder createCrmEvent() {
        return new CreateCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCrmEventResponse&gt; - The async response
     */
    public CompletableFuture<CreateCrmEventResponse> createCrmEvent(CreateCrmEventRequest request) {
        AsyncRequestOperation<CreateCrmEventRequest, CreateCrmEventResponse> operation
              = new CreateCrmEvent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a lead
     * 
     * @return The async call builder
     */
    public CreateCrmLeadRequestBuilder createCrmLead() {
        return new CreateCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCrmLeadResponse&gt; - The async response
     */
    public CompletableFuture<CreateCrmLeadResponse> createCrmLead(CreateCrmLeadRequest request) {
        AsyncRequestOperation<CreateCrmLeadRequest, CreateCrmLeadResponse> operation
              = new CreateCrmLead.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a pipeline
     * 
     * @return The async call builder
     */
    public CreateCrmPipelineRequestBuilder createCrmPipeline() {
        return new CreateCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCrmPipelineResponse&gt; - The async response
     */
    public CompletableFuture<CreateCrmPipelineResponse> createCrmPipeline(CreateCrmPipelineRequest request) {
        AsyncRequestOperation<CreateCrmPipelineRequest, CreateCrmPipelineResponse> operation
              = new CreateCrmPipeline.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a company
     * 
     * @return The async call builder
     */
    public GetCrmCompanyRequestBuilder getCrmCompany() {
        return new GetCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCrmCompanyResponse&gt; - The async response
     */
    public CompletableFuture<GetCrmCompanyResponse> getCrmCompany(GetCrmCompanyRequest request) {
        AsyncRequestOperation<GetCrmCompanyRequest, GetCrmCompanyResponse> operation
              = new GetCrmCompany.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a contact
     * 
     * @return The async call builder
     */
    public GetCrmContactRequestBuilder getCrmContact() {
        return new GetCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCrmContactResponse&gt; - The async response
     */
    public CompletableFuture<GetCrmContactResponse> getCrmContact(GetCrmContactRequest request) {
        AsyncRequestOperation<GetCrmContactRequest, GetCrmContactResponse> operation
              = new GetCrmContact.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a deal
     * 
     * @return The async call builder
     */
    public GetCrmDealRequestBuilder getCrmDeal() {
        return new GetCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCrmDealResponse&gt; - The async response
     */
    public CompletableFuture<GetCrmDealResponse> getCrmDeal(GetCrmDealRequest request) {
        AsyncRequestOperation<GetCrmDealRequest, GetCrmDealResponse> operation
              = new GetCrmDeal.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an event
     * 
     * @return The async call builder
     */
    public GetCrmEventRequestBuilder getCrmEvent() {
        return new GetCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCrmEventResponse&gt; - The async response
     */
    public CompletableFuture<GetCrmEventResponse> getCrmEvent(GetCrmEventRequest request) {
        AsyncRequestOperation<GetCrmEventRequest, GetCrmEventResponse> operation
              = new GetCrmEvent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a lead
     * 
     * @return The async call builder
     */
    public GetCrmLeadRequestBuilder getCrmLead() {
        return new GetCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCrmLeadResponse&gt; - The async response
     */
    public CompletableFuture<GetCrmLeadResponse> getCrmLead(GetCrmLeadRequest request) {
        AsyncRequestOperation<GetCrmLeadRequest, GetCrmLeadResponse> operation
              = new GetCrmLead.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a pipeline
     * 
     * @return The async call builder
     */
    public GetCrmPipelineRequestBuilder getCrmPipeline() {
        return new GetCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCrmPipelineResponse&gt; - The async response
     */
    public CompletableFuture<GetCrmPipelineResponse> getCrmPipeline(GetCrmPipelineRequest request) {
        AsyncRequestOperation<GetCrmPipelineRequest, GetCrmPipelineResponse> operation
              = new GetCrmPipeline.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all companies
     * 
     * @return The async call builder
     */
    public ListCrmCompaniesRequestBuilder listCrmCompanies() {
        return new ListCrmCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all companies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCrmCompaniesResponse&gt; - The async response
     */
    public CompletableFuture<ListCrmCompaniesResponse> listCrmCompanies(ListCrmCompaniesRequest request) {
        AsyncRequestOperation<ListCrmCompaniesRequest, ListCrmCompaniesResponse> operation
              = new ListCrmCompanies.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all contacts
     * 
     * @return The async call builder
     */
    public ListCrmContactsRequestBuilder listCrmContacts() {
        return new ListCrmContactsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all contacts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCrmContactsResponse&gt; - The async response
     */
    public CompletableFuture<ListCrmContactsResponse> listCrmContacts(ListCrmContactsRequest request) {
        AsyncRequestOperation<ListCrmContactsRequest, ListCrmContactsResponse> operation
              = new ListCrmContacts.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all deals
     * 
     * @return The async call builder
     */
    public ListCrmDealsRequestBuilder listCrmDeals() {
        return new ListCrmDealsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all deals
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCrmDealsResponse&gt; - The async response
     */
    public CompletableFuture<ListCrmDealsResponse> listCrmDeals(ListCrmDealsRequest request) {
        AsyncRequestOperation<ListCrmDealsRequest, ListCrmDealsResponse> operation
              = new ListCrmDeals.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all events
     * 
     * @return The async call builder
     */
    public ListCrmEventsRequestBuilder listCrmEvents() {
        return new ListCrmEventsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all events
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCrmEventsResponse&gt; - The async response
     */
    public CompletableFuture<ListCrmEventsResponse> listCrmEvents(ListCrmEventsRequest request) {
        AsyncRequestOperation<ListCrmEventsRequest, ListCrmEventsResponse> operation
              = new ListCrmEvents.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all leads
     * 
     * @return The async call builder
     */
    public ListCrmLeadsRequestBuilder listCrmLeads() {
        return new ListCrmLeadsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all leads
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCrmLeadsResponse&gt; - The async response
     */
    public CompletableFuture<ListCrmLeadsResponse> listCrmLeads(ListCrmLeadsRequest request) {
        AsyncRequestOperation<ListCrmLeadsRequest, ListCrmLeadsResponse> operation
              = new ListCrmLeads.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all pipelines
     * 
     * @return The async call builder
     */
    public ListCrmPipelinesRequestBuilder listCrmPipelines() {
        return new ListCrmPipelinesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all pipelines
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCrmPipelinesResponse&gt; - The async response
     */
    public CompletableFuture<ListCrmPipelinesResponse> listCrmPipelines(ListCrmPipelinesRequest request) {
        AsyncRequestOperation<ListCrmPipelinesRequest, ListCrmPipelinesResponse> operation
              = new ListCrmPipelines.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a company
     * 
     * @return The async call builder
     */
    public PatchCrmCompanyRequestBuilder patchCrmCompany() {
        return new PatchCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCrmCompanyResponse&gt; - The async response
     */
    public CompletableFuture<PatchCrmCompanyResponse> patchCrmCompany(PatchCrmCompanyRequest request) {
        AsyncRequestOperation<PatchCrmCompanyRequest, PatchCrmCompanyResponse> operation
              = new PatchCrmCompany.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a contact
     * 
     * @return The async call builder
     */
    public PatchCrmContactRequestBuilder patchCrmContact() {
        return new PatchCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCrmContactResponse&gt; - The async response
     */
    public CompletableFuture<PatchCrmContactResponse> patchCrmContact(PatchCrmContactRequest request) {
        AsyncRequestOperation<PatchCrmContactRequest, PatchCrmContactResponse> operation
              = new PatchCrmContact.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a deal
     * 
     * @return The async call builder
     */
    public PatchCrmDealRequestBuilder patchCrmDeal() {
        return new PatchCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCrmDealResponse&gt; - The async response
     */
    public CompletableFuture<PatchCrmDealResponse> patchCrmDeal(PatchCrmDealRequest request) {
        AsyncRequestOperation<PatchCrmDealRequest, PatchCrmDealResponse> operation
              = new PatchCrmDeal.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an event
     * 
     * @return The async call builder
     */
    public PatchCrmEventRequestBuilder patchCrmEvent() {
        return new PatchCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCrmEventResponse&gt; - The async response
     */
    public CompletableFuture<PatchCrmEventResponse> patchCrmEvent(PatchCrmEventRequest request) {
        AsyncRequestOperation<PatchCrmEventRequest, PatchCrmEventResponse> operation
              = new PatchCrmEvent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a lead
     * 
     * @return The async call builder
     */
    public PatchCrmLeadRequestBuilder patchCrmLead() {
        return new PatchCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCrmLeadResponse&gt; - The async response
     */
    public CompletableFuture<PatchCrmLeadResponse> patchCrmLead(PatchCrmLeadRequest request) {
        AsyncRequestOperation<PatchCrmLeadRequest, PatchCrmLeadResponse> operation
              = new PatchCrmLead.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a pipeline
     * 
     * @return The async call builder
     */
    public PatchCrmPipelineRequestBuilder patchCrmPipeline() {
        return new PatchCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCrmPipelineResponse&gt; - The async response
     */
    public CompletableFuture<PatchCrmPipelineResponse> patchCrmPipeline(PatchCrmPipelineRequest request) {
        AsyncRequestOperation<PatchCrmPipelineRequest, PatchCrmPipelineResponse> operation
              = new PatchCrmPipeline.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a company
     * 
     * @return The async call builder
     */
    public RemoveCrmCompanyRequestBuilder removeCrmCompany() {
        return new RemoveCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCrmCompanyResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCrmCompanyResponse> removeCrmCompany(RemoveCrmCompanyRequest request) {
        AsyncRequestOperation<RemoveCrmCompanyRequest, RemoveCrmCompanyResponse> operation
              = new RemoveCrmCompany.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a contact
     * 
     * @return The async call builder
     */
    public RemoveCrmContactRequestBuilder removeCrmContact() {
        return new RemoveCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCrmContactResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCrmContactResponse> removeCrmContact(RemoveCrmContactRequest request) {
        AsyncRequestOperation<RemoveCrmContactRequest, RemoveCrmContactResponse> operation
              = new RemoveCrmContact.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a deal
     * 
     * @return The async call builder
     */
    public RemoveCrmDealRequestBuilder removeCrmDeal() {
        return new RemoveCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCrmDealResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCrmDealResponse> removeCrmDeal(RemoveCrmDealRequest request) {
        AsyncRequestOperation<RemoveCrmDealRequest, RemoveCrmDealResponse> operation
              = new RemoveCrmDeal.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an event
     * 
     * @return The async call builder
     */
    public RemoveCrmEventRequestBuilder removeCrmEvent() {
        return new RemoveCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCrmEventResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCrmEventResponse> removeCrmEvent(RemoveCrmEventRequest request) {
        AsyncRequestOperation<RemoveCrmEventRequest, RemoveCrmEventResponse> operation
              = new RemoveCrmEvent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a lead
     * 
     * @return The async call builder
     */
    public RemoveCrmLeadRequestBuilder removeCrmLead() {
        return new RemoveCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCrmLeadResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCrmLeadResponse> removeCrmLead(RemoveCrmLeadRequest request) {
        AsyncRequestOperation<RemoveCrmLeadRequest, RemoveCrmLeadResponse> operation
              = new RemoveCrmLead.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a pipeline
     * 
     * @return The async call builder
     */
    public RemoveCrmPipelineRequestBuilder removeCrmPipeline() {
        return new RemoveCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCrmPipelineResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCrmPipelineResponse> removeCrmPipeline(RemoveCrmPipelineRequest request) {
        AsyncRequestOperation<RemoveCrmPipelineRequest, RemoveCrmPipelineResponse> operation
              = new RemoveCrmPipeline.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a company
     * 
     * @return The async call builder
     */
    public UpdateCrmCompanyRequestBuilder updateCrmCompany() {
        return new UpdateCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCrmCompanyResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCrmCompanyResponse> updateCrmCompany(UpdateCrmCompanyRequest request) {
        AsyncRequestOperation<UpdateCrmCompanyRequest, UpdateCrmCompanyResponse> operation
              = new UpdateCrmCompany.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a contact
     * 
     * @return The async call builder
     */
    public UpdateCrmContactRequestBuilder updateCrmContact() {
        return new UpdateCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCrmContactResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCrmContactResponse> updateCrmContact(UpdateCrmContactRequest request) {
        AsyncRequestOperation<UpdateCrmContactRequest, UpdateCrmContactResponse> operation
              = new UpdateCrmContact.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a deal
     * 
     * @return The async call builder
     */
    public UpdateCrmDealRequestBuilder updateCrmDeal() {
        return new UpdateCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCrmDealResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCrmDealResponse> updateCrmDeal(UpdateCrmDealRequest request) {
        AsyncRequestOperation<UpdateCrmDealRequest, UpdateCrmDealResponse> operation
              = new UpdateCrmDeal.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an event
     * 
     * @return The async call builder
     */
    public UpdateCrmEventRequestBuilder updateCrmEvent() {
        return new UpdateCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCrmEventResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCrmEventResponse> updateCrmEvent(UpdateCrmEventRequest request) {
        AsyncRequestOperation<UpdateCrmEventRequest, UpdateCrmEventResponse> operation
              = new UpdateCrmEvent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a lead
     * 
     * @return The async call builder
     */
    public UpdateCrmLeadRequestBuilder updateCrmLead() {
        return new UpdateCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCrmLeadResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCrmLeadResponse> updateCrmLead(UpdateCrmLeadRequest request) {
        AsyncRequestOperation<UpdateCrmLeadRequest, UpdateCrmLeadResponse> operation
              = new UpdateCrmLead.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a pipeline
     * 
     * @return The async call builder
     */
    public UpdateCrmPipelineRequestBuilder updateCrmPipeline() {
        return new UpdateCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCrmPipelineResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCrmPipelineResponse> updateCrmPipeline(UpdateCrmPipelineRequest request) {
        AsyncRequestOperation<UpdateCrmPipelineRequest, UpdateCrmPipelineResponse> operation
              = new UpdateCrmPipeline.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
