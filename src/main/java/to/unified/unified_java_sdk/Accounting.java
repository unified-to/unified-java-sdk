/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.CreateAccountingBillRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingBillRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingBillResponse;
import to.unified.unified_java_sdk.models.operations.CreateAccountingCategoryRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingCategoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingCategoryResponse;
import to.unified.unified_java_sdk.models.operations.CreateAccountingContactRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingContactResponse;
import to.unified.unified_java_sdk.models.operations.CreateAccountingCreditmemoRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingCreditmemoRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingCreditmemoResponse;
import to.unified.unified_java_sdk.models.operations.CreateAccountingInvoiceRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingInvoiceRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingInvoiceResponse;
import to.unified.unified_java_sdk.models.operations.CreateAccountingJournalRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingJournalRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingJournalResponse;
import to.unified.unified_java_sdk.models.operations.CreateAccountingOrderRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingOrderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingOrderResponse;
import to.unified.unified_java_sdk.models.operations.CreateAccountingPurchaseorderRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingPurchaseorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingPurchaseorderResponse;
import to.unified.unified_java_sdk.models.operations.CreateAccountingSalesorderRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingSalesorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingSalesorderResponse;
import to.unified.unified_java_sdk.models.operations.CreateAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.CreateAccountingTransactionRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingTransactionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingTransactionResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingBalancesheetRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingBalancesheetRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingBalancesheetResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingBillRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingBillRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingBillResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingCategoryRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingCategoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingCategoryResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingContactRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingContactResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingCreditmemoRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingCreditmemoRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingCreditmemoResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingInvoiceRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingInvoiceRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingInvoiceResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingJournalRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingJournalRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingJournalResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingOrderRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingOrderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingOrderResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingOrganizationRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingOrganizationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingOrganizationResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingProfitlossRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingProfitlossRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingProfitlossResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingPurchaseorderRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingPurchaseorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingPurchaseorderResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingReportRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingReportRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingReportResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingSalesorderRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingSalesorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingSalesorderResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingTransactionRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingTransactionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingTransactionResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingTrialbalanceRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingTrialbalanceRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingTrialbalanceResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingAccountsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingAccountsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingAccountsResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingBalancesheetsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingBalancesheetsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingBalancesheetsResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingBillsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingBillsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingBillsResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingCategoriesRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingCategoriesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingCategoriesResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingContactsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingContactsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingContactsResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingCreditmemoesRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingCreditmemoesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingCreditmemoesResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingInvoicesRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingInvoicesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingInvoicesResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingJournalsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingJournalsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingJournalsResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingOrdersRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingOrdersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingOrdersResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingOrganizationsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingOrganizationsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingOrganizationsResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingProfitlossesRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingProfitlossesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingProfitlossesResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingPurchaseordersRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingPurchaseordersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingPurchaseordersResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingReportsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingReportsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingReportsResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingSalesordersRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingSalesordersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingSalesordersResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingTaxratesRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingTaxratesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingTaxratesResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingTransactionsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingTransactionsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingTransactionsResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingTrialbalancesRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingTrialbalancesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingTrialbalancesResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingBillRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingBillRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingBillResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingCategoryRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingCategoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingCategoryResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingContactRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingContactResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingCreditmemoRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingCreditmemoRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingCreditmemoResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingInvoiceRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingInvoiceRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingInvoiceResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingJournalRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingJournalRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingJournalResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingOrderRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingOrderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingOrderResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingPurchaseorderRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingPurchaseorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingPurchaseorderResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingSalesorderRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingSalesorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingSalesorderResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingTransactionRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingTransactionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingTransactionResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingBillRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingBillRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingBillResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingCategoryRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingCategoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingCategoryResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingContactRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingContactResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingCreditmemoRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingCreditmemoRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingCreditmemoResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingInvoiceRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingInvoiceRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingInvoiceResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingJournalRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingJournalRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingJournalResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingOrderRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingOrderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingOrderResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingPurchaseorderRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingPurchaseorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingPurchaseorderResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingSalesorderRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingSalesorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingSalesorderResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingTransactionRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingTransactionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingTransactionResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingBillRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingBillRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingBillResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingCategoryRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingCategoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingCategoryResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingContactRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingContactResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingCreditmemoRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingCreditmemoRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingCreditmemoResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingInvoiceRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingInvoiceRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingInvoiceResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingJournalRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingJournalRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingJournalResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingOrderRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingOrderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingOrderResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingPurchaseorderRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingPurchaseorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingPurchaseorderResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingSalesorderRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingSalesorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingSalesorderResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingTransactionRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingTransactionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingTransactionResponse;
import to.unified.unified_java_sdk.operations.CreateAccountingAccount;
import to.unified.unified_java_sdk.operations.CreateAccountingBill;
import to.unified.unified_java_sdk.operations.CreateAccountingCategory;
import to.unified.unified_java_sdk.operations.CreateAccountingContact;
import to.unified.unified_java_sdk.operations.CreateAccountingCreditmemo;
import to.unified.unified_java_sdk.operations.CreateAccountingInvoice;
import to.unified.unified_java_sdk.operations.CreateAccountingJournal;
import to.unified.unified_java_sdk.operations.CreateAccountingOrder;
import to.unified.unified_java_sdk.operations.CreateAccountingPurchaseorder;
import to.unified.unified_java_sdk.operations.CreateAccountingSalesorder;
import to.unified.unified_java_sdk.operations.CreateAccountingTaxrate;
import to.unified.unified_java_sdk.operations.CreateAccountingTransaction;
import to.unified.unified_java_sdk.operations.GetAccountingAccount;
import to.unified.unified_java_sdk.operations.GetAccountingBalancesheet;
import to.unified.unified_java_sdk.operations.GetAccountingBill;
import to.unified.unified_java_sdk.operations.GetAccountingCategory;
import to.unified.unified_java_sdk.operations.GetAccountingContact;
import to.unified.unified_java_sdk.operations.GetAccountingCreditmemo;
import to.unified.unified_java_sdk.operations.GetAccountingInvoice;
import to.unified.unified_java_sdk.operations.GetAccountingJournal;
import to.unified.unified_java_sdk.operations.GetAccountingOrder;
import to.unified.unified_java_sdk.operations.GetAccountingOrganization;
import to.unified.unified_java_sdk.operations.GetAccountingProfitloss;
import to.unified.unified_java_sdk.operations.GetAccountingPurchaseorder;
import to.unified.unified_java_sdk.operations.GetAccountingReport;
import to.unified.unified_java_sdk.operations.GetAccountingSalesorder;
import to.unified.unified_java_sdk.operations.GetAccountingTaxrate;
import to.unified.unified_java_sdk.operations.GetAccountingTransaction;
import to.unified.unified_java_sdk.operations.GetAccountingTrialbalance;
import to.unified.unified_java_sdk.operations.ListAccountingAccounts;
import to.unified.unified_java_sdk.operations.ListAccountingBalancesheets;
import to.unified.unified_java_sdk.operations.ListAccountingBills;
import to.unified.unified_java_sdk.operations.ListAccountingCategories;
import to.unified.unified_java_sdk.operations.ListAccountingContacts;
import to.unified.unified_java_sdk.operations.ListAccountingCreditmemoes;
import to.unified.unified_java_sdk.operations.ListAccountingInvoices;
import to.unified.unified_java_sdk.operations.ListAccountingJournals;
import to.unified.unified_java_sdk.operations.ListAccountingOrders;
import to.unified.unified_java_sdk.operations.ListAccountingOrganizations;
import to.unified.unified_java_sdk.operations.ListAccountingProfitlosses;
import to.unified.unified_java_sdk.operations.ListAccountingPurchaseorders;
import to.unified.unified_java_sdk.operations.ListAccountingReports;
import to.unified.unified_java_sdk.operations.ListAccountingSalesorders;
import to.unified.unified_java_sdk.operations.ListAccountingTaxrates;
import to.unified.unified_java_sdk.operations.ListAccountingTransactions;
import to.unified.unified_java_sdk.operations.ListAccountingTrialbalances;
import to.unified.unified_java_sdk.operations.PatchAccountingAccount;
import to.unified.unified_java_sdk.operations.PatchAccountingBill;
import to.unified.unified_java_sdk.operations.PatchAccountingCategory;
import to.unified.unified_java_sdk.operations.PatchAccountingContact;
import to.unified.unified_java_sdk.operations.PatchAccountingCreditmemo;
import to.unified.unified_java_sdk.operations.PatchAccountingInvoice;
import to.unified.unified_java_sdk.operations.PatchAccountingJournal;
import to.unified.unified_java_sdk.operations.PatchAccountingOrder;
import to.unified.unified_java_sdk.operations.PatchAccountingPurchaseorder;
import to.unified.unified_java_sdk.operations.PatchAccountingSalesorder;
import to.unified.unified_java_sdk.operations.PatchAccountingTaxrate;
import to.unified.unified_java_sdk.operations.PatchAccountingTransaction;
import to.unified.unified_java_sdk.operations.RemoveAccountingAccount;
import to.unified.unified_java_sdk.operations.RemoveAccountingBill;
import to.unified.unified_java_sdk.operations.RemoveAccountingCategory;
import to.unified.unified_java_sdk.operations.RemoveAccountingContact;
import to.unified.unified_java_sdk.operations.RemoveAccountingCreditmemo;
import to.unified.unified_java_sdk.operations.RemoveAccountingInvoice;
import to.unified.unified_java_sdk.operations.RemoveAccountingJournal;
import to.unified.unified_java_sdk.operations.RemoveAccountingOrder;
import to.unified.unified_java_sdk.operations.RemoveAccountingPurchaseorder;
import to.unified.unified_java_sdk.operations.RemoveAccountingSalesorder;
import to.unified.unified_java_sdk.operations.RemoveAccountingTaxrate;
import to.unified.unified_java_sdk.operations.RemoveAccountingTransaction;
import to.unified.unified_java_sdk.operations.UpdateAccountingAccount;
import to.unified.unified_java_sdk.operations.UpdateAccountingBill;
import to.unified.unified_java_sdk.operations.UpdateAccountingCategory;
import to.unified.unified_java_sdk.operations.UpdateAccountingContact;
import to.unified.unified_java_sdk.operations.UpdateAccountingCreditmemo;
import to.unified.unified_java_sdk.operations.UpdateAccountingInvoice;
import to.unified.unified_java_sdk.operations.UpdateAccountingJournal;
import to.unified.unified_java_sdk.operations.UpdateAccountingOrder;
import to.unified.unified_java_sdk.operations.UpdateAccountingPurchaseorder;
import to.unified.unified_java_sdk.operations.UpdateAccountingSalesorder;
import to.unified.unified_java_sdk.operations.UpdateAccountingTaxrate;
import to.unified.unified_java_sdk.operations.UpdateAccountingTransaction;
import to.unified.unified_java_sdk.utils.Headers;


public class Accounting {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncAccounting asyncSDK;

    Accounting(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncAccounting(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncAccounting async() {
        return asyncSDK;
    }

    /**
     * Create an account
     * 
     * @return The call builder
     */
    public CreateAccountingAccountRequestBuilder createAccountingAccount() {
        return new CreateAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingAccountResponse createAccountingAccount(CreateAccountingAccountRequest request) throws Exception {
        RequestOperation<CreateAccountingAccountRequest, CreateAccountingAccountResponse> operation
              = new CreateAccountingAccount.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a bill
     * 
     * @return The call builder
     */
    public CreateAccountingBillRequestBuilder createAccountingBill() {
        return new CreateAccountingBillRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a bill
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingBillResponse createAccountingBill(CreateAccountingBillRequest request) throws Exception {
        RequestOperation<CreateAccountingBillRequest, CreateAccountingBillResponse> operation
              = new CreateAccountingBill.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a category
     * 
     * @return The call builder
     */
    public CreateAccountingCategoryRequestBuilder createAccountingCategory() {
        return new CreateAccountingCategoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a category
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingCategoryResponse createAccountingCategory(CreateAccountingCategoryRequest request) throws Exception {
        RequestOperation<CreateAccountingCategoryRequest, CreateAccountingCategoryResponse> operation
              = new CreateAccountingCategory.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a contact
     * 
     * @return The call builder
     */
    public CreateAccountingContactRequestBuilder createAccountingContact() {
        return new CreateAccountingContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingContactResponse createAccountingContact(CreateAccountingContactRequest request) throws Exception {
        RequestOperation<CreateAccountingContactRequest, CreateAccountingContactResponse> operation
              = new CreateAccountingContact.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a creditmemo
     * 
     * @return The call builder
     */
    public CreateAccountingCreditmemoRequestBuilder createAccountingCreditmemo() {
        return new CreateAccountingCreditmemoRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a creditmemo
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingCreditmemoResponse createAccountingCreditmemo(CreateAccountingCreditmemoRequest request) throws Exception {
        RequestOperation<CreateAccountingCreditmemoRequest, CreateAccountingCreditmemoResponse> operation
              = new CreateAccountingCreditmemo.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create an invoice
     * 
     * @return The call builder
     */
    public CreateAccountingInvoiceRequestBuilder createAccountingInvoice() {
        return new CreateAccountingInvoiceRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an invoice
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingInvoiceResponse createAccountingInvoice(CreateAccountingInvoiceRequest request) throws Exception {
        RequestOperation<CreateAccountingInvoiceRequest, CreateAccountingInvoiceResponse> operation
              = new CreateAccountingInvoice.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a journal
     * 
     * @return The call builder
     */
    public CreateAccountingJournalRequestBuilder createAccountingJournal() {
        return new CreateAccountingJournalRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a journal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingJournalResponse createAccountingJournal(CreateAccountingJournalRequest request) throws Exception {
        RequestOperation<CreateAccountingJournalRequest, CreateAccountingJournalResponse> operation
              = new CreateAccountingJournal.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create an order
     * 
     * @return The call builder
     */
    public CreateAccountingOrderRequestBuilder createAccountingOrder() {
        return new CreateAccountingOrderRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an order
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingOrderResponse createAccountingOrder(CreateAccountingOrderRequest request) throws Exception {
        RequestOperation<CreateAccountingOrderRequest, CreateAccountingOrderResponse> operation
              = new CreateAccountingOrder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a purchaseorder
     * 
     * @return The call builder
     */
    public CreateAccountingPurchaseorderRequestBuilder createAccountingPurchaseorder() {
        return new CreateAccountingPurchaseorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a purchaseorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingPurchaseorderResponse createAccountingPurchaseorder(CreateAccountingPurchaseorderRequest request) throws Exception {
        RequestOperation<CreateAccountingPurchaseorderRequest, CreateAccountingPurchaseorderResponse> operation
              = new CreateAccountingPurchaseorder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a salesorder
     * 
     * @return The call builder
     */
    public CreateAccountingSalesorderRequestBuilder createAccountingSalesorder() {
        return new CreateAccountingSalesorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a salesorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingSalesorderResponse createAccountingSalesorder(CreateAccountingSalesorderRequest request) throws Exception {
        RequestOperation<CreateAccountingSalesorderRequest, CreateAccountingSalesorderResponse> operation
              = new CreateAccountingSalesorder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a taxrate
     * 
     * @return The call builder
     */
    public CreateAccountingTaxrateRequestBuilder createAccountingTaxrate() {
        return new CreateAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingTaxrateResponse createAccountingTaxrate(CreateAccountingTaxrateRequest request) throws Exception {
        RequestOperation<CreateAccountingTaxrateRequest, CreateAccountingTaxrateResponse> operation
              = new CreateAccountingTaxrate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a transaction
     * 
     * @return The call builder
     */
    public CreateAccountingTransactionRequestBuilder createAccountingTransaction() {
        return new CreateAccountingTransactionRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a transaction
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingTransactionResponse createAccountingTransaction(CreateAccountingTransactionRequest request) throws Exception {
        RequestOperation<CreateAccountingTransactionRequest, CreateAccountingTransactionResponse> operation
              = new CreateAccountingTransaction.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an account
     * 
     * @return The call builder
     */
    public GetAccountingAccountRequestBuilder getAccountingAccount() {
        return new GetAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingAccountResponse getAccountingAccount(GetAccountingAccountRequest request) throws Exception {
        RequestOperation<GetAccountingAccountRequest, GetAccountingAccountResponse> operation
              = new GetAccountingAccount.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a balancesheet
     * 
     * @return The call builder
     */
    public GetAccountingBalancesheetRequestBuilder getAccountingBalancesheet() {
        return new GetAccountingBalancesheetRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a balancesheet
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingBalancesheetResponse getAccountingBalancesheet(GetAccountingBalancesheetRequest request) throws Exception {
        RequestOperation<GetAccountingBalancesheetRequest, GetAccountingBalancesheetResponse> operation
              = new GetAccountingBalancesheet.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a bill
     * 
     * @return The call builder
     */
    public GetAccountingBillRequestBuilder getAccountingBill() {
        return new GetAccountingBillRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a bill
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingBillResponse getAccountingBill(GetAccountingBillRequest request) throws Exception {
        RequestOperation<GetAccountingBillRequest, GetAccountingBillResponse> operation
              = new GetAccountingBill.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a category
     * 
     * @return The call builder
     */
    public GetAccountingCategoryRequestBuilder getAccountingCategory() {
        return new GetAccountingCategoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a category
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingCategoryResponse getAccountingCategory(GetAccountingCategoryRequest request) throws Exception {
        RequestOperation<GetAccountingCategoryRequest, GetAccountingCategoryResponse> operation
              = new GetAccountingCategory.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a contact
     * 
     * @return The call builder
     */
    public GetAccountingContactRequestBuilder getAccountingContact() {
        return new GetAccountingContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingContactResponse getAccountingContact(GetAccountingContactRequest request) throws Exception {
        RequestOperation<GetAccountingContactRequest, GetAccountingContactResponse> operation
              = new GetAccountingContact.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a creditmemo
     * 
     * @return The call builder
     */
    public GetAccountingCreditmemoRequestBuilder getAccountingCreditmemo() {
        return new GetAccountingCreditmemoRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a creditmemo
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingCreditmemoResponse getAccountingCreditmemo(GetAccountingCreditmemoRequest request) throws Exception {
        RequestOperation<GetAccountingCreditmemoRequest, GetAccountingCreditmemoResponse> operation
              = new GetAccountingCreditmemo.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an invoice
     * 
     * @return The call builder
     */
    public GetAccountingInvoiceRequestBuilder getAccountingInvoice() {
        return new GetAccountingInvoiceRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an invoice
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingInvoiceResponse getAccountingInvoice(GetAccountingInvoiceRequest request) throws Exception {
        RequestOperation<GetAccountingInvoiceRequest, GetAccountingInvoiceResponse> operation
              = new GetAccountingInvoice.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a journal
     * 
     * @return The call builder
     */
    public GetAccountingJournalRequestBuilder getAccountingJournal() {
        return new GetAccountingJournalRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a journal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingJournalResponse getAccountingJournal(GetAccountingJournalRequest request) throws Exception {
        RequestOperation<GetAccountingJournalRequest, GetAccountingJournalResponse> operation
              = new GetAccountingJournal.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an order
     * 
     * @return The call builder
     */
    public GetAccountingOrderRequestBuilder getAccountingOrder() {
        return new GetAccountingOrderRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an order
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingOrderResponse getAccountingOrder(GetAccountingOrderRequest request) throws Exception {
        RequestOperation<GetAccountingOrderRequest, GetAccountingOrderResponse> operation
              = new GetAccountingOrder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an organization
     * 
     * @return The call builder
     */
    public GetAccountingOrganizationRequestBuilder getAccountingOrganization() {
        return new GetAccountingOrganizationRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an organization
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingOrganizationResponse getAccountingOrganization(GetAccountingOrganizationRequest request) throws Exception {
        RequestOperation<GetAccountingOrganizationRequest, GetAccountingOrganizationResponse> operation
              = new GetAccountingOrganization.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a profitloss
     * 
     * @return The call builder
     */
    public GetAccountingProfitlossRequestBuilder getAccountingProfitloss() {
        return new GetAccountingProfitlossRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a profitloss
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingProfitlossResponse getAccountingProfitloss(GetAccountingProfitlossRequest request) throws Exception {
        RequestOperation<GetAccountingProfitlossRequest, GetAccountingProfitlossResponse> operation
              = new GetAccountingProfitloss.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a purchaseorder
     * 
     * @return The call builder
     */
    public GetAccountingPurchaseorderRequestBuilder getAccountingPurchaseorder() {
        return new GetAccountingPurchaseorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a purchaseorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingPurchaseorderResponse getAccountingPurchaseorder(GetAccountingPurchaseorderRequest request) throws Exception {
        RequestOperation<GetAccountingPurchaseorderRequest, GetAccountingPurchaseorderResponse> operation
              = new GetAccountingPurchaseorder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a report
     * 
     * @return The call builder
     */
    public GetAccountingReportRequestBuilder getAccountingReport() {
        return new GetAccountingReportRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a report
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingReportResponse getAccountingReport(GetAccountingReportRequest request) throws Exception {
        RequestOperation<GetAccountingReportRequest, GetAccountingReportResponse> operation
              = new GetAccountingReport.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a salesorder
     * 
     * @return The call builder
     */
    public GetAccountingSalesorderRequestBuilder getAccountingSalesorder() {
        return new GetAccountingSalesorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a salesorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingSalesorderResponse getAccountingSalesorder(GetAccountingSalesorderRequest request) throws Exception {
        RequestOperation<GetAccountingSalesorderRequest, GetAccountingSalesorderResponse> operation
              = new GetAccountingSalesorder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a taxrate
     * 
     * @return The call builder
     */
    public GetAccountingTaxrateRequestBuilder getAccountingTaxrate() {
        return new GetAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingTaxrateResponse getAccountingTaxrate(GetAccountingTaxrateRequest request) throws Exception {
        RequestOperation<GetAccountingTaxrateRequest, GetAccountingTaxrateResponse> operation
              = new GetAccountingTaxrate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a transaction
     * 
     * @return The call builder
     */
    public GetAccountingTransactionRequestBuilder getAccountingTransaction() {
        return new GetAccountingTransactionRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a transaction
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingTransactionResponse getAccountingTransaction(GetAccountingTransactionRequest request) throws Exception {
        RequestOperation<GetAccountingTransactionRequest, GetAccountingTransactionResponse> operation
              = new GetAccountingTransaction.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a trialbalance
     * 
     * @return The call builder
     */
    public GetAccountingTrialbalanceRequestBuilder getAccountingTrialbalance() {
        return new GetAccountingTrialbalanceRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a trialbalance
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingTrialbalanceResponse getAccountingTrialbalance(GetAccountingTrialbalanceRequest request) throws Exception {
        RequestOperation<GetAccountingTrialbalanceRequest, GetAccountingTrialbalanceResponse> operation
              = new GetAccountingTrialbalance.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all accounts
     * 
     * @return The call builder
     */
    public ListAccountingAccountsRequestBuilder listAccountingAccounts() {
        return new ListAccountingAccountsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all accounts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingAccountsResponse listAccountingAccounts(ListAccountingAccountsRequest request) throws Exception {
        RequestOperation<ListAccountingAccountsRequest, ListAccountingAccountsResponse> operation
              = new ListAccountingAccounts.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all balancesheets
     * 
     * @return The call builder
     */
    public ListAccountingBalancesheetsRequestBuilder listAccountingBalancesheets() {
        return new ListAccountingBalancesheetsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all balancesheets
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingBalancesheetsResponse listAccountingBalancesheets(ListAccountingBalancesheetsRequest request) throws Exception {
        RequestOperation<ListAccountingBalancesheetsRequest, ListAccountingBalancesheetsResponse> operation
              = new ListAccountingBalancesheets.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all bills
     * 
     * @return The call builder
     */
    public ListAccountingBillsRequestBuilder listAccountingBills() {
        return new ListAccountingBillsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all bills
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingBillsResponse listAccountingBills(ListAccountingBillsRequest request) throws Exception {
        RequestOperation<ListAccountingBillsRequest, ListAccountingBillsResponse> operation
              = new ListAccountingBills.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all categories
     * 
     * @return The call builder
     */
    public ListAccountingCategoriesRequestBuilder listAccountingCategories() {
        return new ListAccountingCategoriesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all categories
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingCategoriesResponse listAccountingCategories(ListAccountingCategoriesRequest request) throws Exception {
        RequestOperation<ListAccountingCategoriesRequest, ListAccountingCategoriesResponse> operation
              = new ListAccountingCategories.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all contacts
     * 
     * @return The call builder
     */
    public ListAccountingContactsRequestBuilder listAccountingContacts() {
        return new ListAccountingContactsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all contacts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingContactsResponse listAccountingContacts(ListAccountingContactsRequest request) throws Exception {
        RequestOperation<ListAccountingContactsRequest, ListAccountingContactsResponse> operation
              = new ListAccountingContacts.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all creditmemoes
     * 
     * @return The call builder
     */
    public ListAccountingCreditmemoesRequestBuilder listAccountingCreditmemoes() {
        return new ListAccountingCreditmemoesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all creditmemoes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingCreditmemoesResponse listAccountingCreditmemoes(ListAccountingCreditmemoesRequest request) throws Exception {
        RequestOperation<ListAccountingCreditmemoesRequest, ListAccountingCreditmemoesResponse> operation
              = new ListAccountingCreditmemoes.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all invoices
     * 
     * @return The call builder
     */
    public ListAccountingInvoicesRequestBuilder listAccountingInvoices() {
        return new ListAccountingInvoicesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all invoices
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingInvoicesResponse listAccountingInvoices(ListAccountingInvoicesRequest request) throws Exception {
        RequestOperation<ListAccountingInvoicesRequest, ListAccountingInvoicesResponse> operation
              = new ListAccountingInvoices.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all journals
     * 
     * @return The call builder
     */
    public ListAccountingJournalsRequestBuilder listAccountingJournals() {
        return new ListAccountingJournalsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all journals
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingJournalsResponse listAccountingJournals(ListAccountingJournalsRequest request) throws Exception {
        RequestOperation<ListAccountingJournalsRequest, ListAccountingJournalsResponse> operation
              = new ListAccountingJournals.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all orders
     * 
     * @return The call builder
     */
    public ListAccountingOrdersRequestBuilder listAccountingOrders() {
        return new ListAccountingOrdersRequestBuilder(sdkConfiguration);
    }

    /**
     * List all orders
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingOrdersResponse listAccountingOrders(ListAccountingOrdersRequest request) throws Exception {
        RequestOperation<ListAccountingOrdersRequest, ListAccountingOrdersResponse> operation
              = new ListAccountingOrders.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all organizations
     * 
     * @return The call builder
     */
    public ListAccountingOrganizationsRequestBuilder listAccountingOrganizations() {
        return new ListAccountingOrganizationsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all organizations
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingOrganizationsResponse listAccountingOrganizations(ListAccountingOrganizationsRequest request) throws Exception {
        RequestOperation<ListAccountingOrganizationsRequest, ListAccountingOrganizationsResponse> operation
              = new ListAccountingOrganizations.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all profitlosses
     * 
     * @return The call builder
     */
    public ListAccountingProfitlossesRequestBuilder listAccountingProfitlosses() {
        return new ListAccountingProfitlossesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all profitlosses
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingProfitlossesResponse listAccountingProfitlosses(ListAccountingProfitlossesRequest request) throws Exception {
        RequestOperation<ListAccountingProfitlossesRequest, ListAccountingProfitlossesResponse> operation
              = new ListAccountingProfitlosses.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all purchaseorders
     * 
     * @return The call builder
     */
    public ListAccountingPurchaseordersRequestBuilder listAccountingPurchaseorders() {
        return new ListAccountingPurchaseordersRequestBuilder(sdkConfiguration);
    }

    /**
     * List all purchaseorders
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingPurchaseordersResponse listAccountingPurchaseorders(ListAccountingPurchaseordersRequest request) throws Exception {
        RequestOperation<ListAccountingPurchaseordersRequest, ListAccountingPurchaseordersResponse> operation
              = new ListAccountingPurchaseorders.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all reports
     * 
     * @return The call builder
     */
    public ListAccountingReportsRequestBuilder listAccountingReports() {
        return new ListAccountingReportsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all reports
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingReportsResponse listAccountingReports(ListAccountingReportsRequest request) throws Exception {
        RequestOperation<ListAccountingReportsRequest, ListAccountingReportsResponse> operation
              = new ListAccountingReports.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all salesorders
     * 
     * @return The call builder
     */
    public ListAccountingSalesordersRequestBuilder listAccountingSalesorders() {
        return new ListAccountingSalesordersRequestBuilder(sdkConfiguration);
    }

    /**
     * List all salesorders
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingSalesordersResponse listAccountingSalesorders(ListAccountingSalesordersRequest request) throws Exception {
        RequestOperation<ListAccountingSalesordersRequest, ListAccountingSalesordersResponse> operation
              = new ListAccountingSalesorders.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all taxrates
     * 
     * @return The call builder
     */
    public ListAccountingTaxratesRequestBuilder listAccountingTaxrates() {
        return new ListAccountingTaxratesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all taxrates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingTaxratesResponse listAccountingTaxrates(ListAccountingTaxratesRequest request) throws Exception {
        RequestOperation<ListAccountingTaxratesRequest, ListAccountingTaxratesResponse> operation
              = new ListAccountingTaxrates.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all transactions
     * 
     * @return The call builder
     */
    public ListAccountingTransactionsRequestBuilder listAccountingTransactions() {
        return new ListAccountingTransactionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all transactions
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingTransactionsResponse listAccountingTransactions(ListAccountingTransactionsRequest request) throws Exception {
        RequestOperation<ListAccountingTransactionsRequest, ListAccountingTransactionsResponse> operation
              = new ListAccountingTransactions.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all trialbalances
     * 
     * @return The call builder
     */
    public ListAccountingTrialbalancesRequestBuilder listAccountingTrialbalances() {
        return new ListAccountingTrialbalancesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all trialbalances
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingTrialbalancesResponse listAccountingTrialbalances(ListAccountingTrialbalancesRequest request) throws Exception {
        RequestOperation<ListAccountingTrialbalancesRequest, ListAccountingTrialbalancesResponse> operation
              = new ListAccountingTrialbalances.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an account
     * 
     * @return The call builder
     */
    public PatchAccountingAccountRequestBuilder patchAccountingAccount() {
        return new PatchAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingAccountResponse patchAccountingAccount(PatchAccountingAccountRequest request) throws Exception {
        RequestOperation<PatchAccountingAccountRequest, PatchAccountingAccountResponse> operation
              = new PatchAccountingAccount.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a bill
     * 
     * @return The call builder
     */
    public PatchAccountingBillRequestBuilder patchAccountingBill() {
        return new PatchAccountingBillRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a bill
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingBillResponse patchAccountingBill(PatchAccountingBillRequest request) throws Exception {
        RequestOperation<PatchAccountingBillRequest, PatchAccountingBillResponse> operation
              = new PatchAccountingBill.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a category
     * 
     * @return The call builder
     */
    public PatchAccountingCategoryRequestBuilder patchAccountingCategory() {
        return new PatchAccountingCategoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a category
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingCategoryResponse patchAccountingCategory(PatchAccountingCategoryRequest request) throws Exception {
        RequestOperation<PatchAccountingCategoryRequest, PatchAccountingCategoryResponse> operation
              = new PatchAccountingCategory.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a contact
     * 
     * @return The call builder
     */
    public PatchAccountingContactRequestBuilder patchAccountingContact() {
        return new PatchAccountingContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingContactResponse patchAccountingContact(PatchAccountingContactRequest request) throws Exception {
        RequestOperation<PatchAccountingContactRequest, PatchAccountingContactResponse> operation
              = new PatchAccountingContact.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a creditmemo
     * 
     * @return The call builder
     */
    public PatchAccountingCreditmemoRequestBuilder patchAccountingCreditmemo() {
        return new PatchAccountingCreditmemoRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a creditmemo
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingCreditmemoResponse patchAccountingCreditmemo(PatchAccountingCreditmemoRequest request) throws Exception {
        RequestOperation<PatchAccountingCreditmemoRequest, PatchAccountingCreditmemoResponse> operation
              = new PatchAccountingCreditmemo.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an invoice
     * 
     * @return The call builder
     */
    public PatchAccountingInvoiceRequestBuilder patchAccountingInvoice() {
        return new PatchAccountingInvoiceRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an invoice
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingInvoiceResponse patchAccountingInvoice(PatchAccountingInvoiceRequest request) throws Exception {
        RequestOperation<PatchAccountingInvoiceRequest, PatchAccountingInvoiceResponse> operation
              = new PatchAccountingInvoice.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a journal
     * 
     * @return The call builder
     */
    public PatchAccountingJournalRequestBuilder patchAccountingJournal() {
        return new PatchAccountingJournalRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a journal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingJournalResponse patchAccountingJournal(PatchAccountingJournalRequest request) throws Exception {
        RequestOperation<PatchAccountingJournalRequest, PatchAccountingJournalResponse> operation
              = new PatchAccountingJournal.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an order
     * 
     * @return The call builder
     */
    public PatchAccountingOrderRequestBuilder patchAccountingOrder() {
        return new PatchAccountingOrderRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an order
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingOrderResponse patchAccountingOrder(PatchAccountingOrderRequest request) throws Exception {
        RequestOperation<PatchAccountingOrderRequest, PatchAccountingOrderResponse> operation
              = new PatchAccountingOrder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a purchaseorder
     * 
     * @return The call builder
     */
    public PatchAccountingPurchaseorderRequestBuilder patchAccountingPurchaseorder() {
        return new PatchAccountingPurchaseorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a purchaseorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingPurchaseorderResponse patchAccountingPurchaseorder(PatchAccountingPurchaseorderRequest request) throws Exception {
        RequestOperation<PatchAccountingPurchaseorderRequest, PatchAccountingPurchaseorderResponse> operation
              = new PatchAccountingPurchaseorder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a salesorder
     * 
     * @return The call builder
     */
    public PatchAccountingSalesorderRequestBuilder patchAccountingSalesorder() {
        return new PatchAccountingSalesorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a salesorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingSalesorderResponse patchAccountingSalesorder(PatchAccountingSalesorderRequest request) throws Exception {
        RequestOperation<PatchAccountingSalesorderRequest, PatchAccountingSalesorderResponse> operation
              = new PatchAccountingSalesorder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a taxrate
     * 
     * @return The call builder
     */
    public PatchAccountingTaxrateRequestBuilder patchAccountingTaxrate() {
        return new PatchAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingTaxrateResponse patchAccountingTaxrate(PatchAccountingTaxrateRequest request) throws Exception {
        RequestOperation<PatchAccountingTaxrateRequest, PatchAccountingTaxrateResponse> operation
              = new PatchAccountingTaxrate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a transaction
     * 
     * @return The call builder
     */
    public PatchAccountingTransactionRequestBuilder patchAccountingTransaction() {
        return new PatchAccountingTransactionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a transaction
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingTransactionResponse patchAccountingTransaction(PatchAccountingTransactionRequest request) throws Exception {
        RequestOperation<PatchAccountingTransactionRequest, PatchAccountingTransactionResponse> operation
              = new PatchAccountingTransaction.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an account
     * 
     * @return The call builder
     */
    public RemoveAccountingAccountRequestBuilder removeAccountingAccount() {
        return new RemoveAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingAccountResponse removeAccountingAccount(RemoveAccountingAccountRequest request) throws Exception {
        RequestOperation<RemoveAccountingAccountRequest, RemoveAccountingAccountResponse> operation
              = new RemoveAccountingAccount.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a bill
     * 
     * @return The call builder
     */
    public RemoveAccountingBillRequestBuilder removeAccountingBill() {
        return new RemoveAccountingBillRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a bill
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingBillResponse removeAccountingBill(RemoveAccountingBillRequest request) throws Exception {
        RequestOperation<RemoveAccountingBillRequest, RemoveAccountingBillResponse> operation
              = new RemoveAccountingBill.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a category
     * 
     * @return The call builder
     */
    public RemoveAccountingCategoryRequestBuilder removeAccountingCategory() {
        return new RemoveAccountingCategoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a category
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingCategoryResponse removeAccountingCategory(RemoveAccountingCategoryRequest request) throws Exception {
        RequestOperation<RemoveAccountingCategoryRequest, RemoveAccountingCategoryResponse> operation
              = new RemoveAccountingCategory.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a contact
     * 
     * @return The call builder
     */
    public RemoveAccountingContactRequestBuilder removeAccountingContact() {
        return new RemoveAccountingContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingContactResponse removeAccountingContact(RemoveAccountingContactRequest request) throws Exception {
        RequestOperation<RemoveAccountingContactRequest, RemoveAccountingContactResponse> operation
              = new RemoveAccountingContact.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a creditmemo
     * 
     * @return The call builder
     */
    public RemoveAccountingCreditmemoRequestBuilder removeAccountingCreditmemo() {
        return new RemoveAccountingCreditmemoRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a creditmemo
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingCreditmemoResponse removeAccountingCreditmemo(RemoveAccountingCreditmemoRequest request) throws Exception {
        RequestOperation<RemoveAccountingCreditmemoRequest, RemoveAccountingCreditmemoResponse> operation
              = new RemoveAccountingCreditmemo.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an invoice
     * 
     * @return The call builder
     */
    public RemoveAccountingInvoiceRequestBuilder removeAccountingInvoice() {
        return new RemoveAccountingInvoiceRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an invoice
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingInvoiceResponse removeAccountingInvoice(RemoveAccountingInvoiceRequest request) throws Exception {
        RequestOperation<RemoveAccountingInvoiceRequest, RemoveAccountingInvoiceResponse> operation
              = new RemoveAccountingInvoice.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a journal
     * 
     * @return The call builder
     */
    public RemoveAccountingJournalRequestBuilder removeAccountingJournal() {
        return new RemoveAccountingJournalRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a journal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingJournalResponse removeAccountingJournal(RemoveAccountingJournalRequest request) throws Exception {
        RequestOperation<RemoveAccountingJournalRequest, RemoveAccountingJournalResponse> operation
              = new RemoveAccountingJournal.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an order
     * 
     * @return The call builder
     */
    public RemoveAccountingOrderRequestBuilder removeAccountingOrder() {
        return new RemoveAccountingOrderRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an order
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingOrderResponse removeAccountingOrder(RemoveAccountingOrderRequest request) throws Exception {
        RequestOperation<RemoveAccountingOrderRequest, RemoveAccountingOrderResponse> operation
              = new RemoveAccountingOrder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a purchaseorder
     * 
     * @return The call builder
     */
    public RemoveAccountingPurchaseorderRequestBuilder removeAccountingPurchaseorder() {
        return new RemoveAccountingPurchaseorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a purchaseorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingPurchaseorderResponse removeAccountingPurchaseorder(RemoveAccountingPurchaseorderRequest request) throws Exception {
        RequestOperation<RemoveAccountingPurchaseorderRequest, RemoveAccountingPurchaseorderResponse> operation
              = new RemoveAccountingPurchaseorder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a salesorder
     * 
     * @return The call builder
     */
    public RemoveAccountingSalesorderRequestBuilder removeAccountingSalesorder() {
        return new RemoveAccountingSalesorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a salesorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingSalesorderResponse removeAccountingSalesorder(RemoveAccountingSalesorderRequest request) throws Exception {
        RequestOperation<RemoveAccountingSalesorderRequest, RemoveAccountingSalesorderResponse> operation
              = new RemoveAccountingSalesorder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a taxrate
     * 
     * @return The call builder
     */
    public RemoveAccountingTaxrateRequestBuilder removeAccountingTaxrate() {
        return new RemoveAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingTaxrateResponse removeAccountingTaxrate(RemoveAccountingTaxrateRequest request) throws Exception {
        RequestOperation<RemoveAccountingTaxrateRequest, RemoveAccountingTaxrateResponse> operation
              = new RemoveAccountingTaxrate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a transaction
     * 
     * @return The call builder
     */
    public RemoveAccountingTransactionRequestBuilder removeAccountingTransaction() {
        return new RemoveAccountingTransactionRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a transaction
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingTransactionResponse removeAccountingTransaction(RemoveAccountingTransactionRequest request) throws Exception {
        RequestOperation<RemoveAccountingTransactionRequest, RemoveAccountingTransactionResponse> operation
              = new RemoveAccountingTransaction.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an account
     * 
     * @return The call builder
     */
    public UpdateAccountingAccountRequestBuilder updateAccountingAccount() {
        return new UpdateAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingAccountResponse updateAccountingAccount(UpdateAccountingAccountRequest request) throws Exception {
        RequestOperation<UpdateAccountingAccountRequest, UpdateAccountingAccountResponse> operation
              = new UpdateAccountingAccount.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a bill
     * 
     * @return The call builder
     */
    public UpdateAccountingBillRequestBuilder updateAccountingBill() {
        return new UpdateAccountingBillRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a bill
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingBillResponse updateAccountingBill(UpdateAccountingBillRequest request) throws Exception {
        RequestOperation<UpdateAccountingBillRequest, UpdateAccountingBillResponse> operation
              = new UpdateAccountingBill.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a category
     * 
     * @return The call builder
     */
    public UpdateAccountingCategoryRequestBuilder updateAccountingCategory() {
        return new UpdateAccountingCategoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a category
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingCategoryResponse updateAccountingCategory(UpdateAccountingCategoryRequest request) throws Exception {
        RequestOperation<UpdateAccountingCategoryRequest, UpdateAccountingCategoryResponse> operation
              = new UpdateAccountingCategory.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a contact
     * 
     * @return The call builder
     */
    public UpdateAccountingContactRequestBuilder updateAccountingContact() {
        return new UpdateAccountingContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingContactResponse updateAccountingContact(UpdateAccountingContactRequest request) throws Exception {
        RequestOperation<UpdateAccountingContactRequest, UpdateAccountingContactResponse> operation
              = new UpdateAccountingContact.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a creditmemo
     * 
     * @return The call builder
     */
    public UpdateAccountingCreditmemoRequestBuilder updateAccountingCreditmemo() {
        return new UpdateAccountingCreditmemoRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a creditmemo
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingCreditmemoResponse updateAccountingCreditmemo(UpdateAccountingCreditmemoRequest request) throws Exception {
        RequestOperation<UpdateAccountingCreditmemoRequest, UpdateAccountingCreditmemoResponse> operation
              = new UpdateAccountingCreditmemo.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an invoice
     * 
     * @return The call builder
     */
    public UpdateAccountingInvoiceRequestBuilder updateAccountingInvoice() {
        return new UpdateAccountingInvoiceRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an invoice
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingInvoiceResponse updateAccountingInvoice(UpdateAccountingInvoiceRequest request) throws Exception {
        RequestOperation<UpdateAccountingInvoiceRequest, UpdateAccountingInvoiceResponse> operation
              = new UpdateAccountingInvoice.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a journal
     * 
     * @return The call builder
     */
    public UpdateAccountingJournalRequestBuilder updateAccountingJournal() {
        return new UpdateAccountingJournalRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a journal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingJournalResponse updateAccountingJournal(UpdateAccountingJournalRequest request) throws Exception {
        RequestOperation<UpdateAccountingJournalRequest, UpdateAccountingJournalResponse> operation
              = new UpdateAccountingJournal.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an order
     * 
     * @return The call builder
     */
    public UpdateAccountingOrderRequestBuilder updateAccountingOrder() {
        return new UpdateAccountingOrderRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an order
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingOrderResponse updateAccountingOrder(UpdateAccountingOrderRequest request) throws Exception {
        RequestOperation<UpdateAccountingOrderRequest, UpdateAccountingOrderResponse> operation
              = new UpdateAccountingOrder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a purchaseorder
     * 
     * @return The call builder
     */
    public UpdateAccountingPurchaseorderRequestBuilder updateAccountingPurchaseorder() {
        return new UpdateAccountingPurchaseorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a purchaseorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingPurchaseorderResponse updateAccountingPurchaseorder(UpdateAccountingPurchaseorderRequest request) throws Exception {
        RequestOperation<UpdateAccountingPurchaseorderRequest, UpdateAccountingPurchaseorderResponse> operation
              = new UpdateAccountingPurchaseorder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a salesorder
     * 
     * @return The call builder
     */
    public UpdateAccountingSalesorderRequestBuilder updateAccountingSalesorder() {
        return new UpdateAccountingSalesorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a salesorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingSalesorderResponse updateAccountingSalesorder(UpdateAccountingSalesorderRequest request) throws Exception {
        RequestOperation<UpdateAccountingSalesorderRequest, UpdateAccountingSalesorderResponse> operation
              = new UpdateAccountingSalesorder.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a taxrate
     * 
     * @return The call builder
     */
    public UpdateAccountingTaxrateRequestBuilder updateAccountingTaxrate() {
        return new UpdateAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingTaxrateResponse updateAccountingTaxrate(UpdateAccountingTaxrateRequest request) throws Exception {
        RequestOperation<UpdateAccountingTaxrateRequest, UpdateAccountingTaxrateResponse> operation
              = new UpdateAccountingTaxrate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a transaction
     * 
     * @return The call builder
     */
    public UpdateAccountingTransactionRequestBuilder updateAccountingTransaction() {
        return new UpdateAccountingTransactionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a transaction
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingTransactionResponse updateAccountingTransaction(UpdateAccountingTransactionRequest request) throws Exception {
        RequestOperation<UpdateAccountingTransactionRequest, UpdateAccountingTransactionResponse> operation
              = new UpdateAccountingTransaction.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
