/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateRepoRepositoryRequest;
import to.unified.unified_java_sdk.models.operations.CreateRepoRepositoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateRepoRepositoryResponse;
import to.unified.unified_java_sdk.models.operations.GetRepoRepositoryRequest;
import to.unified.unified_java_sdk.models.operations.GetRepoRepositoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetRepoRepositoryResponse;
import to.unified.unified_java_sdk.models.operations.ListRepoRepositoriesRequest;
import to.unified.unified_java_sdk.models.operations.ListRepoRepositoriesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListRepoRepositoriesResponse;
import to.unified.unified_java_sdk.models.operations.PatchRepoRepositoryRequest;
import to.unified.unified_java_sdk.models.operations.PatchRepoRepositoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchRepoRepositoryResponse;
import to.unified.unified_java_sdk.models.operations.RemoveRepoRepositoryRequest;
import to.unified.unified_java_sdk.models.operations.RemoveRepoRepositoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveRepoRepositoryResponse;
import to.unified.unified_java_sdk.models.operations.UpdateRepoRepositoryRequest;
import to.unified.unified_java_sdk.models.operations.UpdateRepoRepositoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateRepoRepositoryResponse;
import to.unified.unified_java_sdk.operations.CreateRepoRepositoryOperation;
import to.unified.unified_java_sdk.operations.GetRepoRepositoryOperation;
import to.unified.unified_java_sdk.operations.ListRepoRepositoriesOperation;
import to.unified.unified_java_sdk.operations.PatchRepoRepositoryOperation;
import to.unified.unified_java_sdk.operations.RemoveRepoRepositoryOperation;
import to.unified.unified_java_sdk.operations.UpdateRepoRepositoryOperation;


public class Repository {
    private final SDKConfiguration sdkConfiguration;

    Repository(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a repository
     * 
     * @return The call builder
     */
    public CreateRepoRepositoryRequestBuilder createRepoRepository() {
        return new CreateRepoRepositoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a repository
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateRepoRepositoryResponse createRepoRepository(CreateRepoRepositoryRequest request) throws Exception {
        RequestOperation<CreateRepoRepositoryRequest, CreateRepoRepositoryResponse> operation
              = new CreateRepoRepositoryOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a repository
     * 
     * @return The call builder
     */
    public GetRepoRepositoryRequestBuilder getRepoRepository() {
        return new GetRepoRepositoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a repository
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetRepoRepositoryResponse getRepoRepository(GetRepoRepositoryRequest request) throws Exception {
        RequestOperation<GetRepoRepositoryRequest, GetRepoRepositoryResponse> operation
              = new GetRepoRepositoryOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all repositories
     * 
     * @return The call builder
     */
    public ListRepoRepositoriesRequestBuilder listRepoRepositories() {
        return new ListRepoRepositoriesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all repositories
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListRepoRepositoriesResponse listRepoRepositories(ListRepoRepositoriesRequest request) throws Exception {
        RequestOperation<ListRepoRepositoriesRequest, ListRepoRepositoriesResponse> operation
              = new ListRepoRepositoriesOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a repository
     * 
     * @return The call builder
     */
    public PatchRepoRepositoryRequestBuilder patchRepoRepository() {
        return new PatchRepoRepositoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a repository
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchRepoRepositoryResponse patchRepoRepository(PatchRepoRepositoryRequest request) throws Exception {
        RequestOperation<PatchRepoRepositoryRequest, PatchRepoRepositoryResponse> operation
              = new PatchRepoRepositoryOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a repository
     * 
     * @return The call builder
     */
    public RemoveRepoRepositoryRequestBuilder removeRepoRepository() {
        return new RemoveRepoRepositoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a repository
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveRepoRepositoryResponse removeRepoRepository(RemoveRepoRepositoryRequest request) throws Exception {
        RequestOperation<RemoveRepoRepositoryRequest, RemoveRepoRepositoryResponse> operation
              = new RemoveRepoRepositoryOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a repository
     * 
     * @return The call builder
     */
    public UpdateRepoRepositoryRequestBuilder updateRepoRepository() {
        return new UpdateRepoRepositoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a repository
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateRepoRepositoryResponse updateRepoRepository(UpdateRepoRepositoryRequest request) throws Exception {
        RequestOperation<UpdateRepoRepositoryRequest, UpdateRepoRepositoryResponse> operation
              = new UpdateRepoRepositoryOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
