/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.ListUnifiedIssuesRequest;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedIssuesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedIssuesResponse;
import to.unified.unified_java_sdk.operations.ListUnifiedIssues;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncIssue {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Issue syncSDK;

    AsyncIssue(Issue syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Issue sync() {
        return syncSDK;
    }


    /**
     * List support issues
     * 
     * @return The async call builder
     */
    public ListUnifiedIssuesRequestBuilder listUnifiedIssues() {
        return new ListUnifiedIssuesRequestBuilder(sdkConfiguration);
    }

    /**
     * List support issues
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUnifiedIssuesResponse>} - The async response
     */
    public CompletableFuture<ListUnifiedIssuesResponse> listUnifiedIssues(ListUnifiedIssuesRequest request) {
        AsyncRequestOperation<ListUnifiedIssuesRequest, ListUnifiedIssuesResponse> operation
              = new ListUnifiedIssues.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
