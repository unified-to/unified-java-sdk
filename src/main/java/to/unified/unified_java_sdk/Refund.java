/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.GetPaymentRefundRequest;
import to.unified.unified_java_sdk.models.operations.GetPaymentRefundRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetPaymentRefundResponse;
import to.unified.unified_java_sdk.models.operations.ListPaymentRefundsRequest;
import to.unified.unified_java_sdk.models.operations.ListPaymentRefundsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListPaymentRefundsResponse;
import to.unified.unified_java_sdk.operations.GetPaymentRefund;
import to.unified.unified_java_sdk.operations.ListPaymentRefunds;
import to.unified.unified_java_sdk.utils.Headers;


public class Refund {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncRefund asyncSDK;

    Refund(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncRefund(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncRefund async() {
        return asyncSDK;
    }

    /**
     * Retrieve a refund
     * 
     * @return The call builder
     */
    public GetPaymentRefundRequestBuilder getPaymentRefund() {
        return new GetPaymentRefundRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a refund
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetPaymentRefundResponse getPaymentRefund(GetPaymentRefundRequest request) throws Exception {
        RequestOperation<GetPaymentRefundRequest, GetPaymentRefundResponse> operation
              = new GetPaymentRefund.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all refunds
     * 
     * @return The call builder
     */
    public ListPaymentRefundsRequestBuilder listPaymentRefunds() {
        return new ListPaymentRefundsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all refunds
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListPaymentRefundsResponse listPaymentRefunds(ListPaymentRefundsRequest request) throws Exception {
        RequestOperation<ListPaymentRefundsRequest, ListPaymentRefundsResponse> operation
              = new ListPaymentRefunds.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
