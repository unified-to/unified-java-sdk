/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.GetAccountingProfitlossRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingProfitlossesRequest;
import to.unified.unified_java_sdk.models.operations.async.GetAccountingProfitlossRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAccountingProfitlossResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAccountingProfitlossesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAccountingProfitlossesResponse;
import to.unified.unified_java_sdk.operations.GetAccountingProfitloss;
import to.unified.unified_java_sdk.operations.ListAccountingProfitlosses;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncProfitloss {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Profitloss syncSDK;

    AsyncProfitloss(Profitloss syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Profitloss sync() {
        return syncSDK;
    }


    /**
     * Retrieve a profitloss
     * 
     * @return The async call builder
     */
    public GetAccountingProfitlossRequestBuilder getAccountingProfitloss() {
        return new GetAccountingProfitlossRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a profitloss
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetAccountingProfitlossResponse&gt; - The async response
     */
    public CompletableFuture<GetAccountingProfitlossResponse> getAccountingProfitloss(GetAccountingProfitlossRequest request) {
        AsyncRequestOperation<GetAccountingProfitlossRequest, GetAccountingProfitlossResponse> operation
              = new GetAccountingProfitloss.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all profitlosses
     * 
     * @return The async call builder
     */
    public ListAccountingProfitlossesRequestBuilder listAccountingProfitlosses() {
        return new ListAccountingProfitlossesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all profitlosses
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListAccountingProfitlossesResponse&gt; - The async response
     */
    public CompletableFuture<ListAccountingProfitlossesResponse> listAccountingProfitlosses(ListAccountingProfitlossesRequest request) {
        AsyncRequestOperation<ListAccountingProfitlossesRequest, ListAccountingProfitlossesResponse> operation
              = new ListAccountingProfitlosses.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
