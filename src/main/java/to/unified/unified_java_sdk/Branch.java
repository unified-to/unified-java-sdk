/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateRepoBranchRequest;
import to.unified.unified_java_sdk.models.operations.CreateRepoBranchRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateRepoBranchResponse;
import to.unified.unified_java_sdk.models.operations.GetRepoBranchRequest;
import to.unified.unified_java_sdk.models.operations.GetRepoBranchRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetRepoBranchResponse;
import to.unified.unified_java_sdk.models.operations.ListRepoBranchesRequest;
import to.unified.unified_java_sdk.models.operations.ListRepoBranchesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListRepoBranchesResponse;
import to.unified.unified_java_sdk.models.operations.PatchRepoBranchRequest;
import to.unified.unified_java_sdk.models.operations.PatchRepoBranchRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchRepoBranchResponse;
import to.unified.unified_java_sdk.models.operations.RemoveRepoBranchRequest;
import to.unified.unified_java_sdk.models.operations.RemoveRepoBranchRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveRepoBranchResponse;
import to.unified.unified_java_sdk.models.operations.UpdateRepoBranchRequest;
import to.unified.unified_java_sdk.models.operations.UpdateRepoBranchRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateRepoBranchResponse;
import to.unified.unified_java_sdk.operations.CreateRepoBranchOperation;
import to.unified.unified_java_sdk.operations.GetRepoBranchOperation;
import to.unified.unified_java_sdk.operations.ListRepoBranchesOperation;
import to.unified.unified_java_sdk.operations.PatchRepoBranchOperation;
import to.unified.unified_java_sdk.operations.RemoveRepoBranchOperation;
import to.unified.unified_java_sdk.operations.UpdateRepoBranchOperation;


public class Branch {
    private final SDKConfiguration sdkConfiguration;

    Branch(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a branch
     * 
     * @return The call builder
     */
    public CreateRepoBranchRequestBuilder createRepoBranch() {
        return new CreateRepoBranchRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a branch
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateRepoBranchResponse createRepoBranch(CreateRepoBranchRequest request) throws Exception {
        RequestOperation<CreateRepoBranchRequest, CreateRepoBranchResponse> operation
              = new CreateRepoBranchOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a branch
     * 
     * @return The call builder
     */
    public GetRepoBranchRequestBuilder getRepoBranch() {
        return new GetRepoBranchRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a branch
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetRepoBranchResponse getRepoBranch(GetRepoBranchRequest request) throws Exception {
        RequestOperation<GetRepoBranchRequest, GetRepoBranchResponse> operation
              = new GetRepoBranchOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all branches
     * 
     * @return The call builder
     */
    public ListRepoBranchesRequestBuilder listRepoBranches() {
        return new ListRepoBranchesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all branches
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListRepoBranchesResponse listRepoBranches(ListRepoBranchesRequest request) throws Exception {
        RequestOperation<ListRepoBranchesRequest, ListRepoBranchesResponse> operation
              = new ListRepoBranchesOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a branch
     * 
     * @return The call builder
     */
    public PatchRepoBranchRequestBuilder patchRepoBranch() {
        return new PatchRepoBranchRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a branch
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchRepoBranchResponse patchRepoBranch(PatchRepoBranchRequest request) throws Exception {
        RequestOperation<PatchRepoBranchRequest, PatchRepoBranchResponse> operation
              = new PatchRepoBranchOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a branch
     * 
     * @return The call builder
     */
    public RemoveRepoBranchRequestBuilder removeRepoBranch() {
        return new RemoveRepoBranchRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a branch
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveRepoBranchResponse removeRepoBranch(RemoveRepoBranchRequest request) throws Exception {
        RequestOperation<RemoveRepoBranchRequest, RemoveRepoBranchResponse> operation
              = new RemoveRepoBranchOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a branch
     * 
     * @return The call builder
     */
    public UpdateRepoBranchRequestBuilder updateRepoBranch() {
        return new UpdateRepoBranchRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a branch
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateRepoBranchResponse updateRepoBranch(UpdateRepoBranchRequest request) throws Exception {
        RequestOperation<UpdateRepoBranchRequest, UpdateRepoBranchResponse> operation
              = new UpdateRepoBranchOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
