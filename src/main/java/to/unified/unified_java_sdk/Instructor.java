/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import to.unified.unified_java_sdk.models.operations.CreateLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.CreateLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.GetLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.ListLmsInstructorsRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsInstructorsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListLmsInstructorsResponse;
import to.unified.unified_java_sdk.models.operations.PatchLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.RemoveLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.UpdateLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateLmsInstructorResponse;
import to.unified.unified_java_sdk.operations.CreateLmsInstructor;
import to.unified.unified_java_sdk.operations.GetLmsInstructor;
import to.unified.unified_java_sdk.operations.ListLmsInstructors;
import to.unified.unified_java_sdk.operations.PatchLmsInstructor;
import to.unified.unified_java_sdk.operations.RemoveLmsInstructor;
import to.unified.unified_java_sdk.operations.UpdateLmsInstructor;
import to.unified.unified_java_sdk.utils.Headers;


public class Instructor {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncInstructor asyncSDK;

    Instructor(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncInstructor(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncInstructor async() {
        return asyncSDK;
    }

    /**
     * Create an instructor
     * 
     * @return The call builder
     */
    public CreateLmsInstructorRequestBuilder createLmsInstructor() {
        return new CreateLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateLmsInstructorResponse createLmsInstructor(CreateLmsInstructorRequest request) {
        RequestOperation<CreateLmsInstructorRequest, CreateLmsInstructorResponse> operation
              = new CreateLmsInstructor.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an instructor
     * 
     * @return The call builder
     */
    public GetLmsInstructorRequestBuilder getLmsInstructor() {
        return new GetLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetLmsInstructorResponse getLmsInstructor(GetLmsInstructorRequest request) {
        RequestOperation<GetLmsInstructorRequest, GetLmsInstructorResponse> operation
              = new GetLmsInstructor.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all instructors
     * 
     * @return The call builder
     */
    public ListLmsInstructorsRequestBuilder listLmsInstructors() {
        return new ListLmsInstructorsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all instructors
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListLmsInstructorsResponse listLmsInstructors(ListLmsInstructorsRequest request) {
        RequestOperation<ListLmsInstructorsRequest, ListLmsInstructorsResponse> operation
              = new ListLmsInstructors.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an instructor
     * 
     * @return The call builder
     */
    public PatchLmsInstructorRequestBuilder patchLmsInstructor() {
        return new PatchLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchLmsInstructorResponse patchLmsInstructor(PatchLmsInstructorRequest request) {
        RequestOperation<PatchLmsInstructorRequest, PatchLmsInstructorResponse> operation
              = new PatchLmsInstructor.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an instructor
     * 
     * @return The call builder
     */
    public RemoveLmsInstructorRequestBuilder removeLmsInstructor() {
        return new RemoveLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveLmsInstructorResponse removeLmsInstructor(RemoveLmsInstructorRequest request) {
        RequestOperation<RemoveLmsInstructorRequest, RemoveLmsInstructorResponse> operation
              = new RemoveLmsInstructor.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an instructor
     * 
     * @return The call builder
     */
    public UpdateLmsInstructorRequestBuilder updateLmsInstructor() {
        return new UpdateLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateLmsInstructorResponse updateLmsInstructor(UpdateLmsInstructorRequest request) {
        RequestOperation<UpdateLmsInstructorRequest, UpdateLmsInstructorResponse> operation
              = new UpdateLmsInstructor.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
