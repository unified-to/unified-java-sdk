/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import java.util.List;
import java.util.Optional;
import to.unified.unified_java_sdk.models.operations.CreateLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.CreateLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.GetLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.ListLmsInstructorsRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsInstructorsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListLmsInstructorsResponse;
import to.unified.unified_java_sdk.models.operations.PatchLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.RemoveLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.UpdateLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateLmsInstructorResponse;
import to.unified.unified_java_sdk.operations.CreateLmsInstructorOperation;
import to.unified.unified_java_sdk.operations.GetLmsInstructorOperation;
import to.unified.unified_java_sdk.operations.ListLmsInstructorsOperation;
import to.unified.unified_java_sdk.operations.PatchLmsInstructorOperation;
import to.unified.unified_java_sdk.operations.RemoveLmsInstructorOperation;
import to.unified.unified_java_sdk.operations.UpdateLmsInstructorOperation;


public class Instructor {
    private final SDKConfiguration sdkConfiguration;

    Instructor(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create an instructor
     * 
     * @return The call builder
     */
    public CreateLmsInstructorRequestBuilder createLmsInstructor() {
        return new CreateLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateLmsInstructorResponse createLmsInstructor(
            CreateLmsInstructorRequest request) throws Exception {
        RequestOperation<CreateLmsInstructorRequest, CreateLmsInstructorResponse> operation
              = new CreateLmsInstructorOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve an instructor
     * 
     * @return The call builder
     */
    public GetLmsInstructorRequestBuilder getLmsInstructor() {
        return new GetLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetLmsInstructorResponse getLmsInstructor(
            GetLmsInstructorRequest request) throws Exception {
        RequestOperation<GetLmsInstructorRequest, GetLmsInstructorResponse> operation
              = new GetLmsInstructorOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all instructors
     * 
     * @return The call builder
     */
    public ListLmsInstructorsRequestBuilder listLmsInstructors() {
        return new ListLmsInstructorsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all instructors
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListLmsInstructorsResponse listLmsInstructors(
            ListLmsInstructorsRequest request) throws Exception {
        RequestOperation<ListLmsInstructorsRequest, ListLmsInstructorsResponse> operation
              = new ListLmsInstructorsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update an instructor
     * 
     * @return The call builder
     */
    public PatchLmsInstructorRequestBuilder patchLmsInstructor() {
        return new PatchLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchLmsInstructorResponse patchLmsInstructor(
            PatchLmsInstructorRequest request) throws Exception {
        RequestOperation<PatchLmsInstructorRequest, PatchLmsInstructorResponse> operation
              = new PatchLmsInstructorOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove an instructor
     * 
     * @return The call builder
     */
    public RemoveLmsInstructorRequestBuilder removeLmsInstructor() {
        return new RemoveLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveLmsInstructorResponse removeLmsInstructor(
            RemoveLmsInstructorRequest request) throws Exception {
        RequestOperation<RemoveLmsInstructorRequest, RemoveLmsInstructorResponse> operation
              = new RemoveLmsInstructorOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update an instructor
     * 
     * @return The call builder
     */
    public UpdateLmsInstructorRequestBuilder updateLmsInstructor() {
        return new UpdateLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateLmsInstructorResponse updateLmsInstructor(
            UpdateLmsInstructorRequest request) throws Exception {
        RequestOperation<UpdateLmsInstructorRequest, UpdateLmsInstructorResponse> operation
              = new UpdateLmsInstructorOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
