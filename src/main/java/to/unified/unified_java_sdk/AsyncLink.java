/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.CreatePaymentLinkRequest;
import to.unified.unified_java_sdk.models.operations.GetCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.GetPaymentLinkRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarLinksRequest;
import to.unified.unified_java_sdk.models.operations.ListPaymentLinksRequest;
import to.unified.unified_java_sdk.models.operations.PatchCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.PatchPaymentLinkRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.RemovePaymentLinkRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.UpdatePaymentLinkRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.CreatePaymentLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreatePaymentLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.GetPaymentLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetPaymentLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCalendarLinksRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCalendarLinksResponse;
import to.unified.unified_java_sdk.models.operations.async.ListPaymentLinksRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListPaymentLinksResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchPaymentLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchPaymentLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.RemovePaymentLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemovePaymentLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdatePaymentLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdatePaymentLinkResponse;
import to.unified.unified_java_sdk.operations.CreateCalendarLink;
import to.unified.unified_java_sdk.operations.CreatePaymentLink;
import to.unified.unified_java_sdk.operations.GetCalendarLink;
import to.unified.unified_java_sdk.operations.GetPaymentLink;
import to.unified.unified_java_sdk.operations.ListCalendarLinks;
import to.unified.unified_java_sdk.operations.ListPaymentLinks;
import to.unified.unified_java_sdk.operations.PatchCalendarLink;
import to.unified.unified_java_sdk.operations.PatchPaymentLink;
import to.unified.unified_java_sdk.operations.RemoveCalendarLink;
import to.unified.unified_java_sdk.operations.RemovePaymentLink;
import to.unified.unified_java_sdk.operations.UpdateCalendarLink;
import to.unified.unified_java_sdk.operations.UpdatePaymentLink;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncLink {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Link syncSDK;

    AsyncLink(Link syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Link sync() {
        return syncSDK;
    }


    /**
     * Create a link
     * 
     * @return The async call builder
     */
    public CreateCalendarLinkRequestBuilder createCalendarLink() {
        return new CreateCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateCalendarLinkResponse>} - The async response
     */
    public CompletableFuture<CreateCalendarLinkResponse> createCalendarLink(CreateCalendarLinkRequest request) {
        AsyncRequestOperation<CreateCalendarLinkRequest, CreateCalendarLinkResponse> operation
              = new CreateCalendarLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a link
     * 
     * @return The async call builder
     */
    public CreatePaymentLinkRequestBuilder createPaymentLink() {
        return new CreatePaymentLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreatePaymentLinkResponse>} - The async response
     */
    public CompletableFuture<CreatePaymentLinkResponse> createPaymentLink(CreatePaymentLinkRequest request) {
        AsyncRequestOperation<CreatePaymentLinkRequest, CreatePaymentLinkResponse> operation
              = new CreatePaymentLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a link
     * 
     * @return The async call builder
     */
    public GetCalendarLinkRequestBuilder getCalendarLink() {
        return new GetCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetCalendarLinkResponse>} - The async response
     */
    public CompletableFuture<GetCalendarLinkResponse> getCalendarLink(GetCalendarLinkRequest request) {
        AsyncRequestOperation<GetCalendarLinkRequest, GetCalendarLinkResponse> operation
              = new GetCalendarLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a link
     * 
     * @return The async call builder
     */
    public GetPaymentLinkRequestBuilder getPaymentLink() {
        return new GetPaymentLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetPaymentLinkResponse>} - The async response
     */
    public CompletableFuture<GetPaymentLinkResponse> getPaymentLink(GetPaymentLinkRequest request) {
        AsyncRequestOperation<GetPaymentLinkRequest, GetPaymentLinkResponse> operation
              = new GetPaymentLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all links
     * 
     * @return The async call builder
     */
    public ListCalendarLinksRequestBuilder listCalendarLinks() {
        return new ListCalendarLinksRequestBuilder(sdkConfiguration);
    }

    /**
     * List all links
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListCalendarLinksResponse>} - The async response
     */
    public CompletableFuture<ListCalendarLinksResponse> listCalendarLinks(ListCalendarLinksRequest request) {
        AsyncRequestOperation<ListCalendarLinksRequest, ListCalendarLinksResponse> operation
              = new ListCalendarLinks.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all links
     * 
     * @return The async call builder
     */
    public ListPaymentLinksRequestBuilder listPaymentLinks() {
        return new ListPaymentLinksRequestBuilder(sdkConfiguration);
    }

    /**
     * List all links
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListPaymentLinksResponse>} - The async response
     */
    public CompletableFuture<ListPaymentLinksResponse> listPaymentLinks(ListPaymentLinksRequest request) {
        AsyncRequestOperation<ListPaymentLinksRequest, ListPaymentLinksResponse> operation
              = new ListPaymentLinks.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a link
     * 
     * @return The async call builder
     */
    public PatchCalendarLinkRequestBuilder patchCalendarLink() {
        return new PatchCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchCalendarLinkResponse>} - The async response
     */
    public CompletableFuture<PatchCalendarLinkResponse> patchCalendarLink(PatchCalendarLinkRequest request) {
        AsyncRequestOperation<PatchCalendarLinkRequest, PatchCalendarLinkResponse> operation
              = new PatchCalendarLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a link
     * 
     * @return The async call builder
     */
    public PatchPaymentLinkRequestBuilder patchPaymentLink() {
        return new PatchPaymentLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchPaymentLinkResponse>} - The async response
     */
    public CompletableFuture<PatchPaymentLinkResponse> patchPaymentLink(PatchPaymentLinkRequest request) {
        AsyncRequestOperation<PatchPaymentLinkRequest, PatchPaymentLinkResponse> operation
              = new PatchPaymentLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a link
     * 
     * @return The async call builder
     */
    public RemoveCalendarLinkRequestBuilder removeCalendarLink() {
        return new RemoveCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveCalendarLinkResponse>} - The async response
     */
    public CompletableFuture<RemoveCalendarLinkResponse> removeCalendarLink(RemoveCalendarLinkRequest request) {
        AsyncRequestOperation<RemoveCalendarLinkRequest, RemoveCalendarLinkResponse> operation
              = new RemoveCalendarLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a link
     * 
     * @return The async call builder
     */
    public RemovePaymentLinkRequestBuilder removePaymentLink() {
        return new RemovePaymentLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemovePaymentLinkResponse>} - The async response
     */
    public CompletableFuture<RemovePaymentLinkResponse> removePaymentLink(RemovePaymentLinkRequest request) {
        AsyncRequestOperation<RemovePaymentLinkRequest, RemovePaymentLinkResponse> operation
              = new RemovePaymentLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a link
     * 
     * @return The async call builder
     */
    public UpdateCalendarLinkRequestBuilder updateCalendarLink() {
        return new UpdateCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateCalendarLinkResponse>} - The async response
     */
    public CompletableFuture<UpdateCalendarLinkResponse> updateCalendarLink(UpdateCalendarLinkRequest request) {
        AsyncRequestOperation<UpdateCalendarLinkRequest, UpdateCalendarLinkResponse> operation
              = new UpdateCalendarLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a link
     * 
     * @return The async call builder
     */
    public UpdatePaymentLinkRequestBuilder updatePaymentLink() {
        return new UpdatePaymentLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdatePaymentLinkResponse>} - The async response
     */
    public CompletableFuture<UpdatePaymentLinkResponse> updatePaymentLink(UpdatePaymentLinkRequest request) {
        AsyncRequestOperation<UpdatePaymentLinkRequest, UpdatePaymentLinkResponse> operation
              = new UpdatePaymentLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
