/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateCalendarCalendarRequest;
import to.unified.unified_java_sdk.models.operations.CreateCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.CreateCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.GetCalendarCalendarRequest;
import to.unified.unified_java_sdk.models.operations.GetCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.GetCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.GetCalendarRecordingRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarBusiesRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarCalendarsRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarEventsRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarLinksRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarRecordingsRequest;
import to.unified.unified_java_sdk.models.operations.PatchCalendarCalendarRequest;
import to.unified.unified_java_sdk.models.operations.PatchCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.PatchCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarCalendarRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarCalendarRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateCalendarCalendarRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCalendarCalendarResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCalendarCalendarRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCalendarCalendarResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCalendarRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCalendarRecordingResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCalendarBusiesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCalendarBusiesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCalendarCalendarsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCalendarCalendarsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCalendarEventsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCalendarEventsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCalendarLinksRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCalendarLinksResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCalendarRecordingsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCalendarRecordingsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCalendarCalendarRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCalendarCalendarResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCalendarCalendarRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCalendarCalendarResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCalendarCalendarRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCalendarCalendarResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCalendarLinkResponse;
import to.unified.unified_java_sdk.operations.CreateCalendarCalendar;
import to.unified.unified_java_sdk.operations.CreateCalendarEvent;
import to.unified.unified_java_sdk.operations.CreateCalendarLink;
import to.unified.unified_java_sdk.operations.GetCalendarCalendar;
import to.unified.unified_java_sdk.operations.GetCalendarEvent;
import to.unified.unified_java_sdk.operations.GetCalendarLink;
import to.unified.unified_java_sdk.operations.GetCalendarRecording;
import to.unified.unified_java_sdk.operations.ListCalendarBusies;
import to.unified.unified_java_sdk.operations.ListCalendarCalendars;
import to.unified.unified_java_sdk.operations.ListCalendarEvents;
import to.unified.unified_java_sdk.operations.ListCalendarLinks;
import to.unified.unified_java_sdk.operations.ListCalendarRecordings;
import to.unified.unified_java_sdk.operations.PatchCalendarCalendar;
import to.unified.unified_java_sdk.operations.PatchCalendarEvent;
import to.unified.unified_java_sdk.operations.PatchCalendarLink;
import to.unified.unified_java_sdk.operations.RemoveCalendarCalendar;
import to.unified.unified_java_sdk.operations.RemoveCalendarEvent;
import to.unified.unified_java_sdk.operations.RemoveCalendarLink;
import to.unified.unified_java_sdk.operations.UpdateCalendarCalendar;
import to.unified.unified_java_sdk.operations.UpdateCalendarEvent;
import to.unified.unified_java_sdk.operations.UpdateCalendarLink;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncCalendar {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Calendar syncSDK;

    AsyncCalendar(Calendar syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Calendar sync() {
        return syncSDK;
    }


    /**
     * Create a calendar
     * 
     * @return The async call builder
     */
    public CreateCalendarCalendarRequestBuilder createCalendarCalendar() {
        return new CreateCalendarCalendarRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a calendar
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateCalendarCalendarResponse>} - The async response
     */
    public CompletableFuture<CreateCalendarCalendarResponse> createCalendarCalendar(CreateCalendarCalendarRequest request) {
        AsyncRequestOperation<CreateCalendarCalendarRequest, CreateCalendarCalendarResponse> operation
              = new CreateCalendarCalendar.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create an event
     * 
     * @return The async call builder
     */
    public CreateCalendarEventRequestBuilder createCalendarEvent() {
        return new CreateCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateCalendarEventResponse>} - The async response
     */
    public CompletableFuture<CreateCalendarEventResponse> createCalendarEvent(CreateCalendarEventRequest request) {
        AsyncRequestOperation<CreateCalendarEventRequest, CreateCalendarEventResponse> operation
              = new CreateCalendarEvent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a link
     * 
     * @return The async call builder
     */
    public CreateCalendarLinkRequestBuilder createCalendarLink() {
        return new CreateCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateCalendarLinkResponse>} - The async response
     */
    public CompletableFuture<CreateCalendarLinkResponse> createCalendarLink(CreateCalendarLinkRequest request) {
        AsyncRequestOperation<CreateCalendarLinkRequest, CreateCalendarLinkResponse> operation
              = new CreateCalendarLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a calendar
     * 
     * @return The async call builder
     */
    public GetCalendarCalendarRequestBuilder getCalendarCalendar() {
        return new GetCalendarCalendarRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a calendar
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetCalendarCalendarResponse>} - The async response
     */
    public CompletableFuture<GetCalendarCalendarResponse> getCalendarCalendar(GetCalendarCalendarRequest request) {
        AsyncRequestOperation<GetCalendarCalendarRequest, GetCalendarCalendarResponse> operation
              = new GetCalendarCalendar.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an event
     * 
     * @return The async call builder
     */
    public GetCalendarEventRequestBuilder getCalendarEvent() {
        return new GetCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetCalendarEventResponse>} - The async response
     */
    public CompletableFuture<GetCalendarEventResponse> getCalendarEvent(GetCalendarEventRequest request) {
        AsyncRequestOperation<GetCalendarEventRequest, GetCalendarEventResponse> operation
              = new GetCalendarEvent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a link
     * 
     * @return The async call builder
     */
    public GetCalendarLinkRequestBuilder getCalendarLink() {
        return new GetCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetCalendarLinkResponse>} - The async response
     */
    public CompletableFuture<GetCalendarLinkResponse> getCalendarLink(GetCalendarLinkRequest request) {
        AsyncRequestOperation<GetCalendarLinkRequest, GetCalendarLinkResponse> operation
              = new GetCalendarLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a recording
     * 
     * @return The async call builder
     */
    public GetCalendarRecordingRequestBuilder getCalendarRecording() {
        return new GetCalendarRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetCalendarRecordingResponse>} - The async response
     */
    public CompletableFuture<GetCalendarRecordingResponse> getCalendarRecording(GetCalendarRecordingRequest request) {
        AsyncRequestOperation<GetCalendarRecordingRequest, GetCalendarRecordingResponse> operation
              = new GetCalendarRecording.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all busies
     * 
     * @return The async call builder
     */
    public ListCalendarBusiesRequestBuilder listCalendarBusies() {
        return new ListCalendarBusiesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all busies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListCalendarBusiesResponse>} - The async response
     */
    public CompletableFuture<ListCalendarBusiesResponse> listCalendarBusies(ListCalendarBusiesRequest request) {
        AsyncRequestOperation<ListCalendarBusiesRequest, ListCalendarBusiesResponse> operation
              = new ListCalendarBusies.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all calendars
     * 
     * @return The async call builder
     */
    public ListCalendarCalendarsRequestBuilder listCalendarCalendars() {
        return new ListCalendarCalendarsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all calendars
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListCalendarCalendarsResponse>} - The async response
     */
    public CompletableFuture<ListCalendarCalendarsResponse> listCalendarCalendars(ListCalendarCalendarsRequest request) {
        AsyncRequestOperation<ListCalendarCalendarsRequest, ListCalendarCalendarsResponse> operation
              = new ListCalendarCalendars.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all events
     * 
     * @return The async call builder
     */
    public ListCalendarEventsRequestBuilder listCalendarEvents() {
        return new ListCalendarEventsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all events
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListCalendarEventsResponse>} - The async response
     */
    public CompletableFuture<ListCalendarEventsResponse> listCalendarEvents(ListCalendarEventsRequest request) {
        AsyncRequestOperation<ListCalendarEventsRequest, ListCalendarEventsResponse> operation
              = new ListCalendarEvents.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all links
     * 
     * @return The async call builder
     */
    public ListCalendarLinksRequestBuilder listCalendarLinks() {
        return new ListCalendarLinksRequestBuilder(sdkConfiguration);
    }

    /**
     * List all links
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListCalendarLinksResponse>} - The async response
     */
    public CompletableFuture<ListCalendarLinksResponse> listCalendarLinks(ListCalendarLinksRequest request) {
        AsyncRequestOperation<ListCalendarLinksRequest, ListCalendarLinksResponse> operation
              = new ListCalendarLinks.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all recordings
     * 
     * @return The async call builder
     */
    public ListCalendarRecordingsRequestBuilder listCalendarRecordings() {
        return new ListCalendarRecordingsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all recordings
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListCalendarRecordingsResponse>} - The async response
     */
    public CompletableFuture<ListCalendarRecordingsResponse> listCalendarRecordings(ListCalendarRecordingsRequest request) {
        AsyncRequestOperation<ListCalendarRecordingsRequest, ListCalendarRecordingsResponse> operation
              = new ListCalendarRecordings.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a calendar
     * 
     * @return The async call builder
     */
    public PatchCalendarCalendarRequestBuilder patchCalendarCalendar() {
        return new PatchCalendarCalendarRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a calendar
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchCalendarCalendarResponse>} - The async response
     */
    public CompletableFuture<PatchCalendarCalendarResponse> patchCalendarCalendar(PatchCalendarCalendarRequest request) {
        AsyncRequestOperation<PatchCalendarCalendarRequest, PatchCalendarCalendarResponse> operation
              = new PatchCalendarCalendar.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an event
     * 
     * @return The async call builder
     */
    public PatchCalendarEventRequestBuilder patchCalendarEvent() {
        return new PatchCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchCalendarEventResponse>} - The async response
     */
    public CompletableFuture<PatchCalendarEventResponse> patchCalendarEvent(PatchCalendarEventRequest request) {
        AsyncRequestOperation<PatchCalendarEventRequest, PatchCalendarEventResponse> operation
              = new PatchCalendarEvent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a link
     * 
     * @return The async call builder
     */
    public PatchCalendarLinkRequestBuilder patchCalendarLink() {
        return new PatchCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchCalendarLinkResponse>} - The async response
     */
    public CompletableFuture<PatchCalendarLinkResponse> patchCalendarLink(PatchCalendarLinkRequest request) {
        AsyncRequestOperation<PatchCalendarLinkRequest, PatchCalendarLinkResponse> operation
              = new PatchCalendarLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a calendar
     * 
     * @return The async call builder
     */
    public RemoveCalendarCalendarRequestBuilder removeCalendarCalendar() {
        return new RemoveCalendarCalendarRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a calendar
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveCalendarCalendarResponse>} - The async response
     */
    public CompletableFuture<RemoveCalendarCalendarResponse> removeCalendarCalendar(RemoveCalendarCalendarRequest request) {
        AsyncRequestOperation<RemoveCalendarCalendarRequest, RemoveCalendarCalendarResponse> operation
              = new RemoveCalendarCalendar.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an event
     * 
     * @return The async call builder
     */
    public RemoveCalendarEventRequestBuilder removeCalendarEvent() {
        return new RemoveCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveCalendarEventResponse>} - The async response
     */
    public CompletableFuture<RemoveCalendarEventResponse> removeCalendarEvent(RemoveCalendarEventRequest request) {
        AsyncRequestOperation<RemoveCalendarEventRequest, RemoveCalendarEventResponse> operation
              = new RemoveCalendarEvent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a link
     * 
     * @return The async call builder
     */
    public RemoveCalendarLinkRequestBuilder removeCalendarLink() {
        return new RemoveCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveCalendarLinkResponse>} - The async response
     */
    public CompletableFuture<RemoveCalendarLinkResponse> removeCalendarLink(RemoveCalendarLinkRequest request) {
        AsyncRequestOperation<RemoveCalendarLinkRequest, RemoveCalendarLinkResponse> operation
              = new RemoveCalendarLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a calendar
     * 
     * @return The async call builder
     */
    public UpdateCalendarCalendarRequestBuilder updateCalendarCalendar() {
        return new UpdateCalendarCalendarRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a calendar
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateCalendarCalendarResponse>} - The async response
     */
    public CompletableFuture<UpdateCalendarCalendarResponse> updateCalendarCalendar(UpdateCalendarCalendarRequest request) {
        AsyncRequestOperation<UpdateCalendarCalendarRequest, UpdateCalendarCalendarResponse> operation
              = new UpdateCalendarCalendar.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an event
     * 
     * @return The async call builder
     */
    public UpdateCalendarEventRequestBuilder updateCalendarEvent() {
        return new UpdateCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateCalendarEventResponse>} - The async response
     */
    public CompletableFuture<UpdateCalendarEventResponse> updateCalendarEvent(UpdateCalendarEventRequest request) {
        AsyncRequestOperation<UpdateCalendarEventRequest, UpdateCalendarEventResponse> operation
              = new UpdateCalendarEvent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a link
     * 
     * @return The async call builder
     */
    public UpdateCalendarLinkRequestBuilder updateCalendarLink() {
        return new UpdateCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateCalendarLinkResponse>} - The async response
     */
    public CompletableFuture<UpdateCalendarLinkResponse> updateCalendarLink(UpdateCalendarLinkRequest request) {
        AsyncRequestOperation<UpdateCalendarLinkRequest, UpdateCalendarLinkResponse> operation
              = new UpdateCalendarLink.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
