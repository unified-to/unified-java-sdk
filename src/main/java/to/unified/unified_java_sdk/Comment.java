/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import java.util.List;
import java.util.Optional;
import to.unified.unified_java_sdk.models.operations.CreateKmsCommentRequest;
import to.unified.unified_java_sdk.models.operations.CreateKmsCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateKmsCommentResponse;
import to.unified.unified_java_sdk.models.operations.CreateTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.CreateTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.CreateUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.CreateUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.GetKmsCommentRequest;
import to.unified.unified_java_sdk.models.operations.GetKmsCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetKmsCommentResponse;
import to.unified.unified_java_sdk.models.operations.GetTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.GetTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.GetUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.GetUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.ListKmsCommentsRequest;
import to.unified.unified_java_sdk.models.operations.ListKmsCommentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListKmsCommentsResponse;
import to.unified.unified_java_sdk.models.operations.ListTaskCommentsRequest;
import to.unified.unified_java_sdk.models.operations.ListTaskCommentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListTaskCommentsResponse;
import to.unified.unified_java_sdk.models.operations.ListUcCommentsRequest;
import to.unified.unified_java_sdk.models.operations.ListUcCommentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListUcCommentsResponse;
import to.unified.unified_java_sdk.models.operations.PatchKmsCommentRequest;
import to.unified.unified_java_sdk.models.operations.PatchKmsCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchKmsCommentResponse;
import to.unified.unified_java_sdk.models.operations.PatchTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.PatchTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.PatchUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.PatchUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.RemoveKmsCommentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveKmsCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveKmsCommentResponse;
import to.unified.unified_java_sdk.models.operations.RemoveTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.RemoveUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.UpdateKmsCommentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateKmsCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateKmsCommentResponse;
import to.unified.unified_java_sdk.models.operations.UpdateTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.UpdateUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateUcCommentResponse;
import to.unified.unified_java_sdk.operations.CreateKmsCommentOperation;
import to.unified.unified_java_sdk.operations.CreateTaskCommentOperation;
import to.unified.unified_java_sdk.operations.CreateUcCommentOperation;
import to.unified.unified_java_sdk.operations.GetKmsCommentOperation;
import to.unified.unified_java_sdk.operations.GetTaskCommentOperation;
import to.unified.unified_java_sdk.operations.GetUcCommentOperation;
import to.unified.unified_java_sdk.operations.ListKmsCommentsOperation;
import to.unified.unified_java_sdk.operations.ListTaskCommentsOperation;
import to.unified.unified_java_sdk.operations.ListUcCommentsOperation;
import to.unified.unified_java_sdk.operations.PatchKmsCommentOperation;
import to.unified.unified_java_sdk.operations.PatchTaskCommentOperation;
import to.unified.unified_java_sdk.operations.PatchUcCommentOperation;
import to.unified.unified_java_sdk.operations.RemoveKmsCommentOperation;
import to.unified.unified_java_sdk.operations.RemoveTaskCommentOperation;
import to.unified.unified_java_sdk.operations.RemoveUcCommentOperation;
import to.unified.unified_java_sdk.operations.UpdateKmsCommentOperation;
import to.unified.unified_java_sdk.operations.UpdateTaskCommentOperation;
import to.unified.unified_java_sdk.operations.UpdateUcCommentOperation;


public class Comment {
    private final SDKConfiguration sdkConfiguration;

    Comment(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a comment
     * 
     * @return The call builder
     */
    public CreateKmsCommentRequestBuilder createKmsComment() {
        return new CreateKmsCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateKmsCommentResponse createKmsComment(
            CreateKmsCommentRequest request) throws Exception {
        RequestOperation<CreateKmsCommentRequest, CreateKmsCommentResponse> operation
              = new CreateKmsCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create a comment
     * 
     * @return The call builder
     */
    public CreateTaskCommentRequestBuilder createTaskComment() {
        return new CreateTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateTaskCommentResponse createTaskComment(
            CreateTaskCommentRequest request) throws Exception {
        RequestOperation<CreateTaskCommentRequest, CreateTaskCommentResponse> operation
              = new CreateTaskCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create a comment
     * 
     * @return The call builder
     */
    public CreateUcCommentRequestBuilder createUcComment() {
        return new CreateUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateUcCommentResponse createUcComment(
            CreateUcCommentRequest request) throws Exception {
        RequestOperation<CreateUcCommentRequest, CreateUcCommentResponse> operation
              = new CreateUcCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve a comment
     * 
     * @return The call builder
     */
    public GetKmsCommentRequestBuilder getKmsComment() {
        return new GetKmsCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetKmsCommentResponse getKmsComment(
            GetKmsCommentRequest request) throws Exception {
        RequestOperation<GetKmsCommentRequest, GetKmsCommentResponse> operation
              = new GetKmsCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve a comment
     * 
     * @return The call builder
     */
    public GetTaskCommentRequestBuilder getTaskComment() {
        return new GetTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTaskCommentResponse getTaskComment(
            GetTaskCommentRequest request) throws Exception {
        RequestOperation<GetTaskCommentRequest, GetTaskCommentResponse> operation
              = new GetTaskCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve a comment
     * 
     * @return The call builder
     */
    public GetUcCommentRequestBuilder getUcComment() {
        return new GetUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetUcCommentResponse getUcComment(
            GetUcCommentRequest request) throws Exception {
        RequestOperation<GetUcCommentRequest, GetUcCommentResponse> operation
              = new GetUcCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all comments
     * 
     * @return The call builder
     */
    public ListKmsCommentsRequestBuilder listKmsComments() {
        return new ListKmsCommentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all comments
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListKmsCommentsResponse listKmsComments(
            ListKmsCommentsRequest request) throws Exception {
        RequestOperation<ListKmsCommentsRequest, ListKmsCommentsResponse> operation
              = new ListKmsCommentsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all comments
     * 
     * @return The call builder
     */
    public ListTaskCommentsRequestBuilder listTaskComments() {
        return new ListTaskCommentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all comments
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListTaskCommentsResponse listTaskComments(
            ListTaskCommentsRequest request) throws Exception {
        RequestOperation<ListTaskCommentsRequest, ListTaskCommentsResponse> operation
              = new ListTaskCommentsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all comments
     * 
     * @return The call builder
     */
    public ListUcCommentsRequestBuilder listUcComments() {
        return new ListUcCommentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all comments
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListUcCommentsResponse listUcComments(
            ListUcCommentsRequest request) throws Exception {
        RequestOperation<ListUcCommentsRequest, ListUcCommentsResponse> operation
              = new ListUcCommentsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a comment
     * 
     * @return The call builder
     */
    public PatchKmsCommentRequestBuilder patchKmsComment() {
        return new PatchKmsCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchKmsCommentResponse patchKmsComment(
            PatchKmsCommentRequest request) throws Exception {
        RequestOperation<PatchKmsCommentRequest, PatchKmsCommentResponse> operation
              = new PatchKmsCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a comment
     * 
     * @return The call builder
     */
    public PatchTaskCommentRequestBuilder patchTaskComment() {
        return new PatchTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchTaskCommentResponse patchTaskComment(
            PatchTaskCommentRequest request) throws Exception {
        RequestOperation<PatchTaskCommentRequest, PatchTaskCommentResponse> operation
              = new PatchTaskCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a comment
     * 
     * @return The call builder
     */
    public PatchUcCommentRequestBuilder patchUcComment() {
        return new PatchUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchUcCommentResponse patchUcComment(
            PatchUcCommentRequest request) throws Exception {
        RequestOperation<PatchUcCommentRequest, PatchUcCommentResponse> operation
              = new PatchUcCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove a comment
     * 
     * @return The call builder
     */
    public RemoveKmsCommentRequestBuilder removeKmsComment() {
        return new RemoveKmsCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveKmsCommentResponse removeKmsComment(
            RemoveKmsCommentRequest request) throws Exception {
        RequestOperation<RemoveKmsCommentRequest, RemoveKmsCommentResponse> operation
              = new RemoveKmsCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove a comment
     * 
     * @return The call builder
     */
    public RemoveTaskCommentRequestBuilder removeTaskComment() {
        return new RemoveTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveTaskCommentResponse removeTaskComment(
            RemoveTaskCommentRequest request) throws Exception {
        RequestOperation<RemoveTaskCommentRequest, RemoveTaskCommentResponse> operation
              = new RemoveTaskCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove a comment
     * 
     * @return The call builder
     */
    public RemoveUcCommentRequestBuilder removeUcComment() {
        return new RemoveUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveUcCommentResponse removeUcComment(
            RemoveUcCommentRequest request) throws Exception {
        RequestOperation<RemoveUcCommentRequest, RemoveUcCommentResponse> operation
              = new RemoveUcCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a comment
     * 
     * @return The call builder
     */
    public UpdateKmsCommentRequestBuilder updateKmsComment() {
        return new UpdateKmsCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateKmsCommentResponse updateKmsComment(
            UpdateKmsCommentRequest request) throws Exception {
        RequestOperation<UpdateKmsCommentRequest, UpdateKmsCommentResponse> operation
              = new UpdateKmsCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a comment
     * 
     * @return The call builder
     */
    public UpdateTaskCommentRequestBuilder updateTaskComment() {
        return new UpdateTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateTaskCommentResponse updateTaskComment(
            UpdateTaskCommentRequest request) throws Exception {
        RequestOperation<UpdateTaskCommentRequest, UpdateTaskCommentResponse> operation
              = new UpdateTaskCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a comment
     * 
     * @return The call builder
     */
    public UpdateUcCommentRequestBuilder updateUcComment() {
        return new UpdateUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateUcCommentResponse updateUcComment(
            UpdateUcCommentRequest request) throws Exception {
        RequestOperation<UpdateUcCommentRequest, UpdateUcCommentResponse> operation
              = new UpdateUcCommentOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
