/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import to.unified.unified_java_sdk.models.operations.CreateAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingTaxratesRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingTaxratesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingTaxratesResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingTaxrateResponse;
import to.unified.unified_java_sdk.operations.CreateAccountingTaxrate;
import to.unified.unified_java_sdk.operations.GetAccountingTaxrate;
import to.unified.unified_java_sdk.operations.ListAccountingTaxrates;
import to.unified.unified_java_sdk.operations.PatchAccountingTaxrate;
import to.unified.unified_java_sdk.operations.RemoveAccountingTaxrate;
import to.unified.unified_java_sdk.operations.UpdateAccountingTaxrate;
import to.unified.unified_java_sdk.utils.Headers;


public class Taxrate {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncTaxrate asyncSDK;

    Taxrate(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncTaxrate(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncTaxrate async() {
        return asyncSDK;
    }

    /**
     * Create a taxrate
     * 
     * @return The call builder
     */
    public CreateAccountingTaxrateRequestBuilder createAccountingTaxrate() {
        return new CreateAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateAccountingTaxrateResponse createAccountingTaxrate(CreateAccountingTaxrateRequest request) {
        RequestOperation<CreateAccountingTaxrateRequest, CreateAccountingTaxrateResponse> operation
              = new CreateAccountingTaxrate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a taxrate
     * 
     * @return The call builder
     */
    public GetAccountingTaxrateRequestBuilder getAccountingTaxrate() {
        return new GetAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetAccountingTaxrateResponse getAccountingTaxrate(GetAccountingTaxrateRequest request) {
        RequestOperation<GetAccountingTaxrateRequest, GetAccountingTaxrateResponse> operation
              = new GetAccountingTaxrate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all taxrates
     * 
     * @return The call builder
     */
    public ListAccountingTaxratesRequestBuilder listAccountingTaxrates() {
        return new ListAccountingTaxratesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all taxrates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListAccountingTaxratesResponse listAccountingTaxrates(ListAccountingTaxratesRequest request) {
        RequestOperation<ListAccountingTaxratesRequest, ListAccountingTaxratesResponse> operation
              = new ListAccountingTaxrates.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a taxrate
     * 
     * @return The call builder
     */
    public PatchAccountingTaxrateRequestBuilder patchAccountingTaxrate() {
        return new PatchAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchAccountingTaxrateResponse patchAccountingTaxrate(PatchAccountingTaxrateRequest request) {
        RequestOperation<PatchAccountingTaxrateRequest, PatchAccountingTaxrateResponse> operation
              = new PatchAccountingTaxrate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a taxrate
     * 
     * @return The call builder
     */
    public RemoveAccountingTaxrateRequestBuilder removeAccountingTaxrate() {
        return new RemoveAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveAccountingTaxrateResponse removeAccountingTaxrate(RemoveAccountingTaxrateRequest request) {
        RequestOperation<RemoveAccountingTaxrateRequest, RemoveAccountingTaxrateResponse> operation
              = new RemoveAccountingTaxrate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a taxrate
     * 
     * @return The call builder
     */
    public UpdateAccountingTaxrateRequestBuilder updateAccountingTaxrate() {
        return new UpdateAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateAccountingTaxrateResponse updateAccountingTaxrate(UpdateAccountingTaxrateRequest request) {
        RequestOperation<UpdateAccountingTaxrateRequest, UpdateAccountingTaxrateResponse> operation
              = new UpdateAccountingTaxrate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
