/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCrmPipelineResponse;
import to.unified.unified_java_sdk.models.operations.GetCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCrmPipelineResponse;
import to.unified.unified_java_sdk.models.operations.ListCrmPipelinesRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmPipelinesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCrmPipelinesResponse;
import to.unified.unified_java_sdk.models.operations.PatchCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCrmPipelineResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCrmPipelineResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCrmPipelineResponse;
import to.unified.unified_java_sdk.operations.CreateCrmPipeline;
import to.unified.unified_java_sdk.operations.GetCrmPipeline;
import to.unified.unified_java_sdk.operations.ListCrmPipelines;
import to.unified.unified_java_sdk.operations.PatchCrmPipeline;
import to.unified.unified_java_sdk.operations.RemoveCrmPipeline;
import to.unified.unified_java_sdk.operations.UpdateCrmPipeline;


public class Pipeline {
    private final SDKConfiguration sdkConfiguration;
    private final AsyncPipeline asyncSDK;

    Pipeline(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncPipeline(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncPipeline async() {
        return asyncSDK;
    }

    /**
     * Create a pipeline
     * 
     * @return The call builder
     */
    public CreateCrmPipelineRequestBuilder createCrmPipeline() {
        return new CreateCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCrmPipelineResponse createCrmPipeline(CreateCrmPipelineRequest request) throws Exception {
        RequestOperation<CreateCrmPipelineRequest, CreateCrmPipelineResponse> operation
              = new CreateCrmPipeline.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a pipeline
     * 
     * @return The call builder
     */
    public GetCrmPipelineRequestBuilder getCrmPipeline() {
        return new GetCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCrmPipelineResponse getCrmPipeline(GetCrmPipelineRequest request) throws Exception {
        RequestOperation<GetCrmPipelineRequest, GetCrmPipelineResponse> operation
              = new GetCrmPipeline.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all pipelines
     * 
     * @return The call builder
     */
    public ListCrmPipelinesRequestBuilder listCrmPipelines() {
        return new ListCrmPipelinesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all pipelines
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCrmPipelinesResponse listCrmPipelines(ListCrmPipelinesRequest request) throws Exception {
        RequestOperation<ListCrmPipelinesRequest, ListCrmPipelinesResponse> operation
              = new ListCrmPipelines.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a pipeline
     * 
     * @return The call builder
     */
    public PatchCrmPipelineRequestBuilder patchCrmPipeline() {
        return new PatchCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCrmPipelineResponse patchCrmPipeline(PatchCrmPipelineRequest request) throws Exception {
        RequestOperation<PatchCrmPipelineRequest, PatchCrmPipelineResponse> operation
              = new PatchCrmPipeline.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a pipeline
     * 
     * @return The call builder
     */
    public RemoveCrmPipelineRequestBuilder removeCrmPipeline() {
        return new RemoveCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCrmPipelineResponse removeCrmPipeline(RemoveCrmPipelineRequest request) throws Exception {
        RequestOperation<RemoveCrmPipelineRequest, RemoveCrmPipelineResponse> operation
              = new RemoveCrmPipeline.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a pipeline
     * 
     * @return The call builder
     */
    public UpdateCrmPipelineRequestBuilder updateCrmPipeline() {
        return new UpdateCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCrmPipelineResponse updateCrmPipeline(UpdateCrmPipelineRequest request) throws Exception {
        RequestOperation<UpdateCrmPipelineRequest, UpdateCrmPipelineResponse> operation
              = new UpdateCrmPipeline.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
