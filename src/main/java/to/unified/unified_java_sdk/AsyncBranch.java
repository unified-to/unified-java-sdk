/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateRepoBranchRequest;
import to.unified.unified_java_sdk.models.operations.GetRepoBranchRequest;
import to.unified.unified_java_sdk.models.operations.ListRepoBranchesRequest;
import to.unified.unified_java_sdk.models.operations.PatchRepoBranchRequest;
import to.unified.unified_java_sdk.models.operations.RemoveRepoBranchRequest;
import to.unified.unified_java_sdk.models.operations.UpdateRepoBranchRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateRepoBranchRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateRepoBranchResponse;
import to.unified.unified_java_sdk.models.operations.async.GetRepoBranchRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetRepoBranchResponse;
import to.unified.unified_java_sdk.models.operations.async.ListRepoBranchesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListRepoBranchesResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchRepoBranchRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchRepoBranchResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveRepoBranchRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveRepoBranchResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateRepoBranchRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateRepoBranchResponse;
import to.unified.unified_java_sdk.operations.CreateRepoBranch;
import to.unified.unified_java_sdk.operations.GetRepoBranch;
import to.unified.unified_java_sdk.operations.ListRepoBranches;
import to.unified.unified_java_sdk.operations.PatchRepoBranch;
import to.unified.unified_java_sdk.operations.RemoveRepoBranch;
import to.unified.unified_java_sdk.operations.UpdateRepoBranch;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncBranch {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Branch syncSDK;

    AsyncBranch(Branch syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Branch sync() {
        return syncSDK;
    }


    /**
     * Create a branch
     * 
     * @return The async call builder
     */
    public CreateRepoBranchRequestBuilder createRepoBranch() {
        return new CreateRepoBranchRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a branch
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateRepoBranchResponse&gt; - The async response
     */
    public CompletableFuture<CreateRepoBranchResponse> createRepoBranch(CreateRepoBranchRequest request) {
        AsyncRequestOperation<CreateRepoBranchRequest, CreateRepoBranchResponse> operation
              = new CreateRepoBranch.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a branch
     * 
     * @return The async call builder
     */
    public GetRepoBranchRequestBuilder getRepoBranch() {
        return new GetRepoBranchRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a branch
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetRepoBranchResponse&gt; - The async response
     */
    public CompletableFuture<GetRepoBranchResponse> getRepoBranch(GetRepoBranchRequest request) {
        AsyncRequestOperation<GetRepoBranchRequest, GetRepoBranchResponse> operation
              = new GetRepoBranch.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all branches
     * 
     * @return The async call builder
     */
    public ListRepoBranchesRequestBuilder listRepoBranches() {
        return new ListRepoBranchesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all branches
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListRepoBranchesResponse&gt; - The async response
     */
    public CompletableFuture<ListRepoBranchesResponse> listRepoBranches(ListRepoBranchesRequest request) {
        AsyncRequestOperation<ListRepoBranchesRequest, ListRepoBranchesResponse> operation
              = new ListRepoBranches.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a branch
     * 
     * @return The async call builder
     */
    public PatchRepoBranchRequestBuilder patchRepoBranch() {
        return new PatchRepoBranchRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a branch
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchRepoBranchResponse&gt; - The async response
     */
    public CompletableFuture<PatchRepoBranchResponse> patchRepoBranch(PatchRepoBranchRequest request) {
        AsyncRequestOperation<PatchRepoBranchRequest, PatchRepoBranchResponse> operation
              = new PatchRepoBranch.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a branch
     * 
     * @return The async call builder
     */
    public RemoveRepoBranchRequestBuilder removeRepoBranch() {
        return new RemoveRepoBranchRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a branch
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveRepoBranchResponse&gt; - The async response
     */
    public CompletableFuture<RemoveRepoBranchResponse> removeRepoBranch(RemoveRepoBranchRequest request) {
        AsyncRequestOperation<RemoveRepoBranchRequest, RemoveRepoBranchResponse> operation
              = new RemoveRepoBranch.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a branch
     * 
     * @return The async call builder
     */
    public UpdateRepoBranchRequestBuilder updateRepoBranch() {
        return new UpdateRepoBranchRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a branch
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateRepoBranchResponse&gt; - The async response
     */
    public CompletableFuture<UpdateRepoBranchResponse> updateRepoBranch(UpdateRepoBranchRequest request) {
        AsyncRequestOperation<UpdateRepoBranchRequest, UpdateRepoBranchResponse> operation
              = new UpdateRepoBranch.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
