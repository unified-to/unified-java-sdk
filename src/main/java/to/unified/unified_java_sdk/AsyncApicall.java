/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.GetUnifiedApicallRequest;
import to.unified.unified_java_sdk.models.operations.ListUnifiedApicallsRequest;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedApicallRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedApicallResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedApicallsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedApicallsResponse;
import to.unified.unified_java_sdk.operations.GetUnifiedApicall;
import to.unified.unified_java_sdk.operations.ListUnifiedApicalls;


public class AsyncApicall {
    private final SDKConfiguration sdkConfiguration;
    private final Apicall syncSDK;

    AsyncApicall(Apicall syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Apicall sync() {
        return syncSDK;
    }


    /**
     * Retrieve specific API Call by its ID
     * 
     * @return The async call builder
     */
    public GetUnifiedApicallRequestBuilder getUnifiedApicall() {
        return new GetUnifiedApicallRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve specific API Call by its ID
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetUnifiedApicallResponse&gt; - The async response
     */
    public CompletableFuture<GetUnifiedApicallResponse> getUnifiedApicall(GetUnifiedApicallRequest request) {
        AsyncRequestOperation<GetUnifiedApicallRequest, GetUnifiedApicallResponse> operation
              = new GetUnifiedApicall.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Returns API Calls
     * 
     * @return The async call builder
     */
    public ListUnifiedApicallsRequestBuilder listUnifiedApicalls() {
        return new ListUnifiedApicallsRequestBuilder(sdkConfiguration);
    }

    /**
     * Returns API Calls
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListUnifiedApicallsResponse&gt; - The async response
     */
    public CompletableFuture<ListUnifiedApicallsResponse> listUnifiedApicalls(ListUnifiedApicallsRequest request) {
        AsyncRequestOperation<ListUnifiedApicallsRequest, ListUnifiedApicallsResponse> operation
              = new ListUnifiedApicalls.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
