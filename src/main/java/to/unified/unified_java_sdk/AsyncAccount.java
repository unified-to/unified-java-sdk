/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingAccountsRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAccountingAccountsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAccountingAccountsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAccountingAccountResponse;
import to.unified.unified_java_sdk.operations.CreateAccountingAccount;
import to.unified.unified_java_sdk.operations.GetAccountingAccount;
import to.unified.unified_java_sdk.operations.ListAccountingAccounts;
import to.unified.unified_java_sdk.operations.PatchAccountingAccount;
import to.unified.unified_java_sdk.operations.RemoveAccountingAccount;
import to.unified.unified_java_sdk.operations.UpdateAccountingAccount;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncAccount {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Account syncSDK;

    AsyncAccount(Account syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Account sync() {
        return syncSDK;
    }


    /**
     * Create an account
     * 
     * @return The async call builder
     */
    public CreateAccountingAccountRequestBuilder createAccountingAccount() {
        return new CreateAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateAccountingAccountResponse>} - The async response
     */
    public CompletableFuture<CreateAccountingAccountResponse> createAccountingAccount(CreateAccountingAccountRequest request) {
        AsyncRequestOperation<CreateAccountingAccountRequest, CreateAccountingAccountResponse> operation
              = new CreateAccountingAccount.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an account
     * 
     * @return The async call builder
     */
    public GetAccountingAccountRequestBuilder getAccountingAccount() {
        return new GetAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetAccountingAccountResponse>} - The async response
     */
    public CompletableFuture<GetAccountingAccountResponse> getAccountingAccount(GetAccountingAccountRequest request) {
        AsyncRequestOperation<GetAccountingAccountRequest, GetAccountingAccountResponse> operation
              = new GetAccountingAccount.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all accounts
     * 
     * @return The async call builder
     */
    public ListAccountingAccountsRequestBuilder listAccountingAccounts() {
        return new ListAccountingAccountsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all accounts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAccountingAccountsResponse>} - The async response
     */
    public CompletableFuture<ListAccountingAccountsResponse> listAccountingAccounts(ListAccountingAccountsRequest request) {
        AsyncRequestOperation<ListAccountingAccountsRequest, ListAccountingAccountsResponse> operation
              = new ListAccountingAccounts.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an account
     * 
     * @return The async call builder
     */
    public PatchAccountingAccountRequestBuilder patchAccountingAccount() {
        return new PatchAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchAccountingAccountResponse>} - The async response
     */
    public CompletableFuture<PatchAccountingAccountResponse> patchAccountingAccount(PatchAccountingAccountRequest request) {
        AsyncRequestOperation<PatchAccountingAccountRequest, PatchAccountingAccountResponse> operation
              = new PatchAccountingAccount.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an account
     * 
     * @return The async call builder
     */
    public RemoveAccountingAccountRequestBuilder removeAccountingAccount() {
        return new RemoveAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveAccountingAccountResponse>} - The async response
     */
    public CompletableFuture<RemoveAccountingAccountResponse> removeAccountingAccount(RemoveAccountingAccountRequest request) {
        AsyncRequestOperation<RemoveAccountingAccountRequest, RemoveAccountingAccountResponse> operation
              = new RemoveAccountingAccount.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an account
     * 
     * @return The async call builder
     */
    public UpdateAccountingAccountRequestBuilder updateAccountingAccount() {
        return new UpdateAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateAccountingAccountResponse>} - The async response
     */
    public CompletableFuture<UpdateAccountingAccountResponse> updateAccountingAccount(UpdateAccountingAccountRequest request) {
        AsyncRequestOperation<UpdateAccountingAccountRequest, UpdateAccountingAccountResponse> operation
              = new UpdateAccountingAccount.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
