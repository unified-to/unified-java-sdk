/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.CreateLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateLmsStudentResponse;
import to.unified.unified_java_sdk.models.operations.GetLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetLmsStudentResponse;
import to.unified.unified_java_sdk.models.operations.ListLmsStudentsRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsStudentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListLmsStudentsResponse;
import to.unified.unified_java_sdk.models.operations.PatchLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchLmsStudentResponse;
import to.unified.unified_java_sdk.models.operations.RemoveLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveLmsStudentResponse;
import to.unified.unified_java_sdk.models.operations.UpdateLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateLmsStudentResponse;
import to.unified.unified_java_sdk.operations.CreateLmsStudent;
import to.unified.unified_java_sdk.operations.GetLmsStudent;
import to.unified.unified_java_sdk.operations.ListLmsStudents;
import to.unified.unified_java_sdk.operations.PatchLmsStudent;
import to.unified.unified_java_sdk.operations.RemoveLmsStudent;
import to.unified.unified_java_sdk.operations.UpdateLmsStudent;


public class Student {
    private final SDKConfiguration sdkConfiguration;
    private final AsyncStudent asyncSDK;

    Student(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncStudent(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncStudent async() {
        return asyncSDK;
    }

    /**
     * Create a student
     * 
     * @return The call builder
     */
    public CreateLmsStudentRequestBuilder createLmsStudent() {
        return new CreateLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateLmsStudentResponse createLmsStudent(CreateLmsStudentRequest request) throws Exception {
        RequestOperation<CreateLmsStudentRequest, CreateLmsStudentResponse> operation
              = new CreateLmsStudent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a student
     * 
     * @return The call builder
     */
    public GetLmsStudentRequestBuilder getLmsStudent() {
        return new GetLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetLmsStudentResponse getLmsStudent(GetLmsStudentRequest request) throws Exception {
        RequestOperation<GetLmsStudentRequest, GetLmsStudentResponse> operation
              = new GetLmsStudent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all students
     * 
     * @return The call builder
     */
    public ListLmsStudentsRequestBuilder listLmsStudents() {
        return new ListLmsStudentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all students
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListLmsStudentsResponse listLmsStudents(ListLmsStudentsRequest request) throws Exception {
        RequestOperation<ListLmsStudentsRequest, ListLmsStudentsResponse> operation
              = new ListLmsStudents.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a student
     * 
     * @return The call builder
     */
    public PatchLmsStudentRequestBuilder patchLmsStudent() {
        return new PatchLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchLmsStudentResponse patchLmsStudent(PatchLmsStudentRequest request) throws Exception {
        RequestOperation<PatchLmsStudentRequest, PatchLmsStudentResponse> operation
              = new PatchLmsStudent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a student
     * 
     * @return The call builder
     */
    public RemoveLmsStudentRequestBuilder removeLmsStudent() {
        return new RemoveLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveLmsStudentResponse removeLmsStudent(RemoveLmsStudentRequest request) throws Exception {
        RequestOperation<RemoveLmsStudentRequest, RemoveLmsStudentResponse> operation
              = new RemoveLmsStudent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a student
     * 
     * @return The call builder
     */
    public UpdateLmsStudentRequestBuilder updateLmsStudent() {
        return new UpdateLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateLmsStudentResponse updateLmsStudent(UpdateLmsStudentRequest request) throws Exception {
        RequestOperation<UpdateLmsStudentRequest, UpdateLmsStudentResponse> operation
              = new UpdateLmsStudent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
