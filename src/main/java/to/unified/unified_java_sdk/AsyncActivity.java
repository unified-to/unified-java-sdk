/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsActivitiesRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsActivitiesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsActivitiesResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsActivityResponse;
import to.unified.unified_java_sdk.operations.CreateAtsActivity;
import to.unified.unified_java_sdk.operations.GetAtsActivity;
import to.unified.unified_java_sdk.operations.ListAtsActivities;
import to.unified.unified_java_sdk.operations.PatchAtsActivity;
import to.unified.unified_java_sdk.operations.RemoveAtsActivity;
import to.unified.unified_java_sdk.operations.UpdateAtsActivity;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncActivity {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Activity syncSDK;

    AsyncActivity(Activity syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Activity sync() {
        return syncSDK;
    }


    /**
     * Create an activity
     * 
     * @return The async call builder
     */
    public CreateAtsActivityRequestBuilder createAtsActivity() {
        return new CreateAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateAtsActivityResponse>} - The async response
     */
    public CompletableFuture<CreateAtsActivityResponse> createAtsActivity(CreateAtsActivityRequest request) {
        AsyncRequestOperation<CreateAtsActivityRequest, CreateAtsActivityResponse> operation
              = new CreateAtsActivity.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an activity
     * 
     * @return The async call builder
     */
    public GetAtsActivityRequestBuilder getAtsActivity() {
        return new GetAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetAtsActivityResponse>} - The async response
     */
    public CompletableFuture<GetAtsActivityResponse> getAtsActivity(GetAtsActivityRequest request) {
        AsyncRequestOperation<GetAtsActivityRequest, GetAtsActivityResponse> operation
              = new GetAtsActivity.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all activities
     * 
     * @return The async call builder
     */
    public ListAtsActivitiesRequestBuilder listAtsActivities() {
        return new ListAtsActivitiesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all activities
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAtsActivitiesResponse>} - The async response
     */
    public CompletableFuture<ListAtsActivitiesResponse> listAtsActivities(ListAtsActivitiesRequest request) {
        AsyncRequestOperation<ListAtsActivitiesRequest, ListAtsActivitiesResponse> operation
              = new ListAtsActivities.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an activity
     * 
     * @return The async call builder
     */
    public PatchAtsActivityRequestBuilder patchAtsActivity() {
        return new PatchAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchAtsActivityResponse>} - The async response
     */
    public CompletableFuture<PatchAtsActivityResponse> patchAtsActivity(PatchAtsActivityRequest request) {
        AsyncRequestOperation<PatchAtsActivityRequest, PatchAtsActivityResponse> operation
              = new PatchAtsActivity.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an activity
     * 
     * @return The async call builder
     */
    public RemoveAtsActivityRequestBuilder removeAtsActivity() {
        return new RemoveAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveAtsActivityResponse>} - The async response
     */
    public CompletableFuture<RemoveAtsActivityResponse> removeAtsActivity(RemoveAtsActivityRequest request) {
        AsyncRequestOperation<RemoveAtsActivityRequest, RemoveAtsActivityResponse> operation
              = new RemoveAtsActivity.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an activity
     * 
     * @return The async call builder
     */
    public UpdateAtsActivityRequestBuilder updateAtsActivity() {
        return new UpdateAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateAtsActivityResponse>} - The async response
     */
    public CompletableFuture<UpdateAtsActivityResponse> updateAtsActivity(UpdateAtsActivityRequest request) {
        AsyncRequestOperation<UpdateAtsActivityRequest, UpdateAtsActivityResponse> operation
              = new UpdateAtsActivity.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
