/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceCollectionsRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceCollectionsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceCollectionsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceCollectionResponse;
import to.unified.unified_java_sdk.operations.CreateCommerceCollection;
import to.unified.unified_java_sdk.operations.GetCommerceCollection;
import to.unified.unified_java_sdk.operations.ListCommerceCollections;
import to.unified.unified_java_sdk.operations.PatchCommerceCollection;
import to.unified.unified_java_sdk.operations.RemoveCommerceCollection;
import to.unified.unified_java_sdk.operations.UpdateCommerceCollection;


public class AsyncCollection {
    private final SDKConfiguration sdkConfiguration;
    private final Collection syncSDK;

    AsyncCollection(Collection syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Collection sync() {
        return syncSDK;
    }


    /**
     * Create a collection
     * 
     * @return The async call builder
     */
    public CreateCommerceCollectionRequestBuilder createCommerceCollection() {
        return new CreateCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCommerceCollectionResponse&gt; - The async response
     */
    public CompletableFuture<CreateCommerceCollectionResponse> createCommerceCollection(CreateCommerceCollectionRequest request) {
        AsyncRequestOperation<CreateCommerceCollectionRequest, CreateCommerceCollectionResponse> operation
              = new CreateCommerceCollection.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a collection
     * 
     * @return The async call builder
     */
    public GetCommerceCollectionRequestBuilder getCommerceCollection() {
        return new GetCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCommerceCollectionResponse&gt; - The async response
     */
    public CompletableFuture<GetCommerceCollectionResponse> getCommerceCollection(GetCommerceCollectionRequest request) {
        AsyncRequestOperation<GetCommerceCollectionRequest, GetCommerceCollectionResponse> operation
              = new GetCommerceCollection.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all collections
     * 
     * @return The async call builder
     */
    public ListCommerceCollectionsRequestBuilder listCommerceCollections() {
        return new ListCommerceCollectionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all collections
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCommerceCollectionsResponse&gt; - The async response
     */
    public CompletableFuture<ListCommerceCollectionsResponse> listCommerceCollections(ListCommerceCollectionsRequest request) {
        AsyncRequestOperation<ListCommerceCollectionsRequest, ListCommerceCollectionsResponse> operation
              = new ListCommerceCollections.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a collection
     * 
     * @return The async call builder
     */
    public PatchCommerceCollectionRequestBuilder patchCommerceCollection() {
        return new PatchCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCommerceCollectionResponse&gt; - The async response
     */
    public CompletableFuture<PatchCommerceCollectionResponse> patchCommerceCollection(PatchCommerceCollectionRequest request) {
        AsyncRequestOperation<PatchCommerceCollectionRequest, PatchCommerceCollectionResponse> operation
              = new PatchCommerceCollection.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a collection
     * 
     * @return The async call builder
     */
    public RemoveCommerceCollectionRequestBuilder removeCommerceCollection() {
        return new RemoveCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCommerceCollectionResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCommerceCollectionResponse> removeCommerceCollection(RemoveCommerceCollectionRequest request) {
        AsyncRequestOperation<RemoveCommerceCollectionRequest, RemoveCommerceCollectionResponse> operation
              = new RemoveCommerceCollection.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a collection
     * 
     * @return The async call builder
     */
    public UpdateCommerceCollectionRequestBuilder updateCommerceCollection() {
        return new UpdateCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCommerceCollectionResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCommerceCollectionResponse> updateCommerceCollection(UpdateCommerceCollectionRequest request) {
        AsyncRequestOperation<UpdateCommerceCollectionRequest, UpdateCommerceCollectionResponse> operation
              = new UpdateCommerceCollection.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
