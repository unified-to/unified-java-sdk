/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmLeadsRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCrmLeadsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCrmLeadsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmLeadResponse;
import to.unified.unified_java_sdk.operations.CreateCrmLead;
import to.unified.unified_java_sdk.operations.GetCrmLead;
import to.unified.unified_java_sdk.operations.ListCrmLeads;
import to.unified.unified_java_sdk.operations.PatchCrmLead;
import to.unified.unified_java_sdk.operations.RemoveCrmLead;
import to.unified.unified_java_sdk.operations.UpdateCrmLead;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncLead {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Lead syncSDK;

    AsyncLead(Lead syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Lead sync() {
        return syncSDK;
    }


    /**
     * Create a lead
     * 
     * @return The async call builder
     */
    public CreateCrmLeadRequestBuilder createCrmLead() {
        return new CreateCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCrmLeadResponse&gt; - The async response
     */
    public CompletableFuture<CreateCrmLeadResponse> createCrmLead(CreateCrmLeadRequest request) {
        AsyncRequestOperation<CreateCrmLeadRequest, CreateCrmLeadResponse> operation
              = new CreateCrmLead.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a lead
     * 
     * @return The async call builder
     */
    public GetCrmLeadRequestBuilder getCrmLead() {
        return new GetCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCrmLeadResponse&gt; - The async response
     */
    public CompletableFuture<GetCrmLeadResponse> getCrmLead(GetCrmLeadRequest request) {
        AsyncRequestOperation<GetCrmLeadRequest, GetCrmLeadResponse> operation
              = new GetCrmLead.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all leads
     * 
     * @return The async call builder
     */
    public ListCrmLeadsRequestBuilder listCrmLeads() {
        return new ListCrmLeadsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all leads
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCrmLeadsResponse&gt; - The async response
     */
    public CompletableFuture<ListCrmLeadsResponse> listCrmLeads(ListCrmLeadsRequest request) {
        AsyncRequestOperation<ListCrmLeadsRequest, ListCrmLeadsResponse> operation
              = new ListCrmLeads.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a lead
     * 
     * @return The async call builder
     */
    public PatchCrmLeadRequestBuilder patchCrmLead() {
        return new PatchCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCrmLeadResponse&gt; - The async response
     */
    public CompletableFuture<PatchCrmLeadResponse> patchCrmLead(PatchCrmLeadRequest request) {
        AsyncRequestOperation<PatchCrmLeadRequest, PatchCrmLeadResponse> operation
              = new PatchCrmLead.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a lead
     * 
     * @return The async call builder
     */
    public RemoveCrmLeadRequestBuilder removeCrmLead() {
        return new RemoveCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCrmLeadResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCrmLeadResponse> removeCrmLead(RemoveCrmLeadRequest request) {
        AsyncRequestOperation<RemoveCrmLeadRequest, RemoveCrmLeadResponse> operation
              = new RemoveCrmLead.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a lead
     * 
     * @return The async call builder
     */
    public UpdateCrmLeadRequestBuilder updateCrmLead() {
        return new UpdateCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCrmLeadResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCrmLeadResponse> updateCrmLead(UpdateCrmLeadRequest request) {
        AsyncRequestOperation<UpdateCrmLeadRequest, UpdateCrmLeadResponse> operation
              = new UpdateCrmLead.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
