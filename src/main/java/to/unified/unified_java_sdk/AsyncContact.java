/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateAccountingContactRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.CreateUcContactRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingContactRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.GetUcContactRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingContactsRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmContactsRequest;
import to.unified.unified_java_sdk.models.operations.ListUcContactsRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingContactRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.PatchUcContactRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingContactRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUcContactRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingContactRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUcContactRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateAccountingContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAccountingContactResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateUcContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateUcContactResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAccountingContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAccountingContactResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.async.GetUcContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUcContactResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAccountingContactsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAccountingContactsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCrmContactsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCrmContactsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUcContactsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUcContactsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAccountingContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAccountingContactResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchUcContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchUcContactResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAccountingContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAccountingContactResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveUcContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveUcContactResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAccountingContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAccountingContactResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateUcContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateUcContactResponse;
import to.unified.unified_java_sdk.operations.CreateAccountingContact;
import to.unified.unified_java_sdk.operations.CreateCrmContact;
import to.unified.unified_java_sdk.operations.CreateUcContact;
import to.unified.unified_java_sdk.operations.GetAccountingContact;
import to.unified.unified_java_sdk.operations.GetCrmContact;
import to.unified.unified_java_sdk.operations.GetUcContact;
import to.unified.unified_java_sdk.operations.ListAccountingContacts;
import to.unified.unified_java_sdk.operations.ListCrmContacts;
import to.unified.unified_java_sdk.operations.ListUcContacts;
import to.unified.unified_java_sdk.operations.PatchAccountingContact;
import to.unified.unified_java_sdk.operations.PatchCrmContact;
import to.unified.unified_java_sdk.operations.PatchUcContact;
import to.unified.unified_java_sdk.operations.RemoveAccountingContact;
import to.unified.unified_java_sdk.operations.RemoveCrmContact;
import to.unified.unified_java_sdk.operations.RemoveUcContact;
import to.unified.unified_java_sdk.operations.UpdateAccountingContact;
import to.unified.unified_java_sdk.operations.UpdateCrmContact;
import to.unified.unified_java_sdk.operations.UpdateUcContact;


public class AsyncContact {
    private final SDKConfiguration sdkConfiguration;
    private final Contact syncSDK;

    AsyncContact(Contact syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Contact sync() {
        return syncSDK;
    }


    /**
     * Create a contact
     * 
     * @return The async call builder
     */
    public CreateAccountingContactRequestBuilder createAccountingContact() {
        return new CreateAccountingContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateAccountingContactResponse&gt; - The async response
     */
    public CompletableFuture<CreateAccountingContactResponse> createAccountingContact(CreateAccountingContactRequest request) {
        AsyncRequestOperation<CreateAccountingContactRequest, CreateAccountingContactResponse> operation
              = new CreateAccountingContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a contact
     * 
     * @return The async call builder
     */
    public CreateCrmContactRequestBuilder createCrmContact() {
        return new CreateCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCrmContactResponse&gt; - The async response
     */
    public CompletableFuture<CreateCrmContactResponse> createCrmContact(CreateCrmContactRequest request) {
        AsyncRequestOperation<CreateCrmContactRequest, CreateCrmContactResponse> operation
              = new CreateCrmContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a contact
     * 
     * @return The async call builder
     */
    public CreateUcContactRequestBuilder createUcContact() {
        return new CreateUcContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateUcContactResponse&gt; - The async response
     */
    public CompletableFuture<CreateUcContactResponse> createUcContact(CreateUcContactRequest request) {
        AsyncRequestOperation<CreateUcContactRequest, CreateUcContactResponse> operation
              = new CreateUcContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a contact
     * 
     * @return The async call builder
     */
    public GetAccountingContactRequestBuilder getAccountingContact() {
        return new GetAccountingContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetAccountingContactResponse&gt; - The async response
     */
    public CompletableFuture<GetAccountingContactResponse> getAccountingContact(GetAccountingContactRequest request) {
        AsyncRequestOperation<GetAccountingContactRequest, GetAccountingContactResponse> operation
              = new GetAccountingContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a contact
     * 
     * @return The async call builder
     */
    public GetCrmContactRequestBuilder getCrmContact() {
        return new GetCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCrmContactResponse&gt; - The async response
     */
    public CompletableFuture<GetCrmContactResponse> getCrmContact(GetCrmContactRequest request) {
        AsyncRequestOperation<GetCrmContactRequest, GetCrmContactResponse> operation
              = new GetCrmContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a contact
     * 
     * @return The async call builder
     */
    public GetUcContactRequestBuilder getUcContact() {
        return new GetUcContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetUcContactResponse&gt; - The async response
     */
    public CompletableFuture<GetUcContactResponse> getUcContact(GetUcContactRequest request) {
        AsyncRequestOperation<GetUcContactRequest, GetUcContactResponse> operation
              = new GetUcContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all contacts
     * 
     * @return The async call builder
     */
    public ListAccountingContactsRequestBuilder listAccountingContacts() {
        return new ListAccountingContactsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all contacts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListAccountingContactsResponse&gt; - The async response
     */
    public CompletableFuture<ListAccountingContactsResponse> listAccountingContacts(ListAccountingContactsRequest request) {
        AsyncRequestOperation<ListAccountingContactsRequest, ListAccountingContactsResponse> operation
              = new ListAccountingContacts.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all contacts
     * 
     * @return The async call builder
     */
    public ListCrmContactsRequestBuilder listCrmContacts() {
        return new ListCrmContactsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all contacts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCrmContactsResponse&gt; - The async response
     */
    public CompletableFuture<ListCrmContactsResponse> listCrmContacts(ListCrmContactsRequest request) {
        AsyncRequestOperation<ListCrmContactsRequest, ListCrmContactsResponse> operation
              = new ListCrmContacts.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all contacts
     * 
     * @return The async call builder
     */
    public ListUcContactsRequestBuilder listUcContacts() {
        return new ListUcContactsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all contacts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListUcContactsResponse&gt; - The async response
     */
    public CompletableFuture<ListUcContactsResponse> listUcContacts(ListUcContactsRequest request) {
        AsyncRequestOperation<ListUcContactsRequest, ListUcContactsResponse> operation
              = new ListUcContacts.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a contact
     * 
     * @return The async call builder
     */
    public PatchAccountingContactRequestBuilder patchAccountingContact() {
        return new PatchAccountingContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchAccountingContactResponse&gt; - The async response
     */
    public CompletableFuture<PatchAccountingContactResponse> patchAccountingContact(PatchAccountingContactRequest request) {
        AsyncRequestOperation<PatchAccountingContactRequest, PatchAccountingContactResponse> operation
              = new PatchAccountingContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a contact
     * 
     * @return The async call builder
     */
    public PatchCrmContactRequestBuilder patchCrmContact() {
        return new PatchCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCrmContactResponse&gt; - The async response
     */
    public CompletableFuture<PatchCrmContactResponse> patchCrmContact(PatchCrmContactRequest request) {
        AsyncRequestOperation<PatchCrmContactRequest, PatchCrmContactResponse> operation
              = new PatchCrmContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a contact
     * 
     * @return The async call builder
     */
    public PatchUcContactRequestBuilder patchUcContact() {
        return new PatchUcContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchUcContactResponse&gt; - The async response
     */
    public CompletableFuture<PatchUcContactResponse> patchUcContact(PatchUcContactRequest request) {
        AsyncRequestOperation<PatchUcContactRequest, PatchUcContactResponse> operation
              = new PatchUcContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a contact
     * 
     * @return The async call builder
     */
    public RemoveAccountingContactRequestBuilder removeAccountingContact() {
        return new RemoveAccountingContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveAccountingContactResponse&gt; - The async response
     */
    public CompletableFuture<RemoveAccountingContactResponse> removeAccountingContact(RemoveAccountingContactRequest request) {
        AsyncRequestOperation<RemoveAccountingContactRequest, RemoveAccountingContactResponse> operation
              = new RemoveAccountingContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a contact
     * 
     * @return The async call builder
     */
    public RemoveCrmContactRequestBuilder removeCrmContact() {
        return new RemoveCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCrmContactResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCrmContactResponse> removeCrmContact(RemoveCrmContactRequest request) {
        AsyncRequestOperation<RemoveCrmContactRequest, RemoveCrmContactResponse> operation
              = new RemoveCrmContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a contact
     * 
     * @return The async call builder
     */
    public RemoveUcContactRequestBuilder removeUcContact() {
        return new RemoveUcContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveUcContactResponse&gt; - The async response
     */
    public CompletableFuture<RemoveUcContactResponse> removeUcContact(RemoveUcContactRequest request) {
        AsyncRequestOperation<RemoveUcContactRequest, RemoveUcContactResponse> operation
              = new RemoveUcContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a contact
     * 
     * @return The async call builder
     */
    public UpdateAccountingContactRequestBuilder updateAccountingContact() {
        return new UpdateAccountingContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateAccountingContactResponse&gt; - The async response
     */
    public CompletableFuture<UpdateAccountingContactResponse> updateAccountingContact(UpdateAccountingContactRequest request) {
        AsyncRequestOperation<UpdateAccountingContactRequest, UpdateAccountingContactResponse> operation
              = new UpdateAccountingContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a contact
     * 
     * @return The async call builder
     */
    public UpdateCrmContactRequestBuilder updateCrmContact() {
        return new UpdateCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCrmContactResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCrmContactResponse> updateCrmContact(UpdateCrmContactRequest request) {
        AsyncRequestOperation<UpdateCrmContactRequest, UpdateCrmContactResponse> operation
              = new UpdateCrmContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a contact
     * 
     * @return The async call builder
     */
    public UpdateUcContactRequestBuilder updateUcContact() {
        return new UpdateUcContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateUcContactResponse&gt; - The async response
     */
    public CompletableFuture<UpdateUcContactResponse> updateUcContact(UpdateUcContactRequest request) {
        AsyncRequestOperation<UpdateUcContactRequest, UpdateUcContactResponse> operation
              = new UpdateUcContact.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
