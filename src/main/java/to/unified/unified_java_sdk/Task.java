/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.CreateTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.CreateTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.CreateTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.CreateTaskTaskRequest;
import to.unified.unified_java_sdk.models.operations.CreateTaskTaskRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateTaskTaskResponse;
import to.unified.unified_java_sdk.models.operations.GetTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.GetTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.GetTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.GetTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.GetTaskTaskRequest;
import to.unified.unified_java_sdk.models.operations.GetTaskTaskRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetTaskTaskResponse;
import to.unified.unified_java_sdk.models.operations.ListTaskCommentsRequest;
import to.unified.unified_java_sdk.models.operations.ListTaskCommentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListTaskCommentsResponse;
import to.unified.unified_java_sdk.models.operations.ListTaskProjectsRequest;
import to.unified.unified_java_sdk.models.operations.ListTaskProjectsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListTaskProjectsResponse;
import to.unified.unified_java_sdk.models.operations.ListTaskTasksRequest;
import to.unified.unified_java_sdk.models.operations.ListTaskTasksRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListTaskTasksResponse;
import to.unified.unified_java_sdk.models.operations.PatchTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.PatchTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.PatchTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.PatchTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.PatchTaskTaskRequest;
import to.unified.unified_java_sdk.models.operations.PatchTaskTaskRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchTaskTaskResponse;
import to.unified.unified_java_sdk.models.operations.RemoveTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.RemoveTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.RemoveTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.RemoveTaskTaskRequest;
import to.unified.unified_java_sdk.models.operations.RemoveTaskTaskRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveTaskTaskResponse;
import to.unified.unified_java_sdk.models.operations.UpdateTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.UpdateTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.UpdateTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.UpdateTaskTaskRequest;
import to.unified.unified_java_sdk.models.operations.UpdateTaskTaskRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateTaskTaskResponse;
import to.unified.unified_java_sdk.operations.CreateTaskCommentOperation;
import to.unified.unified_java_sdk.operations.CreateTaskProjectOperation;
import to.unified.unified_java_sdk.operations.CreateTaskTaskOperation;
import to.unified.unified_java_sdk.operations.GetTaskCommentOperation;
import to.unified.unified_java_sdk.operations.GetTaskProjectOperation;
import to.unified.unified_java_sdk.operations.GetTaskTaskOperation;
import to.unified.unified_java_sdk.operations.ListTaskCommentsOperation;
import to.unified.unified_java_sdk.operations.ListTaskProjectsOperation;
import to.unified.unified_java_sdk.operations.ListTaskTasksOperation;
import to.unified.unified_java_sdk.operations.PatchTaskCommentOperation;
import to.unified.unified_java_sdk.operations.PatchTaskProjectOperation;
import to.unified.unified_java_sdk.operations.PatchTaskTaskOperation;
import to.unified.unified_java_sdk.operations.RemoveTaskCommentOperation;
import to.unified.unified_java_sdk.operations.RemoveTaskProjectOperation;
import to.unified.unified_java_sdk.operations.RemoveTaskTaskOperation;
import to.unified.unified_java_sdk.operations.UpdateTaskCommentOperation;
import to.unified.unified_java_sdk.operations.UpdateTaskProjectOperation;
import to.unified.unified_java_sdk.operations.UpdateTaskTaskOperation;


public class Task {
    private final SDKConfiguration sdkConfiguration;

    Task(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a comment
     * 
     * @return The call builder
     */
    public CreateTaskCommentRequestBuilder createTaskComment() {
        return new CreateTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateTaskCommentResponse createTaskComment(CreateTaskCommentRequest request) throws Exception {
        RequestOperation<CreateTaskCommentRequest, CreateTaskCommentResponse> operation
              = new CreateTaskCommentOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a project
     * 
     * @return The call builder
     */
    public CreateTaskProjectRequestBuilder createTaskProject() {
        return new CreateTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateTaskProjectResponse createTaskProject(CreateTaskProjectRequest request) throws Exception {
        RequestOperation<CreateTaskProjectRequest, CreateTaskProjectResponse> operation
              = new CreateTaskProjectOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a task
     * 
     * @return The call builder
     */
    public CreateTaskTaskRequestBuilder createTaskTask() {
        return new CreateTaskTaskRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a task
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateTaskTaskResponse createTaskTask(CreateTaskTaskRequest request) throws Exception {
        RequestOperation<CreateTaskTaskRequest, CreateTaskTaskResponse> operation
              = new CreateTaskTaskOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a comment
     * 
     * @return The call builder
     */
    public GetTaskCommentRequestBuilder getTaskComment() {
        return new GetTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTaskCommentResponse getTaskComment(GetTaskCommentRequest request) throws Exception {
        RequestOperation<GetTaskCommentRequest, GetTaskCommentResponse> operation
              = new GetTaskCommentOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a project
     * 
     * @return The call builder
     */
    public GetTaskProjectRequestBuilder getTaskProject() {
        return new GetTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTaskProjectResponse getTaskProject(GetTaskProjectRequest request) throws Exception {
        RequestOperation<GetTaskProjectRequest, GetTaskProjectResponse> operation
              = new GetTaskProjectOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a task
     * 
     * @return The call builder
     */
    public GetTaskTaskRequestBuilder getTaskTask() {
        return new GetTaskTaskRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a task
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTaskTaskResponse getTaskTask(GetTaskTaskRequest request) throws Exception {
        RequestOperation<GetTaskTaskRequest, GetTaskTaskResponse> operation
              = new GetTaskTaskOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all comments
     * 
     * @return The call builder
     */
    public ListTaskCommentsRequestBuilder listTaskComments() {
        return new ListTaskCommentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all comments
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListTaskCommentsResponse listTaskComments(ListTaskCommentsRequest request) throws Exception {
        RequestOperation<ListTaskCommentsRequest, ListTaskCommentsResponse> operation
              = new ListTaskCommentsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all projects
     * 
     * @return The call builder
     */
    public ListTaskProjectsRequestBuilder listTaskProjects() {
        return new ListTaskProjectsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all projects
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListTaskProjectsResponse listTaskProjects(ListTaskProjectsRequest request) throws Exception {
        RequestOperation<ListTaskProjectsRequest, ListTaskProjectsResponse> operation
              = new ListTaskProjectsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all tasks
     * 
     * @return The call builder
     */
    public ListTaskTasksRequestBuilder listTaskTasks() {
        return new ListTaskTasksRequestBuilder(sdkConfiguration);
    }

    /**
     * List all tasks
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListTaskTasksResponse listTaskTasks(ListTaskTasksRequest request) throws Exception {
        RequestOperation<ListTaskTasksRequest, ListTaskTasksResponse> operation
              = new ListTaskTasksOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a comment
     * 
     * @return The call builder
     */
    public PatchTaskCommentRequestBuilder patchTaskComment() {
        return new PatchTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchTaskCommentResponse patchTaskComment(PatchTaskCommentRequest request) throws Exception {
        RequestOperation<PatchTaskCommentRequest, PatchTaskCommentResponse> operation
              = new PatchTaskCommentOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a project
     * 
     * @return The call builder
     */
    public PatchTaskProjectRequestBuilder patchTaskProject() {
        return new PatchTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchTaskProjectResponse patchTaskProject(PatchTaskProjectRequest request) throws Exception {
        RequestOperation<PatchTaskProjectRequest, PatchTaskProjectResponse> operation
              = new PatchTaskProjectOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a task
     * 
     * @return The call builder
     */
    public PatchTaskTaskRequestBuilder patchTaskTask() {
        return new PatchTaskTaskRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a task
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchTaskTaskResponse patchTaskTask(PatchTaskTaskRequest request) throws Exception {
        RequestOperation<PatchTaskTaskRequest, PatchTaskTaskResponse> operation
              = new PatchTaskTaskOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a comment
     * 
     * @return The call builder
     */
    public RemoveTaskCommentRequestBuilder removeTaskComment() {
        return new RemoveTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveTaskCommentResponse removeTaskComment(RemoveTaskCommentRequest request) throws Exception {
        RequestOperation<RemoveTaskCommentRequest, RemoveTaskCommentResponse> operation
              = new RemoveTaskCommentOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a project
     * 
     * @return The call builder
     */
    public RemoveTaskProjectRequestBuilder removeTaskProject() {
        return new RemoveTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveTaskProjectResponse removeTaskProject(RemoveTaskProjectRequest request) throws Exception {
        RequestOperation<RemoveTaskProjectRequest, RemoveTaskProjectResponse> operation
              = new RemoveTaskProjectOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a task
     * 
     * @return The call builder
     */
    public RemoveTaskTaskRequestBuilder removeTaskTask() {
        return new RemoveTaskTaskRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a task
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveTaskTaskResponse removeTaskTask(RemoveTaskTaskRequest request) throws Exception {
        RequestOperation<RemoveTaskTaskRequest, RemoveTaskTaskResponse> operation
              = new RemoveTaskTaskOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a comment
     * 
     * @return The call builder
     */
    public UpdateTaskCommentRequestBuilder updateTaskComment() {
        return new UpdateTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateTaskCommentResponse updateTaskComment(UpdateTaskCommentRequest request) throws Exception {
        RequestOperation<UpdateTaskCommentRequest, UpdateTaskCommentResponse> operation
              = new UpdateTaskCommentOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a project
     * 
     * @return The call builder
     */
    public UpdateTaskProjectRequestBuilder updateTaskProject() {
        return new UpdateTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateTaskProjectResponse updateTaskProject(UpdateTaskProjectRequest request) throws Exception {
        RequestOperation<UpdateTaskProjectRequest, UpdateTaskProjectResponse> operation
              = new UpdateTaskProjectOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a task
     * 
     * @return The call builder
     */
    public UpdateTaskTaskRequestBuilder updateTaskTask() {
        return new UpdateTaskTaskRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a task
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateTaskTaskResponse updateTaskTask(UpdateTaskTaskRequest request) throws Exception {
        RequestOperation<UpdateTaskTaskRequest, UpdateTaskTaskResponse> operation
              = new UpdateTaskTaskOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
