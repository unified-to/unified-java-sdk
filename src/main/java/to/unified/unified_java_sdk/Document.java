/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.GetAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.ListAtsDocumentsRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsDocumentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAtsDocumentsResponse;
import to.unified.unified_java_sdk.models.operations.PatchAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAtsDocumentResponse;
import to.unified.unified_java_sdk.operations.CreateAtsDocument;
import to.unified.unified_java_sdk.operations.GetAtsDocument;
import to.unified.unified_java_sdk.operations.ListAtsDocuments;
import to.unified.unified_java_sdk.operations.PatchAtsDocument;
import to.unified.unified_java_sdk.operations.RemoveAtsDocument;
import to.unified.unified_java_sdk.operations.UpdateAtsDocument;


public class Document {
    private final SDKConfiguration sdkConfiguration;
    private final AsyncDocument asyncSDK;

    Document(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncDocument(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncDocument async() {
        return asyncSDK;
    }

    /**
     * Create a document
     * 
     * @return The call builder
     */
    public CreateAtsDocumentRequestBuilder createAtsDocument() {
        return new CreateAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAtsDocumentResponse createAtsDocument(CreateAtsDocumentRequest request) throws Exception {
        RequestOperation<CreateAtsDocumentRequest, CreateAtsDocumentResponse> operation
              = new CreateAtsDocument.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a document
     * 
     * @return The call builder
     */
    public GetAtsDocumentRequestBuilder getAtsDocument() {
        return new GetAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAtsDocumentResponse getAtsDocument(GetAtsDocumentRequest request) throws Exception {
        RequestOperation<GetAtsDocumentRequest, GetAtsDocumentResponse> operation
              = new GetAtsDocument.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all documents
     * 
     * @return The call builder
     */
    public ListAtsDocumentsRequestBuilder listAtsDocuments() {
        return new ListAtsDocumentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all documents
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAtsDocumentsResponse listAtsDocuments(ListAtsDocumentsRequest request) throws Exception {
        RequestOperation<ListAtsDocumentsRequest, ListAtsDocumentsResponse> operation
              = new ListAtsDocuments.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a document
     * 
     * @return The call builder
     */
    public PatchAtsDocumentRequestBuilder patchAtsDocument() {
        return new PatchAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAtsDocumentResponse patchAtsDocument(PatchAtsDocumentRequest request) throws Exception {
        RequestOperation<PatchAtsDocumentRequest, PatchAtsDocumentResponse> operation
              = new PatchAtsDocument.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a document
     * 
     * @return The call builder
     */
    public RemoveAtsDocumentRequestBuilder removeAtsDocument() {
        return new RemoveAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAtsDocumentResponse removeAtsDocument(RemoveAtsDocumentRequest request) throws Exception {
        RequestOperation<RemoveAtsDocumentRequest, RemoveAtsDocumentResponse> operation
              = new RemoveAtsDocument.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a document
     * 
     * @return The call builder
     */
    public UpdateAtsDocumentRequestBuilder updateAtsDocument() {
        return new UpdateAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAtsDocumentResponse updateAtsDocument(UpdateAtsDocumentRequest request) throws Exception {
        RequestOperation<UpdateAtsDocumentRequest, UpdateAtsDocumentResponse> operation
              = new UpdateAtsDocument.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
