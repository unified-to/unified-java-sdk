/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import java.util.List;
import java.util.Optional;
import to.unified.unified_java_sdk.models.operations.CreateCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.CreateCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.GetCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.ListCommerceInventoriesRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceInventoriesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCommerceInventoriesResponse;
import to.unified.unified_java_sdk.models.operations.PatchCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceInventoryResponse;
import to.unified.unified_java_sdk.operations.CreateCommerceInventoryOperation;
import to.unified.unified_java_sdk.operations.GetCommerceInventoryOperation;
import to.unified.unified_java_sdk.operations.ListCommerceInventoriesOperation;
import to.unified.unified_java_sdk.operations.PatchCommerceInventoryOperation;
import to.unified.unified_java_sdk.operations.RemoveCommerceInventoryOperation;
import to.unified.unified_java_sdk.operations.UpdateCommerceInventoryOperation;


public class Inventory {
    private final SDKConfiguration sdkConfiguration;

    Inventory(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * Create an inventory
     * 
     * @return The call builder
     */
    public CreateCommerceInventoryRequestBuilder createCommerceInventory() {
        return new CreateCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCommerceInventoryResponse createCommerceInventory(CreateCommerceInventoryRequest request) throws Exception {
        RequestOperation<CreateCommerceInventoryRequest, CreateCommerceInventoryResponse> operation
              = new CreateCommerceInventoryOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an inventory
     * 
     * @return The call builder
     */
    public GetCommerceInventoryRequestBuilder getCommerceInventory() {
        return new GetCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCommerceInventoryResponse getCommerceInventory(GetCommerceInventoryRequest request) throws Exception {
        RequestOperation<GetCommerceInventoryRequest, GetCommerceInventoryResponse> operation
              = new GetCommerceInventoryOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all inventories
     * 
     * @return The call builder
     */
    public ListCommerceInventoriesRequestBuilder listCommerceInventories() {
        return new ListCommerceInventoriesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all inventories
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCommerceInventoriesResponse listCommerceInventories(ListCommerceInventoriesRequest request) throws Exception {
        RequestOperation<ListCommerceInventoriesRequest, ListCommerceInventoriesResponse> operation
              = new ListCommerceInventoriesOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an inventory
     * 
     * @return The call builder
     */
    public PatchCommerceInventoryRequestBuilder patchCommerceInventory() {
        return new PatchCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCommerceInventoryResponse patchCommerceInventory(PatchCommerceInventoryRequest request) throws Exception {
        RequestOperation<PatchCommerceInventoryRequest, PatchCommerceInventoryResponse> operation
              = new PatchCommerceInventoryOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an inventory
     * 
     * @return The call builder
     */
    public RemoveCommerceInventoryRequestBuilder removeCommerceInventory() {
        return new RemoveCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCommerceInventoryResponse removeCommerceInventory(RemoveCommerceInventoryRequest request) throws Exception {
        RequestOperation<RemoveCommerceInventoryRequest, RemoveCommerceInventoryResponse> operation
              = new RemoveCommerceInventoryOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an inventory
     * 
     * @return The call builder
     */
    public UpdateCommerceInventoryRequestBuilder updateCommerceInventory() {
        return new UpdateCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCommerceInventoryResponse updateCommerceInventory(UpdateCommerceInventoryRequest request) throws Exception {
        RequestOperation<UpdateCommerceInventoryRequest, UpdateCommerceInventoryResponse> operation
              = new UpdateCommerceInventoryOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
