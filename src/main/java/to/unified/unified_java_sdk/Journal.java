/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateAccountingJournalRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingJournalRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingJournalResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingJournalRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingJournalRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingJournalResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingJournalsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingJournalsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingJournalsResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingJournalRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingJournalRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingJournalResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingJournalRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingJournalRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingJournalResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingJournalRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingJournalRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingJournalResponse;
import to.unified.unified_java_sdk.operations.CreateAccountingJournal;
import to.unified.unified_java_sdk.operations.GetAccountingJournal;
import to.unified.unified_java_sdk.operations.ListAccountingJournals;
import to.unified.unified_java_sdk.operations.PatchAccountingJournal;
import to.unified.unified_java_sdk.operations.RemoveAccountingJournal;
import to.unified.unified_java_sdk.operations.UpdateAccountingJournal;


public class Journal {
    private final SDKConfiguration sdkConfiguration;
    private final AsyncJournal asyncSDK;

    Journal(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncJournal(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncJournal async() {
        return asyncSDK;
    }

    /**
     * Create a journal
     * 
     * @return The call builder
     */
    public CreateAccountingJournalRequestBuilder createAccountingJournal() {
        return new CreateAccountingJournalRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a journal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingJournalResponse createAccountingJournal(CreateAccountingJournalRequest request) throws Exception {
        RequestOperation<CreateAccountingJournalRequest, CreateAccountingJournalResponse> operation
              = new CreateAccountingJournal.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a journal
     * 
     * @return The call builder
     */
    public GetAccountingJournalRequestBuilder getAccountingJournal() {
        return new GetAccountingJournalRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a journal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingJournalResponse getAccountingJournal(GetAccountingJournalRequest request) throws Exception {
        RequestOperation<GetAccountingJournalRequest, GetAccountingJournalResponse> operation
              = new GetAccountingJournal.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all journals
     * 
     * @return The call builder
     */
    public ListAccountingJournalsRequestBuilder listAccountingJournals() {
        return new ListAccountingJournalsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all journals
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingJournalsResponse listAccountingJournals(ListAccountingJournalsRequest request) throws Exception {
        RequestOperation<ListAccountingJournalsRequest, ListAccountingJournalsResponse> operation
              = new ListAccountingJournals.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a journal
     * 
     * @return The call builder
     */
    public PatchAccountingJournalRequestBuilder patchAccountingJournal() {
        return new PatchAccountingJournalRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a journal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingJournalResponse patchAccountingJournal(PatchAccountingJournalRequest request) throws Exception {
        RequestOperation<PatchAccountingJournalRequest, PatchAccountingJournalResponse> operation
              = new PatchAccountingJournal.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a journal
     * 
     * @return The call builder
     */
    public RemoveAccountingJournalRequestBuilder removeAccountingJournal() {
        return new RemoveAccountingJournalRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a journal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingJournalResponse removeAccountingJournal(RemoveAccountingJournalRequest request) throws Exception {
        RequestOperation<RemoveAccountingJournalRequest, RemoveAccountingJournalResponse> operation
              = new RemoveAccountingJournal.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a journal
     * 
     * @return The call builder
     */
    public UpdateAccountingJournalRequestBuilder updateAccountingJournal() {
        return new UpdateAccountingJournalRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a journal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingJournalResponse updateAccountingJournal(UpdateAccountingJournalRequest request) throws Exception {
        RequestOperation<UpdateAccountingJournalRequest, UpdateAccountingJournalResponse> operation
              = new UpdateAccountingJournal.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
