/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateHrisTimeshiftRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisTimeshiftRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisTimeshiftsRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisTimeshiftRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisTimeshiftRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisTimeshiftRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateHrisTimeshiftRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateHrisTimeshiftResponse;
import to.unified.unified_java_sdk.models.operations.async.GetHrisTimeshiftRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetHrisTimeshiftResponse;
import to.unified.unified_java_sdk.models.operations.async.ListHrisTimeshiftsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListHrisTimeshiftsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchHrisTimeshiftRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchHrisTimeshiftResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveHrisTimeshiftRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveHrisTimeshiftResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateHrisTimeshiftRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateHrisTimeshiftResponse;
import to.unified.unified_java_sdk.operations.CreateHrisTimeshift;
import to.unified.unified_java_sdk.operations.GetHrisTimeshift;
import to.unified.unified_java_sdk.operations.ListHrisTimeshifts;
import to.unified.unified_java_sdk.operations.PatchHrisTimeshift;
import to.unified.unified_java_sdk.operations.RemoveHrisTimeshift;
import to.unified.unified_java_sdk.operations.UpdateHrisTimeshift;


public class AsyncTimeshift {
    private final SDKConfiguration sdkConfiguration;
    private final Timeshift syncSDK;

    AsyncTimeshift(Timeshift syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Timeshift sync() {
        return syncSDK;
    }


    /**
     * Create a timeshift
     * 
     * @return The async call builder
     */
    public CreateHrisTimeshiftRequestBuilder createHrisTimeshift() {
        return new CreateHrisTimeshiftRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a timeshift
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateHrisTimeshiftResponse&gt; - The async response
     */
    public CompletableFuture<CreateHrisTimeshiftResponse> createHrisTimeshift(CreateHrisTimeshiftRequest request) {
        AsyncRequestOperation<CreateHrisTimeshiftRequest, CreateHrisTimeshiftResponse> operation
              = new CreateHrisTimeshift.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a timeshift
     * 
     * @return The async call builder
     */
    public GetHrisTimeshiftRequestBuilder getHrisTimeshift() {
        return new GetHrisTimeshiftRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a timeshift
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetHrisTimeshiftResponse&gt; - The async response
     */
    public CompletableFuture<GetHrisTimeshiftResponse> getHrisTimeshift(GetHrisTimeshiftRequest request) {
        AsyncRequestOperation<GetHrisTimeshiftRequest, GetHrisTimeshiftResponse> operation
              = new GetHrisTimeshift.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all timeshifts
     * 
     * @return The async call builder
     */
    public ListHrisTimeshiftsRequestBuilder listHrisTimeshifts() {
        return new ListHrisTimeshiftsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all timeshifts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListHrisTimeshiftsResponse&gt; - The async response
     */
    public CompletableFuture<ListHrisTimeshiftsResponse> listHrisTimeshifts(ListHrisTimeshiftsRequest request) {
        AsyncRequestOperation<ListHrisTimeshiftsRequest, ListHrisTimeshiftsResponse> operation
              = new ListHrisTimeshifts.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a timeshift
     * 
     * @return The async call builder
     */
    public PatchHrisTimeshiftRequestBuilder patchHrisTimeshift() {
        return new PatchHrisTimeshiftRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a timeshift
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchHrisTimeshiftResponse&gt; - The async response
     */
    public CompletableFuture<PatchHrisTimeshiftResponse> patchHrisTimeshift(PatchHrisTimeshiftRequest request) {
        AsyncRequestOperation<PatchHrisTimeshiftRequest, PatchHrisTimeshiftResponse> operation
              = new PatchHrisTimeshift.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a timeshift
     * 
     * @return The async call builder
     */
    public RemoveHrisTimeshiftRequestBuilder removeHrisTimeshift() {
        return new RemoveHrisTimeshiftRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a timeshift
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveHrisTimeshiftResponse&gt; - The async response
     */
    public CompletableFuture<RemoveHrisTimeshiftResponse> removeHrisTimeshift(RemoveHrisTimeshiftRequest request) {
        AsyncRequestOperation<RemoveHrisTimeshiftRequest, RemoveHrisTimeshiftResponse> operation
              = new RemoveHrisTimeshift.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a timeshift
     * 
     * @return The async call builder
     */
    public UpdateHrisTimeshiftRequestBuilder updateHrisTimeshift() {
        return new UpdateHrisTimeshiftRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a timeshift
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateHrisTimeshiftResponse&gt; - The async response
     */
    public CompletableFuture<UpdateHrisTimeshiftResponse> updateHrisTimeshift(UpdateHrisTimeshiftRequest request) {
        AsyncRequestOperation<UpdateHrisTimeshiftRequest, UpdateHrisTimeshiftResponse> operation
              = new UpdateHrisTimeshift.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
