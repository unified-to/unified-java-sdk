/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.CreateScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.GetScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.GetScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.ListScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.ListScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.PatchScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.PatchScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.RemoveScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.RemoveScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.UpdateScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.UpdateScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.async.GetScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.async.GetScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.async.ListScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateScimUsersResponse;
import to.unified.unified_java_sdk.operations.CreateScimGroups;
import to.unified.unified_java_sdk.operations.CreateScimUsers;
import to.unified.unified_java_sdk.operations.GetScimGroups;
import to.unified.unified_java_sdk.operations.GetScimUsers;
import to.unified.unified_java_sdk.operations.ListScimGroups;
import to.unified.unified_java_sdk.operations.ListScimUsers;
import to.unified.unified_java_sdk.operations.PatchScimGroups;
import to.unified.unified_java_sdk.operations.PatchScimUsers;
import to.unified.unified_java_sdk.operations.RemoveScimGroups;
import to.unified.unified_java_sdk.operations.RemoveScimUsers;
import to.unified.unified_java_sdk.operations.UpdateScimGroups;
import to.unified.unified_java_sdk.operations.UpdateScimUsers;


public class AsyncScim {
    private final SDKConfiguration sdkConfiguration;
    private final Scim syncSDK;

    AsyncScim(Scim syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Scim sync() {
        return syncSDK;
    }


    /**
     * Create group
     * 
     * @return The async call builder
     */
    public CreateScimGroupsRequestBuilder createScimGroups() {
        return new CreateScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Create group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateScimGroupsResponse&gt; - The async response
     */
    public CompletableFuture<CreateScimGroupsResponse> createScimGroups(CreateScimGroupsRequest request) {
        AsyncRequestOperation<CreateScimGroupsRequest, CreateScimGroupsResponse> operation
              = new CreateScimGroups.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create user
     * 
     * @return The async call builder
     */
    public CreateScimUsersRequestBuilder createScimUsers() {
        return new CreateScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Create user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateScimUsersResponse&gt; - The async response
     */
    public CompletableFuture<CreateScimUsersResponse> createScimUsers(CreateScimUsersRequest request) {
        AsyncRequestOperation<CreateScimUsersRequest, CreateScimUsersResponse> operation
              = new CreateScimUsers.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get group
     * 
     * @return The async call builder
     */
    public GetScimGroupsRequestBuilder getScimGroups() {
        return new GetScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Get group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetScimGroupsResponse&gt; - The async response
     */
    public CompletableFuture<GetScimGroupsResponse> getScimGroups(GetScimGroupsRequest request) {
        AsyncRequestOperation<GetScimGroupsRequest, GetScimGroupsResponse> operation
              = new GetScimGroups.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get user
     * 
     * @return The async call builder
     */
    public GetScimUsersRequestBuilder getScimUsers() {
        return new GetScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Get user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetScimUsersResponse&gt; - The async response
     */
    public CompletableFuture<GetScimUsersResponse> getScimUsers(GetScimUsersRequest request) {
        AsyncRequestOperation<GetScimUsersRequest, GetScimUsersResponse> operation
              = new GetScimUsers.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List groups
     * 
     * @return The async call builder
     */
    public ListScimGroupsRequestBuilder listScimGroups() {
        return new ListScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * List groups
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListScimGroupsResponse&gt; - The async response
     */
    public CompletableFuture<ListScimGroupsResponse> listScimGroups(ListScimGroupsRequest request) {
        AsyncRequestOperation<ListScimGroupsRequest, ListScimGroupsResponse> operation
              = new ListScimGroups.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List users
     * 
     * @return The async call builder
     */
    public ListScimUsersRequestBuilder listScimUsers() {
        return new ListScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * List users
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListScimUsersResponse&gt; - The async response
     */
    public CompletableFuture<ListScimUsersResponse> listScimUsers(ListScimUsersRequest request) {
        AsyncRequestOperation<ListScimUsersRequest, ListScimUsersResponse> operation
              = new ListScimUsers.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update group
     * 
     * @return The async call builder
     */
    public PatchScimGroupsRequestBuilder patchScimGroups() {
        return new PatchScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Update group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchScimGroupsResponse&gt; - The async response
     */
    public CompletableFuture<PatchScimGroupsResponse> patchScimGroups(PatchScimGroupsRequest request) {
        AsyncRequestOperation<PatchScimGroupsRequest, PatchScimGroupsResponse> operation
              = new PatchScimGroups.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update user
     * 
     * @return The async call builder
     */
    public PatchScimUsersRequestBuilder patchScimUsers() {
        return new PatchScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Update user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchScimUsersResponse&gt; - The async response
     */
    public CompletableFuture<PatchScimUsersResponse> patchScimUsers(PatchScimUsersRequest request) {
        AsyncRequestOperation<PatchScimUsersRequest, PatchScimUsersResponse> operation
              = new PatchScimUsers.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Delete group
     * 
     * @return The async call builder
     */
    public RemoveScimGroupsRequestBuilder removeScimGroups() {
        return new RemoveScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveScimGroupsResponse&gt; - The async response
     */
    public CompletableFuture<RemoveScimGroupsResponse> removeScimGroups(RemoveScimGroupsRequest request) {
        AsyncRequestOperation<RemoveScimGroupsRequest, RemoveScimGroupsResponse> operation
              = new RemoveScimGroups.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Delete user
     * 
     * @return The async call builder
     */
    public RemoveScimUsersRequestBuilder removeScimUsers() {
        return new RemoveScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveScimUsersResponse&gt; - The async response
     */
    public CompletableFuture<RemoveScimUsersResponse> removeScimUsers(RemoveScimUsersRequest request) {
        AsyncRequestOperation<RemoveScimUsersRequest, RemoveScimUsersResponse> operation
              = new RemoveScimUsers.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update group
     * 
     * @return The async call builder
     */
    public UpdateScimGroupsRequestBuilder updateScimGroups() {
        return new UpdateScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Update group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateScimGroupsResponse&gt; - The async response
     */
    public CompletableFuture<UpdateScimGroupsResponse> updateScimGroups(UpdateScimGroupsRequest request) {
        AsyncRequestOperation<UpdateScimGroupsRequest, UpdateScimGroupsResponse> operation
              = new UpdateScimGroups.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update user
     * 
     * @return The async call builder
     */
    public UpdateScimUsersRequestBuilder updateScimUsers() {
        return new UpdateScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Update user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateScimUsersResponse&gt; - The async response
     */
    public CompletableFuture<UpdateScimUsersResponse> updateScimUsers(UpdateScimUsersRequest request) {
        AsyncRequestOperation<UpdateScimUsersRequest, UpdateScimUsersResponse> operation
              = new UpdateScimUsers.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
