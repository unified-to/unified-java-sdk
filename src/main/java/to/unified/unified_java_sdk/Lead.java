/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import to.unified.unified_java_sdk.models.operations.CreateCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.GetCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.ListCrmLeadsRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmLeadsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCrmLeadsResponse;
import to.unified.unified_java_sdk.models.operations.PatchCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCrmLeadResponse;
import to.unified.unified_java_sdk.operations.CreateCrmLead;
import to.unified.unified_java_sdk.operations.GetCrmLead;
import to.unified.unified_java_sdk.operations.ListCrmLeads;
import to.unified.unified_java_sdk.operations.PatchCrmLead;
import to.unified.unified_java_sdk.operations.RemoveCrmLead;
import to.unified.unified_java_sdk.operations.UpdateCrmLead;
import to.unified.unified_java_sdk.utils.Headers;


public class Lead {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncLead asyncSDK;

    Lead(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncLead(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncLead async() {
        return asyncSDK;
    }

    /**
     * Create a lead
     * 
     * @return The call builder
     */
    public CreateCrmLeadRequestBuilder createCrmLead() {
        return new CreateCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateCrmLeadResponse createCrmLead(CreateCrmLeadRequest request) {
        RequestOperation<CreateCrmLeadRequest, CreateCrmLeadResponse> operation
              = new CreateCrmLead.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a lead
     * 
     * @return The call builder
     */
    public GetCrmLeadRequestBuilder getCrmLead() {
        return new GetCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetCrmLeadResponse getCrmLead(GetCrmLeadRequest request) {
        RequestOperation<GetCrmLeadRequest, GetCrmLeadResponse> operation
              = new GetCrmLead.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all leads
     * 
     * @return The call builder
     */
    public ListCrmLeadsRequestBuilder listCrmLeads() {
        return new ListCrmLeadsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all leads
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListCrmLeadsResponse listCrmLeads(ListCrmLeadsRequest request) {
        RequestOperation<ListCrmLeadsRequest, ListCrmLeadsResponse> operation
              = new ListCrmLeads.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a lead
     * 
     * @return The call builder
     */
    public PatchCrmLeadRequestBuilder patchCrmLead() {
        return new PatchCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchCrmLeadResponse patchCrmLead(PatchCrmLeadRequest request) {
        RequestOperation<PatchCrmLeadRequest, PatchCrmLeadResponse> operation
              = new PatchCrmLead.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a lead
     * 
     * @return The call builder
     */
    public RemoveCrmLeadRequestBuilder removeCrmLead() {
        return new RemoveCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveCrmLeadResponse removeCrmLead(RemoveCrmLeadRequest request) {
        RequestOperation<RemoveCrmLeadRequest, RemoveCrmLeadResponse> operation
              = new RemoveCrmLead.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a lead
     * 
     * @return The call builder
     */
    public UpdateCrmLeadRequestBuilder updateCrmLead() {
        return new UpdateCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateCrmLeadResponse updateCrmLead(UpdateCrmLeadRequest request) {
        RequestOperation<UpdateCrmLeadRequest, UpdateCrmLeadResponse> operation
              = new UpdateCrmLead.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
