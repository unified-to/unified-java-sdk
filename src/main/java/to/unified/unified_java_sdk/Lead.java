/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.GetCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.ListCrmLeadsRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmLeadsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCrmLeadsResponse;
import to.unified.unified_java_sdk.models.operations.PatchCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCrmLeadResponse;
import to.unified.unified_java_sdk.operations.CreateCrmLeadOperation;
import to.unified.unified_java_sdk.operations.GetCrmLeadOperation;
import to.unified.unified_java_sdk.operations.ListCrmLeadsOperation;
import to.unified.unified_java_sdk.operations.PatchCrmLeadOperation;
import to.unified.unified_java_sdk.operations.RemoveCrmLeadOperation;
import to.unified.unified_java_sdk.operations.UpdateCrmLeadOperation;


public class Lead {
    private final SDKConfiguration sdkConfiguration;

    Lead(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a lead
     * 
     * @return The call builder
     */
    public CreateCrmLeadRequestBuilder createCrmLead() {
        return new CreateCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCrmLeadResponse createCrmLead(CreateCrmLeadRequest request) throws Exception {
        RequestOperation<CreateCrmLeadRequest, CreateCrmLeadResponse> operation
              = new CreateCrmLeadOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a lead
     * 
     * @return The call builder
     */
    public GetCrmLeadRequestBuilder getCrmLead() {
        return new GetCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCrmLeadResponse getCrmLead(GetCrmLeadRequest request) throws Exception {
        RequestOperation<GetCrmLeadRequest, GetCrmLeadResponse> operation
              = new GetCrmLeadOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all leads
     * 
     * @return The call builder
     */
    public ListCrmLeadsRequestBuilder listCrmLeads() {
        return new ListCrmLeadsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all leads
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCrmLeadsResponse listCrmLeads(ListCrmLeadsRequest request) throws Exception {
        RequestOperation<ListCrmLeadsRequest, ListCrmLeadsResponse> operation
              = new ListCrmLeadsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a lead
     * 
     * @return The call builder
     */
    public PatchCrmLeadRequestBuilder patchCrmLead() {
        return new PatchCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCrmLeadResponse patchCrmLead(PatchCrmLeadRequest request) throws Exception {
        RequestOperation<PatchCrmLeadRequest, PatchCrmLeadResponse> operation
              = new PatchCrmLeadOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a lead
     * 
     * @return The call builder
     */
    public RemoveCrmLeadRequestBuilder removeCrmLead() {
        return new RemoveCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCrmLeadResponse removeCrmLead(RemoveCrmLeadRequest request) throws Exception {
        RequestOperation<RemoveCrmLeadRequest, RemoveCrmLeadResponse> operation
              = new RemoveCrmLeadOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a lead
     * 
     * @return The call builder
     */
    public UpdateCrmLeadRequestBuilder updateCrmLead() {
        return new UpdateCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCrmLeadResponse updateCrmLead(UpdateCrmLeadRequest request) throws Exception {
        RequestOperation<UpdateCrmLeadRequest, UpdateCrmLeadResponse> operation
              = new UpdateCrmLeadOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
