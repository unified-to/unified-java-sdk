/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateRepoOrganizationRequest;
import to.unified.unified_java_sdk.models.operations.CreateRepoOrganizationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateRepoOrganizationResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingOrganizationRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingOrganizationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingOrganizationResponse;
import to.unified.unified_java_sdk.models.operations.GetRepoOrganizationRequest;
import to.unified.unified_java_sdk.models.operations.GetRepoOrganizationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetRepoOrganizationResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingOrganizationsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingOrganizationsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingOrganizationsResponse;
import to.unified.unified_java_sdk.models.operations.ListRepoOrganizationsRequest;
import to.unified.unified_java_sdk.models.operations.ListRepoOrganizationsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListRepoOrganizationsResponse;
import to.unified.unified_java_sdk.models.operations.PatchRepoOrganizationRequest;
import to.unified.unified_java_sdk.models.operations.PatchRepoOrganizationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchRepoOrganizationResponse;
import to.unified.unified_java_sdk.models.operations.RemoveRepoOrganizationRequest;
import to.unified.unified_java_sdk.models.operations.RemoveRepoOrganizationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveRepoOrganizationResponse;
import to.unified.unified_java_sdk.models.operations.UpdateRepoOrganizationRequest;
import to.unified.unified_java_sdk.models.operations.UpdateRepoOrganizationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateRepoOrganizationResponse;
import to.unified.unified_java_sdk.operations.CreateRepoOrganization;
import to.unified.unified_java_sdk.operations.GetAccountingOrganization;
import to.unified.unified_java_sdk.operations.GetRepoOrganization;
import to.unified.unified_java_sdk.operations.ListAccountingOrganizations;
import to.unified.unified_java_sdk.operations.ListRepoOrganizations;
import to.unified.unified_java_sdk.operations.PatchRepoOrganization;
import to.unified.unified_java_sdk.operations.RemoveRepoOrganization;
import to.unified.unified_java_sdk.operations.UpdateRepoOrganization;


public class Organization {
    private final SDKConfiguration sdkConfiguration;

    Organization(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create an organization
     * 
     * @return The call builder
     */
    public CreateRepoOrganizationRequestBuilder createRepoOrganization() {
        return new CreateRepoOrganizationRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an organization
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateRepoOrganizationResponse createRepoOrganization(CreateRepoOrganizationRequest request) throws Exception {
        RequestOperation<CreateRepoOrganizationRequest, CreateRepoOrganizationResponse> operation
              = new CreateRepoOrganization.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an organization
     * 
     * @return The call builder
     */
    public GetAccountingOrganizationRequestBuilder getAccountingOrganization() {
        return new GetAccountingOrganizationRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an organization
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingOrganizationResponse getAccountingOrganization(GetAccountingOrganizationRequest request) throws Exception {
        RequestOperation<GetAccountingOrganizationRequest, GetAccountingOrganizationResponse> operation
              = new GetAccountingOrganization.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an organization
     * 
     * @return The call builder
     */
    public GetRepoOrganizationRequestBuilder getRepoOrganization() {
        return new GetRepoOrganizationRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an organization
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetRepoOrganizationResponse getRepoOrganization(GetRepoOrganizationRequest request) throws Exception {
        RequestOperation<GetRepoOrganizationRequest, GetRepoOrganizationResponse> operation
              = new GetRepoOrganization.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all organizations
     * 
     * @return The call builder
     */
    public ListAccountingOrganizationsRequestBuilder listAccountingOrganizations() {
        return new ListAccountingOrganizationsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all organizations
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingOrganizationsResponse listAccountingOrganizations(ListAccountingOrganizationsRequest request) throws Exception {
        RequestOperation<ListAccountingOrganizationsRequest, ListAccountingOrganizationsResponse> operation
              = new ListAccountingOrganizations.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all organizations
     * 
     * @return The call builder
     */
    public ListRepoOrganizationsRequestBuilder listRepoOrganizations() {
        return new ListRepoOrganizationsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all organizations
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListRepoOrganizationsResponse listRepoOrganizations(ListRepoOrganizationsRequest request) throws Exception {
        RequestOperation<ListRepoOrganizationsRequest, ListRepoOrganizationsResponse> operation
              = new ListRepoOrganizations.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an organization
     * 
     * @return The call builder
     */
    public PatchRepoOrganizationRequestBuilder patchRepoOrganization() {
        return new PatchRepoOrganizationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an organization
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchRepoOrganizationResponse patchRepoOrganization(PatchRepoOrganizationRequest request) throws Exception {
        RequestOperation<PatchRepoOrganizationRequest, PatchRepoOrganizationResponse> operation
              = new PatchRepoOrganization.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an organization
     * 
     * @return The call builder
     */
    public RemoveRepoOrganizationRequestBuilder removeRepoOrganization() {
        return new RemoveRepoOrganizationRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an organization
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveRepoOrganizationResponse removeRepoOrganization(RemoveRepoOrganizationRequest request) throws Exception {
        RequestOperation<RemoveRepoOrganizationRequest, RemoveRepoOrganizationResponse> operation
              = new RemoveRepoOrganization.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an organization
     * 
     * @return The call builder
     */
    public UpdateRepoOrganizationRequestBuilder updateRepoOrganization() {
        return new UpdateRepoOrganizationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an organization
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateRepoOrganizationResponse updateRepoOrganization(UpdateRepoOrganizationRequest request) throws Exception {
        RequestOperation<UpdateRepoOrganizationRequest, UpdateRepoOrganizationResponse> operation
              = new UpdateRepoOrganization.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
