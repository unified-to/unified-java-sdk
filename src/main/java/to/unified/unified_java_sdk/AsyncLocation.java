/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.CreateHrisLocationRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisLocationRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceLocationsRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisLocationsRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisLocationRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisLocationRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisLocationRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateHrisLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateHrisLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.GetHrisLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetHrisLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceLocationsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceLocationsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListHrisLocationsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListHrisLocationsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchHrisLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchHrisLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveHrisLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveHrisLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateHrisLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateHrisLocationResponse;
import to.unified.unified_java_sdk.operations.CreateCommerceLocation;
import to.unified.unified_java_sdk.operations.CreateHrisLocation;
import to.unified.unified_java_sdk.operations.GetCommerceLocation;
import to.unified.unified_java_sdk.operations.GetHrisLocation;
import to.unified.unified_java_sdk.operations.ListCommerceLocations;
import to.unified.unified_java_sdk.operations.ListHrisLocations;
import to.unified.unified_java_sdk.operations.PatchCommerceLocation;
import to.unified.unified_java_sdk.operations.PatchHrisLocation;
import to.unified.unified_java_sdk.operations.RemoveCommerceLocation;
import to.unified.unified_java_sdk.operations.RemoveHrisLocation;
import to.unified.unified_java_sdk.operations.UpdateCommerceLocation;
import to.unified.unified_java_sdk.operations.UpdateHrisLocation;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncLocation {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Location syncSDK;

    AsyncLocation(Location syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Location sync() {
        return syncSDK;
    }


    /**
     * Create a location
     * 
     * @return The async call builder
     */
    public CreateCommerceLocationRequestBuilder createCommerceLocation() {
        return new CreateCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateCommerceLocationResponse>} - The async response
     */
    public CompletableFuture<CreateCommerceLocationResponse> createCommerceLocation(CreateCommerceLocationRequest request) {
        AsyncRequestOperation<CreateCommerceLocationRequest, CreateCommerceLocationResponse> operation
              = new CreateCommerceLocation.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a location
     * 
     * @return The async call builder
     */
    public CreateHrisLocationRequestBuilder createHrisLocation() {
        return new CreateHrisLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateHrisLocationResponse>} - The async response
     */
    public CompletableFuture<CreateHrisLocationResponse> createHrisLocation(CreateHrisLocationRequest request) {
        AsyncRequestOperation<CreateHrisLocationRequest, CreateHrisLocationResponse> operation
              = new CreateHrisLocation.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a location
     * 
     * @return The async call builder
     */
    public GetCommerceLocationRequestBuilder getCommerceLocation() {
        return new GetCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetCommerceLocationResponse>} - The async response
     */
    public CompletableFuture<GetCommerceLocationResponse> getCommerceLocation(GetCommerceLocationRequest request) {
        AsyncRequestOperation<GetCommerceLocationRequest, GetCommerceLocationResponse> operation
              = new GetCommerceLocation.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a location
     * 
     * @return The async call builder
     */
    public GetHrisLocationRequestBuilder getHrisLocation() {
        return new GetHrisLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetHrisLocationResponse>} - The async response
     */
    public CompletableFuture<GetHrisLocationResponse> getHrisLocation(GetHrisLocationRequest request) {
        AsyncRequestOperation<GetHrisLocationRequest, GetHrisLocationResponse> operation
              = new GetHrisLocation.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all locations
     * 
     * @return The async call builder
     */
    public ListCommerceLocationsRequestBuilder listCommerceLocations() {
        return new ListCommerceLocationsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all locations
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListCommerceLocationsResponse>} - The async response
     */
    public CompletableFuture<ListCommerceLocationsResponse> listCommerceLocations(ListCommerceLocationsRequest request) {
        AsyncRequestOperation<ListCommerceLocationsRequest, ListCommerceLocationsResponse> operation
              = new ListCommerceLocations.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all locations
     * 
     * @return The async call builder
     */
    public ListHrisLocationsRequestBuilder listHrisLocations() {
        return new ListHrisLocationsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all locations
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListHrisLocationsResponse>} - The async response
     */
    public CompletableFuture<ListHrisLocationsResponse> listHrisLocations(ListHrisLocationsRequest request) {
        AsyncRequestOperation<ListHrisLocationsRequest, ListHrisLocationsResponse> operation
              = new ListHrisLocations.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a location
     * 
     * @return The async call builder
     */
    public PatchCommerceLocationRequestBuilder patchCommerceLocation() {
        return new PatchCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchCommerceLocationResponse>} - The async response
     */
    public CompletableFuture<PatchCommerceLocationResponse> patchCommerceLocation(PatchCommerceLocationRequest request) {
        AsyncRequestOperation<PatchCommerceLocationRequest, PatchCommerceLocationResponse> operation
              = new PatchCommerceLocation.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a location
     * 
     * @return The async call builder
     */
    public PatchHrisLocationRequestBuilder patchHrisLocation() {
        return new PatchHrisLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchHrisLocationResponse>} - The async response
     */
    public CompletableFuture<PatchHrisLocationResponse> patchHrisLocation(PatchHrisLocationRequest request) {
        AsyncRequestOperation<PatchHrisLocationRequest, PatchHrisLocationResponse> operation
              = new PatchHrisLocation.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a location
     * 
     * @return The async call builder
     */
    public RemoveCommerceLocationRequestBuilder removeCommerceLocation() {
        return new RemoveCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveCommerceLocationResponse>} - The async response
     */
    public CompletableFuture<RemoveCommerceLocationResponse> removeCommerceLocation(RemoveCommerceLocationRequest request) {
        AsyncRequestOperation<RemoveCommerceLocationRequest, RemoveCommerceLocationResponse> operation
              = new RemoveCommerceLocation.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a location
     * 
     * @return The async call builder
     */
    public RemoveHrisLocationRequestBuilder removeHrisLocation() {
        return new RemoveHrisLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveHrisLocationResponse>} - The async response
     */
    public CompletableFuture<RemoveHrisLocationResponse> removeHrisLocation(RemoveHrisLocationRequest request) {
        AsyncRequestOperation<RemoveHrisLocationRequest, RemoveHrisLocationResponse> operation
              = new RemoveHrisLocation.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a location
     * 
     * @return The async call builder
     */
    public UpdateCommerceLocationRequestBuilder updateCommerceLocation() {
        return new UpdateCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateCommerceLocationResponse>} - The async response
     */
    public CompletableFuture<UpdateCommerceLocationResponse> updateCommerceLocation(UpdateCommerceLocationRequest request) {
        AsyncRequestOperation<UpdateCommerceLocationRequest, UpdateCommerceLocationResponse> operation
              = new UpdateCommerceLocation.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a location
     * 
     * @return The async call builder
     */
    public UpdateHrisLocationRequestBuilder updateHrisLocation() {
        return new UpdateHrisLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateHrisLocationResponse>} - The async response
     */
    public CompletableFuture<UpdateHrisLocationResponse> updateHrisLocation(UpdateHrisLocationRequest request) {
        AsyncRequestOperation<UpdateHrisLocationRequest, UpdateHrisLocationResponse> operation
              = new UpdateHrisLocation.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
