/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateTicketingNoteRequest;
import to.unified.unified_java_sdk.models.operations.CreateTicketingNoteRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateTicketingNoteResponse;
import to.unified.unified_java_sdk.models.operations.GetTicketingNoteRequest;
import to.unified.unified_java_sdk.models.operations.GetTicketingNoteRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetTicketingNoteResponse;
import to.unified.unified_java_sdk.models.operations.ListTicketingNotesRequest;
import to.unified.unified_java_sdk.models.operations.ListTicketingNotesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListTicketingNotesResponse;
import to.unified.unified_java_sdk.models.operations.PatchTicketingNoteRequest;
import to.unified.unified_java_sdk.models.operations.PatchTicketingNoteRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchTicketingNoteResponse;
import to.unified.unified_java_sdk.models.operations.RemoveTicketingNoteRequest;
import to.unified.unified_java_sdk.models.operations.RemoveTicketingNoteRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveTicketingNoteResponse;
import to.unified.unified_java_sdk.models.operations.UpdateTicketingNoteRequest;
import to.unified.unified_java_sdk.models.operations.UpdateTicketingNoteRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateTicketingNoteResponse;
import to.unified.unified_java_sdk.operations.CreateTicketingNoteOperation;
import to.unified.unified_java_sdk.operations.GetTicketingNoteOperation;
import to.unified.unified_java_sdk.operations.ListTicketingNotesOperation;
import to.unified.unified_java_sdk.operations.PatchTicketingNoteOperation;
import to.unified.unified_java_sdk.operations.RemoveTicketingNoteOperation;
import to.unified.unified_java_sdk.operations.UpdateTicketingNoteOperation;


public class Note {
    private final SDKConfiguration sdkConfiguration;

    Note(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a note
     * 
     * @return The call builder
     */
    public CreateTicketingNoteRequestBuilder createTicketingNote() {
        return new CreateTicketingNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateTicketingNoteResponse createTicketingNote(CreateTicketingNoteRequest request) throws Exception {
        RequestOperation<CreateTicketingNoteRequest, CreateTicketingNoteResponse> operation
              = new CreateTicketingNoteOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a note
     * 
     * @return The call builder
     */
    public GetTicketingNoteRequestBuilder getTicketingNote() {
        return new GetTicketingNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTicketingNoteResponse getTicketingNote(GetTicketingNoteRequest request) throws Exception {
        RequestOperation<GetTicketingNoteRequest, GetTicketingNoteResponse> operation
              = new GetTicketingNoteOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all notes
     * 
     * @return The call builder
     */
    public ListTicketingNotesRequestBuilder listTicketingNotes() {
        return new ListTicketingNotesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all notes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListTicketingNotesResponse listTicketingNotes(ListTicketingNotesRequest request) throws Exception {
        RequestOperation<ListTicketingNotesRequest, ListTicketingNotesResponse> operation
              = new ListTicketingNotesOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a note
     * 
     * @return The call builder
     */
    public PatchTicketingNoteRequestBuilder patchTicketingNote() {
        return new PatchTicketingNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchTicketingNoteResponse patchTicketingNote(PatchTicketingNoteRequest request) throws Exception {
        RequestOperation<PatchTicketingNoteRequest, PatchTicketingNoteResponse> operation
              = new PatchTicketingNoteOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a note
     * 
     * @return The call builder
     */
    public RemoveTicketingNoteRequestBuilder removeTicketingNote() {
        return new RemoveTicketingNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveTicketingNoteResponse removeTicketingNote(RemoveTicketingNoteRequest request) throws Exception {
        RequestOperation<RemoveTicketingNoteRequest, RemoveTicketingNoteResponse> operation
              = new RemoveTicketingNoteOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a note
     * 
     * @return The call builder
     */
    public UpdateTicketingNoteRequestBuilder updateTicketingNote() {
        return new UpdateTicketingNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateTicketingNoteResponse updateTicketingNote(UpdateTicketingNoteRequest request) throws Exception {
        RequestOperation<UpdateTicketingNoteRequest, UpdateTicketingNoteResponse> operation
              = new UpdateTicketingNoteOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
