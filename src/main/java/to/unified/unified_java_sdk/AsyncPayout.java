/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.GetPaymentPayoutRequest;
import to.unified.unified_java_sdk.models.operations.ListPaymentPayoutsRequest;
import to.unified.unified_java_sdk.models.operations.async.GetPaymentPayoutRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetPaymentPayoutResponse;
import to.unified.unified_java_sdk.models.operations.async.ListPaymentPayoutsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListPaymentPayoutsResponse;
import to.unified.unified_java_sdk.operations.GetPaymentPayout;
import to.unified.unified_java_sdk.operations.ListPaymentPayouts;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncPayout {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Payout syncSDK;

    AsyncPayout(Payout syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Payout sync() {
        return syncSDK;
    }


    /**
     * Retrieve a payout
     * 
     * @return The async call builder
     */
    public GetPaymentPayoutRequestBuilder getPaymentPayout() {
        return new GetPaymentPayoutRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a payout
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetPaymentPayoutResponse>} - The async response
     */
    public CompletableFuture<GetPaymentPayoutResponse> getPaymentPayout(GetPaymentPayoutRequest request) {
        AsyncRequestOperation<GetPaymentPayoutRequest, GetPaymentPayoutResponse> operation
              = new GetPaymentPayout.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all payouts
     * 
     * @return The async call builder
     */
    public ListPaymentPayoutsRequestBuilder listPaymentPayouts() {
        return new ListPaymentPayoutsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all payouts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListPaymentPayoutsResponse>} - The async response
     */
    public CompletableFuture<ListPaymentPayoutsResponse> listPaymentPayouts(ListPaymentPayoutsRequest request) {
        AsyncRequestOperation<ListPaymentPayoutsRequest, ListPaymentPayoutsResponse> operation
              = new ListPaymentPayouts.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
