/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.GetVerificationPackageRequest;
import to.unified.unified_java_sdk.models.operations.ListVerificationPackagesRequest;
import to.unified.unified_java_sdk.models.operations.async.GetVerificationPackageRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetVerificationPackageResponse;
import to.unified.unified_java_sdk.models.operations.async.ListVerificationPackagesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListVerificationPackagesResponse;
import to.unified.unified_java_sdk.operations.GetVerificationPackage;
import to.unified.unified_java_sdk.operations.ListVerificationPackages;


public class AsyncPackage {
    private final SDKConfiguration sdkConfiguration;
    private final Package syncSDK;

    AsyncPackage(Package syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Package sync() {
        return syncSDK;
    }


    /**
     * Retrieve a package
     * 
     * @return The async call builder
     */
    public GetVerificationPackageRequestBuilder getVerificationPackage() {
        return new GetVerificationPackageRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a package
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetVerificationPackageResponse&gt; - The async response
     */
    public CompletableFuture<GetVerificationPackageResponse> getVerificationPackage(GetVerificationPackageRequest request) {
        AsyncRequestOperation<GetVerificationPackageRequest, GetVerificationPackageResponse> operation
              = new GetVerificationPackage.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all packages
     * 
     * @return The async call builder
     */
    public ListVerificationPackagesRequestBuilder listVerificationPackages() {
        return new ListVerificationPackagesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all packages
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListVerificationPackagesResponse&gt; - The async response
     */
    public CompletableFuture<ListVerificationPackagesResponse> listVerificationPackages(ListVerificationPackagesRequest request) {
        AsyncRequestOperation<ListVerificationPackagesRequest, ListVerificationPackagesResponse> operation
              = new ListVerificationPackages.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
