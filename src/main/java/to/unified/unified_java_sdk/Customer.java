/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import java.util.List;
import java.util.Optional;
import to.unified.unified_java_sdk.models.operations.CreateTicketingCustomerRequest;
import to.unified.unified_java_sdk.models.operations.CreateTicketingCustomerRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateTicketingCustomerResponse;
import to.unified.unified_java_sdk.models.operations.GetTicketingCustomerRequest;
import to.unified.unified_java_sdk.models.operations.GetTicketingCustomerRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetTicketingCustomerResponse;
import to.unified.unified_java_sdk.models.operations.ListTicketingCustomersRequest;
import to.unified.unified_java_sdk.models.operations.ListTicketingCustomersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListTicketingCustomersResponse;
import to.unified.unified_java_sdk.models.operations.PatchTicketingCustomerRequest;
import to.unified.unified_java_sdk.models.operations.PatchTicketingCustomerRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchTicketingCustomerResponse;
import to.unified.unified_java_sdk.models.operations.RemoveTicketingCustomerRequest;
import to.unified.unified_java_sdk.models.operations.RemoveTicketingCustomerRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveTicketingCustomerResponse;
import to.unified.unified_java_sdk.models.operations.UpdateTicketingCustomerRequest;
import to.unified.unified_java_sdk.models.operations.UpdateTicketingCustomerRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateTicketingCustomerResponse;
import to.unified.unified_java_sdk.operations.CreateTicketingCustomerOperation;
import to.unified.unified_java_sdk.operations.GetTicketingCustomerOperation;
import to.unified.unified_java_sdk.operations.ListTicketingCustomersOperation;
import to.unified.unified_java_sdk.operations.PatchTicketingCustomerOperation;
import to.unified.unified_java_sdk.operations.RemoveTicketingCustomerOperation;
import to.unified.unified_java_sdk.operations.UpdateTicketingCustomerOperation;


public class Customer {
    private final SDKConfiguration sdkConfiguration;

    Customer(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * Create a customer
     * 
     * @return The call builder
     */
    public CreateTicketingCustomerRequestBuilder createTicketingCustomer() {
        return new CreateTicketingCustomerRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a customer
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateTicketingCustomerResponse createTicketingCustomer(CreateTicketingCustomerRequest request) throws Exception {
        RequestOperation<CreateTicketingCustomerRequest, CreateTicketingCustomerResponse> operation
              = new CreateTicketingCustomerOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a customer
     * 
     * @return The call builder
     */
    public GetTicketingCustomerRequestBuilder getTicketingCustomer() {
        return new GetTicketingCustomerRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a customer
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTicketingCustomerResponse getTicketingCustomer(GetTicketingCustomerRequest request) throws Exception {
        RequestOperation<GetTicketingCustomerRequest, GetTicketingCustomerResponse> operation
              = new GetTicketingCustomerOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all customers
     * 
     * @return The call builder
     */
    public ListTicketingCustomersRequestBuilder listTicketingCustomers() {
        return new ListTicketingCustomersRequestBuilder(sdkConfiguration);
    }

    /**
     * List all customers
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListTicketingCustomersResponse listTicketingCustomers(ListTicketingCustomersRequest request) throws Exception {
        RequestOperation<ListTicketingCustomersRequest, ListTicketingCustomersResponse> operation
              = new ListTicketingCustomersOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a customer
     * 
     * @return The call builder
     */
    public PatchTicketingCustomerRequestBuilder patchTicketingCustomer() {
        return new PatchTicketingCustomerRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a customer
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchTicketingCustomerResponse patchTicketingCustomer(PatchTicketingCustomerRequest request) throws Exception {
        RequestOperation<PatchTicketingCustomerRequest, PatchTicketingCustomerResponse> operation
              = new PatchTicketingCustomerOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a customer
     * 
     * @return The call builder
     */
    public RemoveTicketingCustomerRequestBuilder removeTicketingCustomer() {
        return new RemoveTicketingCustomerRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a customer
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveTicketingCustomerResponse removeTicketingCustomer(RemoveTicketingCustomerRequest request) throws Exception {
        RequestOperation<RemoveTicketingCustomerRequest, RemoveTicketingCustomerResponse> operation
              = new RemoveTicketingCustomerOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a customer
     * 
     * @return The call builder
     */
    public UpdateTicketingCustomerRequestBuilder updateTicketingCustomer() {
        return new UpdateTicketingCustomerRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a customer
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateTicketingCustomerResponse updateTicketingCustomer(UpdateTicketingCustomerRequest request) throws Exception {
        RequestOperation<UpdateTicketingCustomerRequest, UpdateTicketingCustomerResponse> operation
              = new UpdateTicketingCustomerOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
