/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.CreateAtsApplicationRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsApplicationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAtsApplicationResponse;
import to.unified.unified_java_sdk.models.operations.CreateAtsCandidateRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsCandidateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAtsCandidateResponse;
import to.unified.unified_java_sdk.models.operations.CreateAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.CreateAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.CreateAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.CreateAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.CreateAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAtsScorecardResponse;
import to.unified.unified_java_sdk.models.operations.GetAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.GetAtsApplicationRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsApplicationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAtsApplicationResponse;
import to.unified.unified_java_sdk.models.operations.GetAtsCandidateRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsCandidateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAtsCandidateResponse;
import to.unified.unified_java_sdk.models.operations.GetAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.GetAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.GetAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.GetAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.GetAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAtsScorecardResponse;
import to.unified.unified_java_sdk.models.operations.ListAtsActivitiesRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsActivitiesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAtsActivitiesResponse;
import to.unified.unified_java_sdk.models.operations.ListAtsApplicationsRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsApplicationsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAtsApplicationsResponse;
import to.unified.unified_java_sdk.models.operations.ListAtsApplicationstatusesRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsApplicationstatusesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAtsApplicationstatusesResponse;
import to.unified.unified_java_sdk.models.operations.ListAtsCandidatesRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsCandidatesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAtsCandidatesResponse;
import to.unified.unified_java_sdk.models.operations.ListAtsCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAtsCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.ListAtsDocumentsRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsDocumentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAtsDocumentsResponse;
import to.unified.unified_java_sdk.models.operations.ListAtsInterviewsRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsInterviewsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAtsInterviewsResponse;
import to.unified.unified_java_sdk.models.operations.ListAtsJobsRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsJobsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAtsJobsResponse;
import to.unified.unified_java_sdk.models.operations.ListAtsScorecardsRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsScorecardsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAtsScorecardsResponse;
import to.unified.unified_java_sdk.models.operations.PatchAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.PatchAtsApplicationRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsApplicationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAtsApplicationResponse;
import to.unified.unified_java_sdk.models.operations.PatchAtsCandidateRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsCandidateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAtsCandidateResponse;
import to.unified.unified_java_sdk.models.operations.PatchAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.PatchAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.PatchAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.PatchAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.PatchAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAtsScorecardResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAtsApplicationRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsApplicationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAtsApplicationResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAtsCandidateRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsCandidateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAtsCandidateResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAtsScorecardResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAtsApplicationRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsApplicationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAtsApplicationResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAtsCandidateRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsCandidateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAtsCandidateResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAtsScorecardResponse;
import to.unified.unified_java_sdk.operations.CreateAtsActivity;
import to.unified.unified_java_sdk.operations.CreateAtsApplication;
import to.unified.unified_java_sdk.operations.CreateAtsCandidate;
import to.unified.unified_java_sdk.operations.CreateAtsCompany;
import to.unified.unified_java_sdk.operations.CreateAtsDocument;
import to.unified.unified_java_sdk.operations.CreateAtsInterview;
import to.unified.unified_java_sdk.operations.CreateAtsJob;
import to.unified.unified_java_sdk.operations.CreateAtsScorecard;
import to.unified.unified_java_sdk.operations.GetAtsActivity;
import to.unified.unified_java_sdk.operations.GetAtsApplication;
import to.unified.unified_java_sdk.operations.GetAtsCandidate;
import to.unified.unified_java_sdk.operations.GetAtsCompany;
import to.unified.unified_java_sdk.operations.GetAtsDocument;
import to.unified.unified_java_sdk.operations.GetAtsInterview;
import to.unified.unified_java_sdk.operations.GetAtsJob;
import to.unified.unified_java_sdk.operations.GetAtsScorecard;
import to.unified.unified_java_sdk.operations.ListAtsActivities;
import to.unified.unified_java_sdk.operations.ListAtsApplications;
import to.unified.unified_java_sdk.operations.ListAtsApplicationstatuses;
import to.unified.unified_java_sdk.operations.ListAtsCandidates;
import to.unified.unified_java_sdk.operations.ListAtsCompanies;
import to.unified.unified_java_sdk.operations.ListAtsDocuments;
import to.unified.unified_java_sdk.operations.ListAtsInterviews;
import to.unified.unified_java_sdk.operations.ListAtsJobs;
import to.unified.unified_java_sdk.operations.ListAtsScorecards;
import to.unified.unified_java_sdk.operations.PatchAtsActivity;
import to.unified.unified_java_sdk.operations.PatchAtsApplication;
import to.unified.unified_java_sdk.operations.PatchAtsCandidate;
import to.unified.unified_java_sdk.operations.PatchAtsCompany;
import to.unified.unified_java_sdk.operations.PatchAtsDocument;
import to.unified.unified_java_sdk.operations.PatchAtsInterview;
import to.unified.unified_java_sdk.operations.PatchAtsJob;
import to.unified.unified_java_sdk.operations.PatchAtsScorecard;
import to.unified.unified_java_sdk.operations.RemoveAtsActivity;
import to.unified.unified_java_sdk.operations.RemoveAtsApplication;
import to.unified.unified_java_sdk.operations.RemoveAtsCandidate;
import to.unified.unified_java_sdk.operations.RemoveAtsCompany;
import to.unified.unified_java_sdk.operations.RemoveAtsDocument;
import to.unified.unified_java_sdk.operations.RemoveAtsInterview;
import to.unified.unified_java_sdk.operations.RemoveAtsJob;
import to.unified.unified_java_sdk.operations.RemoveAtsScorecard;
import to.unified.unified_java_sdk.operations.UpdateAtsActivity;
import to.unified.unified_java_sdk.operations.UpdateAtsApplication;
import to.unified.unified_java_sdk.operations.UpdateAtsCandidate;
import to.unified.unified_java_sdk.operations.UpdateAtsCompany;
import to.unified.unified_java_sdk.operations.UpdateAtsDocument;
import to.unified.unified_java_sdk.operations.UpdateAtsInterview;
import to.unified.unified_java_sdk.operations.UpdateAtsJob;
import to.unified.unified_java_sdk.operations.UpdateAtsScorecard;
import to.unified.unified_java_sdk.utils.Headers;


public class Ats {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncAts asyncSDK;

    Ats(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncAts(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncAts async() {
        return asyncSDK;
    }

    /**
     * Create an activity
     * 
     * @return The call builder
     */
    public CreateAtsActivityRequestBuilder createAtsActivity() {
        return new CreateAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAtsActivityResponse createAtsActivity(CreateAtsActivityRequest request) throws Exception {
        RequestOperation<CreateAtsActivityRequest, CreateAtsActivityResponse> operation
              = new CreateAtsActivity.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create an application
     * 
     * @return The call builder
     */
    public CreateAtsApplicationRequestBuilder createAtsApplication() {
        return new CreateAtsApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAtsApplicationResponse createAtsApplication(CreateAtsApplicationRequest request) throws Exception {
        RequestOperation<CreateAtsApplicationRequest, CreateAtsApplicationResponse> operation
              = new CreateAtsApplication.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a candidate
     * 
     * @return The call builder
     */
    public CreateAtsCandidateRequestBuilder createAtsCandidate() {
        return new CreateAtsCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a candidate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAtsCandidateResponse createAtsCandidate(CreateAtsCandidateRequest request) throws Exception {
        RequestOperation<CreateAtsCandidateRequest, CreateAtsCandidateResponse> operation
              = new CreateAtsCandidate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a company
     * 
     * @return The call builder
     */
    public CreateAtsCompanyRequestBuilder createAtsCompany() {
        return new CreateAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAtsCompanyResponse createAtsCompany(CreateAtsCompanyRequest request) throws Exception {
        RequestOperation<CreateAtsCompanyRequest, CreateAtsCompanyResponse> operation
              = new CreateAtsCompany.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a document
     * 
     * @return The call builder
     */
    public CreateAtsDocumentRequestBuilder createAtsDocument() {
        return new CreateAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAtsDocumentResponse createAtsDocument(CreateAtsDocumentRequest request) throws Exception {
        RequestOperation<CreateAtsDocumentRequest, CreateAtsDocumentResponse> operation
              = new CreateAtsDocument.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create an interview
     * 
     * @return The call builder
     */
    public CreateAtsInterviewRequestBuilder createAtsInterview() {
        return new CreateAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAtsInterviewResponse createAtsInterview(CreateAtsInterviewRequest request) throws Exception {
        RequestOperation<CreateAtsInterviewRequest, CreateAtsInterviewResponse> operation
              = new CreateAtsInterview.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a job
     * 
     * @return The call builder
     */
    public CreateAtsJobRequestBuilder createAtsJob() {
        return new CreateAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAtsJobResponse createAtsJob(CreateAtsJobRequest request) throws Exception {
        RequestOperation<CreateAtsJobRequest, CreateAtsJobResponse> operation
              = new CreateAtsJob.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a scorecard
     * 
     * @return The call builder
     */
    public CreateAtsScorecardRequestBuilder createAtsScorecard() {
        return new CreateAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAtsScorecardResponse createAtsScorecard(CreateAtsScorecardRequest request) throws Exception {
        RequestOperation<CreateAtsScorecardRequest, CreateAtsScorecardResponse> operation
              = new CreateAtsScorecard.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an activity
     * 
     * @return The call builder
     */
    public GetAtsActivityRequestBuilder getAtsActivity() {
        return new GetAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAtsActivityResponse getAtsActivity(GetAtsActivityRequest request) throws Exception {
        RequestOperation<GetAtsActivityRequest, GetAtsActivityResponse> operation
              = new GetAtsActivity.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an application
     * 
     * @return The call builder
     */
    public GetAtsApplicationRequestBuilder getAtsApplication() {
        return new GetAtsApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAtsApplicationResponse getAtsApplication(GetAtsApplicationRequest request) throws Exception {
        RequestOperation<GetAtsApplicationRequest, GetAtsApplicationResponse> operation
              = new GetAtsApplication.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a candidate
     * 
     * @return The call builder
     */
    public GetAtsCandidateRequestBuilder getAtsCandidate() {
        return new GetAtsCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a candidate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAtsCandidateResponse getAtsCandidate(GetAtsCandidateRequest request) throws Exception {
        RequestOperation<GetAtsCandidateRequest, GetAtsCandidateResponse> operation
              = new GetAtsCandidate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a company
     * 
     * @return The call builder
     */
    public GetAtsCompanyRequestBuilder getAtsCompany() {
        return new GetAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAtsCompanyResponse getAtsCompany(GetAtsCompanyRequest request) throws Exception {
        RequestOperation<GetAtsCompanyRequest, GetAtsCompanyResponse> operation
              = new GetAtsCompany.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a document
     * 
     * @return The call builder
     */
    public GetAtsDocumentRequestBuilder getAtsDocument() {
        return new GetAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAtsDocumentResponse getAtsDocument(GetAtsDocumentRequest request) throws Exception {
        RequestOperation<GetAtsDocumentRequest, GetAtsDocumentResponse> operation
              = new GetAtsDocument.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an interview
     * 
     * @return The call builder
     */
    public GetAtsInterviewRequestBuilder getAtsInterview() {
        return new GetAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAtsInterviewResponse getAtsInterview(GetAtsInterviewRequest request) throws Exception {
        RequestOperation<GetAtsInterviewRequest, GetAtsInterviewResponse> operation
              = new GetAtsInterview.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a job
     * 
     * @return The call builder
     */
    public GetAtsJobRequestBuilder getAtsJob() {
        return new GetAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAtsJobResponse getAtsJob(GetAtsJobRequest request) throws Exception {
        RequestOperation<GetAtsJobRequest, GetAtsJobResponse> operation
              = new GetAtsJob.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a scorecard
     * 
     * @return The call builder
     */
    public GetAtsScorecardRequestBuilder getAtsScorecard() {
        return new GetAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAtsScorecardResponse getAtsScorecard(GetAtsScorecardRequest request) throws Exception {
        RequestOperation<GetAtsScorecardRequest, GetAtsScorecardResponse> operation
              = new GetAtsScorecard.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all activities
     * 
     * @return The call builder
     */
    public ListAtsActivitiesRequestBuilder listAtsActivities() {
        return new ListAtsActivitiesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all activities
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAtsActivitiesResponse listAtsActivities(ListAtsActivitiesRequest request) throws Exception {
        RequestOperation<ListAtsActivitiesRequest, ListAtsActivitiesResponse> operation
              = new ListAtsActivities.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all applications
     * 
     * @return The call builder
     */
    public ListAtsApplicationsRequestBuilder listAtsApplications() {
        return new ListAtsApplicationsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all applications
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAtsApplicationsResponse listAtsApplications(ListAtsApplicationsRequest request) throws Exception {
        RequestOperation<ListAtsApplicationsRequest, ListAtsApplicationsResponse> operation
              = new ListAtsApplications.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all applicationstatuses
     * 
     * @return The call builder
     */
    public ListAtsApplicationstatusesRequestBuilder listAtsApplicationstatuses() {
        return new ListAtsApplicationstatusesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all applicationstatuses
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAtsApplicationstatusesResponse listAtsApplicationstatuses(ListAtsApplicationstatusesRequest request) throws Exception {
        RequestOperation<ListAtsApplicationstatusesRequest, ListAtsApplicationstatusesResponse> operation
              = new ListAtsApplicationstatuses.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all candidates
     * 
     * @return The call builder
     */
    public ListAtsCandidatesRequestBuilder listAtsCandidates() {
        return new ListAtsCandidatesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all candidates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAtsCandidatesResponse listAtsCandidates(ListAtsCandidatesRequest request) throws Exception {
        RequestOperation<ListAtsCandidatesRequest, ListAtsCandidatesResponse> operation
              = new ListAtsCandidates.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all companies
     * 
     * @return The call builder
     */
    public ListAtsCompaniesRequestBuilder listAtsCompanies() {
        return new ListAtsCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all companies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAtsCompaniesResponse listAtsCompanies(ListAtsCompaniesRequest request) throws Exception {
        RequestOperation<ListAtsCompaniesRequest, ListAtsCompaniesResponse> operation
              = new ListAtsCompanies.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all documents
     * 
     * @return The call builder
     */
    public ListAtsDocumentsRequestBuilder listAtsDocuments() {
        return new ListAtsDocumentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all documents
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAtsDocumentsResponse listAtsDocuments(ListAtsDocumentsRequest request) throws Exception {
        RequestOperation<ListAtsDocumentsRequest, ListAtsDocumentsResponse> operation
              = new ListAtsDocuments.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all interviews
     * 
     * @return The call builder
     */
    public ListAtsInterviewsRequestBuilder listAtsInterviews() {
        return new ListAtsInterviewsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all interviews
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAtsInterviewsResponse listAtsInterviews(ListAtsInterviewsRequest request) throws Exception {
        RequestOperation<ListAtsInterviewsRequest, ListAtsInterviewsResponse> operation
              = new ListAtsInterviews.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all jobs
     * 
     * @return The call builder
     */
    public ListAtsJobsRequestBuilder listAtsJobs() {
        return new ListAtsJobsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all jobs
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAtsJobsResponse listAtsJobs(ListAtsJobsRequest request) throws Exception {
        RequestOperation<ListAtsJobsRequest, ListAtsJobsResponse> operation
              = new ListAtsJobs.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all scorecards
     * 
     * @return The call builder
     */
    public ListAtsScorecardsRequestBuilder listAtsScorecards() {
        return new ListAtsScorecardsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all scorecards
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAtsScorecardsResponse listAtsScorecards(ListAtsScorecardsRequest request) throws Exception {
        RequestOperation<ListAtsScorecardsRequest, ListAtsScorecardsResponse> operation
              = new ListAtsScorecards.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an activity
     * 
     * @return The call builder
     */
    public PatchAtsActivityRequestBuilder patchAtsActivity() {
        return new PatchAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAtsActivityResponse patchAtsActivity(PatchAtsActivityRequest request) throws Exception {
        RequestOperation<PatchAtsActivityRequest, PatchAtsActivityResponse> operation
              = new PatchAtsActivity.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an application
     * 
     * @return The call builder
     */
    public PatchAtsApplicationRequestBuilder patchAtsApplication() {
        return new PatchAtsApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAtsApplicationResponse patchAtsApplication(PatchAtsApplicationRequest request) throws Exception {
        RequestOperation<PatchAtsApplicationRequest, PatchAtsApplicationResponse> operation
              = new PatchAtsApplication.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a candidate
     * 
     * @return The call builder
     */
    public PatchAtsCandidateRequestBuilder patchAtsCandidate() {
        return new PatchAtsCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a candidate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAtsCandidateResponse patchAtsCandidate(PatchAtsCandidateRequest request) throws Exception {
        RequestOperation<PatchAtsCandidateRequest, PatchAtsCandidateResponse> operation
              = new PatchAtsCandidate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a company
     * 
     * @return The call builder
     */
    public PatchAtsCompanyRequestBuilder patchAtsCompany() {
        return new PatchAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAtsCompanyResponse patchAtsCompany(PatchAtsCompanyRequest request) throws Exception {
        RequestOperation<PatchAtsCompanyRequest, PatchAtsCompanyResponse> operation
              = new PatchAtsCompany.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a document
     * 
     * @return The call builder
     */
    public PatchAtsDocumentRequestBuilder patchAtsDocument() {
        return new PatchAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAtsDocumentResponse patchAtsDocument(PatchAtsDocumentRequest request) throws Exception {
        RequestOperation<PatchAtsDocumentRequest, PatchAtsDocumentResponse> operation
              = new PatchAtsDocument.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an interview
     * 
     * @return The call builder
     */
    public PatchAtsInterviewRequestBuilder patchAtsInterview() {
        return new PatchAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAtsInterviewResponse patchAtsInterview(PatchAtsInterviewRequest request) throws Exception {
        RequestOperation<PatchAtsInterviewRequest, PatchAtsInterviewResponse> operation
              = new PatchAtsInterview.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a job
     * 
     * @return The call builder
     */
    public PatchAtsJobRequestBuilder patchAtsJob() {
        return new PatchAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAtsJobResponse patchAtsJob(PatchAtsJobRequest request) throws Exception {
        RequestOperation<PatchAtsJobRequest, PatchAtsJobResponse> operation
              = new PatchAtsJob.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a scorecard
     * 
     * @return The call builder
     */
    public PatchAtsScorecardRequestBuilder patchAtsScorecard() {
        return new PatchAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAtsScorecardResponse patchAtsScorecard(PatchAtsScorecardRequest request) throws Exception {
        RequestOperation<PatchAtsScorecardRequest, PatchAtsScorecardResponse> operation
              = new PatchAtsScorecard.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an activity
     * 
     * @return The call builder
     */
    public RemoveAtsActivityRequestBuilder removeAtsActivity() {
        return new RemoveAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAtsActivityResponse removeAtsActivity(RemoveAtsActivityRequest request) throws Exception {
        RequestOperation<RemoveAtsActivityRequest, RemoveAtsActivityResponse> operation
              = new RemoveAtsActivity.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an application
     * 
     * @return The call builder
     */
    public RemoveAtsApplicationRequestBuilder removeAtsApplication() {
        return new RemoveAtsApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAtsApplicationResponse removeAtsApplication(RemoveAtsApplicationRequest request) throws Exception {
        RequestOperation<RemoveAtsApplicationRequest, RemoveAtsApplicationResponse> operation
              = new RemoveAtsApplication.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a candidate
     * 
     * @return The call builder
     */
    public RemoveAtsCandidateRequestBuilder removeAtsCandidate() {
        return new RemoveAtsCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a candidate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAtsCandidateResponse removeAtsCandidate(RemoveAtsCandidateRequest request) throws Exception {
        RequestOperation<RemoveAtsCandidateRequest, RemoveAtsCandidateResponse> operation
              = new RemoveAtsCandidate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a company
     * 
     * @return The call builder
     */
    public RemoveAtsCompanyRequestBuilder removeAtsCompany() {
        return new RemoveAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAtsCompanyResponse removeAtsCompany(RemoveAtsCompanyRequest request) throws Exception {
        RequestOperation<RemoveAtsCompanyRequest, RemoveAtsCompanyResponse> operation
              = new RemoveAtsCompany.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a document
     * 
     * @return The call builder
     */
    public RemoveAtsDocumentRequestBuilder removeAtsDocument() {
        return new RemoveAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAtsDocumentResponse removeAtsDocument(RemoveAtsDocumentRequest request) throws Exception {
        RequestOperation<RemoveAtsDocumentRequest, RemoveAtsDocumentResponse> operation
              = new RemoveAtsDocument.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an interview
     * 
     * @return The call builder
     */
    public RemoveAtsInterviewRequestBuilder removeAtsInterview() {
        return new RemoveAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAtsInterviewResponse removeAtsInterview(RemoveAtsInterviewRequest request) throws Exception {
        RequestOperation<RemoveAtsInterviewRequest, RemoveAtsInterviewResponse> operation
              = new RemoveAtsInterview.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a job
     * 
     * @return The call builder
     */
    public RemoveAtsJobRequestBuilder removeAtsJob() {
        return new RemoveAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAtsJobResponse removeAtsJob(RemoveAtsJobRequest request) throws Exception {
        RequestOperation<RemoveAtsJobRequest, RemoveAtsJobResponse> operation
              = new RemoveAtsJob.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a scorecard
     * 
     * @return The call builder
     */
    public RemoveAtsScorecardRequestBuilder removeAtsScorecard() {
        return new RemoveAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAtsScorecardResponse removeAtsScorecard(RemoveAtsScorecardRequest request) throws Exception {
        RequestOperation<RemoveAtsScorecardRequest, RemoveAtsScorecardResponse> operation
              = new RemoveAtsScorecard.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an activity
     * 
     * @return The call builder
     */
    public UpdateAtsActivityRequestBuilder updateAtsActivity() {
        return new UpdateAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAtsActivityResponse updateAtsActivity(UpdateAtsActivityRequest request) throws Exception {
        RequestOperation<UpdateAtsActivityRequest, UpdateAtsActivityResponse> operation
              = new UpdateAtsActivity.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an application
     * 
     * @return The call builder
     */
    public UpdateAtsApplicationRequestBuilder updateAtsApplication() {
        return new UpdateAtsApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAtsApplicationResponse updateAtsApplication(UpdateAtsApplicationRequest request) throws Exception {
        RequestOperation<UpdateAtsApplicationRequest, UpdateAtsApplicationResponse> operation
              = new UpdateAtsApplication.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a candidate
     * 
     * @return The call builder
     */
    public UpdateAtsCandidateRequestBuilder updateAtsCandidate() {
        return new UpdateAtsCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a candidate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAtsCandidateResponse updateAtsCandidate(UpdateAtsCandidateRequest request) throws Exception {
        RequestOperation<UpdateAtsCandidateRequest, UpdateAtsCandidateResponse> operation
              = new UpdateAtsCandidate.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a company
     * 
     * @return The call builder
     */
    public UpdateAtsCompanyRequestBuilder updateAtsCompany() {
        return new UpdateAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAtsCompanyResponse updateAtsCompany(UpdateAtsCompanyRequest request) throws Exception {
        RequestOperation<UpdateAtsCompanyRequest, UpdateAtsCompanyResponse> operation
              = new UpdateAtsCompany.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a document
     * 
     * @return The call builder
     */
    public UpdateAtsDocumentRequestBuilder updateAtsDocument() {
        return new UpdateAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAtsDocumentResponse updateAtsDocument(UpdateAtsDocumentRequest request) throws Exception {
        RequestOperation<UpdateAtsDocumentRequest, UpdateAtsDocumentResponse> operation
              = new UpdateAtsDocument.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an interview
     * 
     * @return The call builder
     */
    public UpdateAtsInterviewRequestBuilder updateAtsInterview() {
        return new UpdateAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAtsInterviewResponse updateAtsInterview(UpdateAtsInterviewRequest request) throws Exception {
        RequestOperation<UpdateAtsInterviewRequest, UpdateAtsInterviewResponse> operation
              = new UpdateAtsInterview.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a job
     * 
     * @return The call builder
     */
    public UpdateAtsJobRequestBuilder updateAtsJob() {
        return new UpdateAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAtsJobResponse updateAtsJob(UpdateAtsJobRequest request) throws Exception {
        RequestOperation<UpdateAtsJobRequest, UpdateAtsJobResponse> operation
              = new UpdateAtsJob.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a scorecard
     * 
     * @return The call builder
     */
    public UpdateAtsScorecardRequestBuilder updateAtsScorecard() {
        return new UpdateAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAtsScorecardResponse updateAtsScorecard(UpdateAtsScorecardRequest request) throws Exception {
        RequestOperation<UpdateAtsScorecardRequest, UpdateAtsScorecardResponse> operation
              = new UpdateAtsScorecard.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
