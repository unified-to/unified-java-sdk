/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.GetUnifiedApicallRequest;
import to.unified.unified_java_sdk.models.operations.GetUnifiedConnectionRequest;
import to.unified.unified_java_sdk.models.operations.GetUnifiedIntegrationAuthRequest;
import to.unified.unified_java_sdk.models.operations.GetUnifiedIssueRequest;
import to.unified.unified_java_sdk.models.operations.GetUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.ListUnifiedApicallsRequest;
import to.unified.unified_java_sdk.models.operations.ListUnifiedConnectionsRequest;
import to.unified.unified_java_sdk.models.operations.ListUnifiedIntegrationWorkspacesRequest;
import to.unified.unified_java_sdk.models.operations.ListUnifiedIntegrationsRequest;
import to.unified.unified_java_sdk.models.operations.ListUnifiedIssuesRequest;
import to.unified.unified_java_sdk.models.operations.ListUnifiedWebhooksRequest;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedConnectionRequest;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedWebhookTriggerRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUnifiedConnectionRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedConnectionRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedWebhookTriggerRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedApicallRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedApicallResponse;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedIntegrationAuthRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedIntegrationAuthResponse;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedIssueRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedIssueResponse;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedApicallsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedApicallsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedConnectionsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedConnectionsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedIntegrationWorkspacesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedIntegrationWorkspacesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedIntegrationsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedIntegrationsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedIssuesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedIssuesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedWebhooksRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedWebhooksResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchUnifiedWebhookTriggerRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchUnifiedWebhookTriggerResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateUnifiedWebhookTriggerRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateUnifiedWebhookTriggerResponse;
import to.unified.unified_java_sdk.models.shared.Connection;
import to.unified.unified_java_sdk.operations.CreateUnifiedConnection;
import to.unified.unified_java_sdk.operations.CreateUnifiedWebhook;
import to.unified.unified_java_sdk.operations.GetUnifiedApicall;
import to.unified.unified_java_sdk.operations.GetUnifiedConnection;
import to.unified.unified_java_sdk.operations.GetUnifiedIntegrationAuth;
import to.unified.unified_java_sdk.operations.GetUnifiedIssue;
import to.unified.unified_java_sdk.operations.GetUnifiedWebhook;
import to.unified.unified_java_sdk.operations.ListUnifiedApicalls;
import to.unified.unified_java_sdk.operations.ListUnifiedConnections;
import to.unified.unified_java_sdk.operations.ListUnifiedIntegrationWorkspaces;
import to.unified.unified_java_sdk.operations.ListUnifiedIntegrations;
import to.unified.unified_java_sdk.operations.ListUnifiedIssues;
import to.unified.unified_java_sdk.operations.ListUnifiedWebhooks;
import to.unified.unified_java_sdk.operations.PatchUnifiedConnection;
import to.unified.unified_java_sdk.operations.PatchUnifiedWebhook;
import to.unified.unified_java_sdk.operations.PatchUnifiedWebhookTrigger;
import to.unified.unified_java_sdk.operations.RemoveUnifiedConnection;
import to.unified.unified_java_sdk.operations.RemoveUnifiedWebhook;
import to.unified.unified_java_sdk.operations.UpdateUnifiedConnection;
import to.unified.unified_java_sdk.operations.UpdateUnifiedWebhook;
import to.unified.unified_java_sdk.operations.UpdateUnifiedWebhookTrigger;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncUnified {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Unified syncSDK;

    AsyncUnified(Unified syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Unified sync() {
        return syncSDK;
    }


    /**
     * Create connection
     * 
     * <p>Used only to import existing customer credentials; use "Authorize new connection" instead
     * 
     * @return The async call builder
     */
    public CreateUnifiedConnectionRequestBuilder createUnifiedConnection() {
        return new CreateUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Create connection
     * 
     * <p>Used only to import existing customer credentials; use "Authorize new connection" instead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateUnifiedConnectionResponse>} - The async response
     */
    public CompletableFuture<CreateUnifiedConnectionResponse> createUnifiedConnection(Connection request) {
        AsyncRequestOperation<Connection, CreateUnifiedConnectionResponse> operation
              = new CreateUnifiedConnection.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create webhook subscription
     * 
     * <p>The data payload received by your server is described at https://docs.unified.to/unified/overview.
     * The `interval` field can be set as low as 1 minute for paid accounts, and 60 minutes for free
     * accounts.
     * 
     * @return The async call builder
     */
    public CreateUnifiedWebhookRequestBuilder createUnifiedWebhook() {
        return new CreateUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Create webhook subscription
     * 
     * <p>The data payload received by your server is described at https://docs.unified.to/unified/overview.
     * The `interval` field can be set as low as 1 minute for paid accounts, and 60 minutes for free
     * accounts.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateUnifiedWebhookResponse>} - The async response
     */
    public CompletableFuture<CreateUnifiedWebhookResponse> createUnifiedWebhook(CreateUnifiedWebhookRequest request) {
        AsyncRequestOperation<CreateUnifiedWebhookRequest, CreateUnifiedWebhookResponse> operation
              = new CreateUnifiedWebhook.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve specific API Call by its ID
     * 
     * @return The async call builder
     */
    public GetUnifiedApicallRequestBuilder getUnifiedApicall() {
        return new GetUnifiedApicallRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve specific API Call by its ID
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetUnifiedApicallResponse>} - The async response
     */
    public CompletableFuture<GetUnifiedApicallResponse> getUnifiedApicall(GetUnifiedApicallRequest request) {
        AsyncRequestOperation<GetUnifiedApicallRequest, GetUnifiedApicallResponse> operation
              = new GetUnifiedApicall.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve connection
     * 
     * @return The async call builder
     */
    public GetUnifiedConnectionRequestBuilder getUnifiedConnection() {
        return new GetUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetUnifiedConnectionResponse>} - The async response
     */
    public CompletableFuture<GetUnifiedConnectionResponse> getUnifiedConnection(GetUnifiedConnectionRequest request) {
        AsyncRequestOperation<GetUnifiedConnectionRequest, GetUnifiedConnectionResponse> operation
              = new GetUnifiedConnection.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Authorize new connection
     * 
     * <p>Returns an authorization URL for the specified integration. Once a successful authorization occurs,
     * a new connection is created.
     * 
     * @return The async call builder
     */
    public GetUnifiedIntegrationAuthRequestBuilder getUnifiedIntegrationAuth() {
        return new GetUnifiedIntegrationAuthRequestBuilder(sdkConfiguration);
    }

    /**
     * Authorize new connection
     * 
     * <p>Returns an authorization URL for the specified integration. Once a successful authorization occurs,
     * a new connection is created.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetUnifiedIntegrationAuthResponse>} - The async response
     */
    public CompletableFuture<GetUnifiedIntegrationAuthResponse> getUnifiedIntegrationAuth(GetUnifiedIntegrationAuthRequest request) {
        AsyncRequestOperation<GetUnifiedIntegrationAuthRequest, GetUnifiedIntegrationAuthResponse> operation
              = new GetUnifiedIntegrationAuth.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve support issue
     * 
     * @return The async call builder
     */
    public GetUnifiedIssueRequestBuilder getUnifiedIssue() {
        return new GetUnifiedIssueRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve support issue
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetUnifiedIssueResponse>} - The async response
     */
    public CompletableFuture<GetUnifiedIssueResponse> getUnifiedIssue(GetUnifiedIssueRequest request) {
        AsyncRequestOperation<GetUnifiedIssueRequest, GetUnifiedIssueResponse> operation
              = new GetUnifiedIssue.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve webhook by its ID
     * 
     * @return The async call builder
     */
    public GetUnifiedWebhookRequestBuilder getUnifiedWebhook() {
        return new GetUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve webhook by its ID
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetUnifiedWebhookResponse>} - The async response
     */
    public CompletableFuture<GetUnifiedWebhookResponse> getUnifiedWebhook(GetUnifiedWebhookRequest request) {
        AsyncRequestOperation<GetUnifiedWebhookRequest, GetUnifiedWebhookResponse> operation
              = new GetUnifiedWebhook.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Returns API Calls
     * 
     * @return The async call builder
     */
    public ListUnifiedApicallsRequestBuilder listUnifiedApicalls() {
        return new ListUnifiedApicallsRequestBuilder(sdkConfiguration);
    }

    /**
     * Returns API Calls
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUnifiedApicallsResponse>} - The async response
     */
    public CompletableFuture<ListUnifiedApicallsResponse> listUnifiedApicalls(ListUnifiedApicallsRequest request) {
        AsyncRequestOperation<ListUnifiedApicallsRequest, ListUnifiedApicallsResponse> operation
              = new ListUnifiedApicalls.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all connections
     * 
     * @return The async call builder
     */
    public ListUnifiedConnectionsRequestBuilder listUnifiedConnections() {
        return new ListUnifiedConnectionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all connections
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUnifiedConnectionsResponse>} - The async response
     */
    public CompletableFuture<ListUnifiedConnectionsResponse> listUnifiedConnections(ListUnifiedConnectionsRequest request) {
        AsyncRequestOperation<ListUnifiedConnectionsRequest, ListUnifiedConnectionsResponse> operation
              = new ListUnifiedConnections.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Returns all activated integrations in a workspace
     * 
     * <p>No authentication required as this is to be used by front-end interface
     * 
     * @return The async call builder
     */
    public ListUnifiedIntegrationWorkspacesRequestBuilder listUnifiedIntegrationWorkspaces() {
        return new ListUnifiedIntegrationWorkspacesRequestBuilder(sdkConfiguration);
    }

    /**
     * Returns all activated integrations in a workspace
     * 
     * <p>No authentication required as this is to be used by front-end interface
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUnifiedIntegrationWorkspacesResponse>} - The async response
     */
    public CompletableFuture<ListUnifiedIntegrationWorkspacesResponse> listUnifiedIntegrationWorkspaces(ListUnifiedIntegrationWorkspacesRequest request) {
        AsyncRequestOperation<ListUnifiedIntegrationWorkspacesRequest, ListUnifiedIntegrationWorkspacesResponse> operation
              = new ListUnifiedIntegrationWorkspaces.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Returns all integrations
     * 
     * @return The async call builder
     */
    public ListUnifiedIntegrationsRequestBuilder listUnifiedIntegrations() {
        return new ListUnifiedIntegrationsRequestBuilder(sdkConfiguration);
    }

    /**
     * Returns all integrations
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUnifiedIntegrationsResponse>} - The async response
     */
    public CompletableFuture<ListUnifiedIntegrationsResponse> listUnifiedIntegrations(ListUnifiedIntegrationsRequest request) {
        AsyncRequestOperation<ListUnifiedIntegrationsRequest, ListUnifiedIntegrationsResponse> operation
              = new ListUnifiedIntegrations.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List support issues
     * 
     * @return The async call builder
     */
    public ListUnifiedIssuesRequestBuilder listUnifiedIssues() {
        return new ListUnifiedIssuesRequestBuilder(sdkConfiguration);
    }

    /**
     * List support issues
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUnifiedIssuesResponse>} - The async response
     */
    public CompletableFuture<ListUnifiedIssuesResponse> listUnifiedIssues(ListUnifiedIssuesRequest request) {
        AsyncRequestOperation<ListUnifiedIssuesRequest, ListUnifiedIssuesResponse> operation
              = new ListUnifiedIssues.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Returns all registered webhooks
     * 
     * @return The async call builder
     */
    public ListUnifiedWebhooksRequestBuilder listUnifiedWebhooks() {
        return new ListUnifiedWebhooksRequestBuilder(sdkConfiguration);
    }

    /**
     * Returns all registered webhooks
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUnifiedWebhooksResponse>} - The async response
     */
    public CompletableFuture<ListUnifiedWebhooksResponse> listUnifiedWebhooks(ListUnifiedWebhooksRequest request) {
        AsyncRequestOperation<ListUnifiedWebhooksRequest, ListUnifiedWebhooksResponse> operation
              = new ListUnifiedWebhooks.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update connection
     * 
     * @return The async call builder
     */
    public PatchUnifiedConnectionRequestBuilder patchUnifiedConnection() {
        return new PatchUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchUnifiedConnectionResponse>} - The async response
     */
    public CompletableFuture<PatchUnifiedConnectionResponse> patchUnifiedConnection(PatchUnifiedConnectionRequest request) {
        AsyncRequestOperation<PatchUnifiedConnectionRequest, PatchUnifiedConnectionResponse> operation
              = new PatchUnifiedConnection.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update webhook subscription
     * 
     * @return The async call builder
     */
    public PatchUnifiedWebhookRequestBuilder patchUnifiedWebhook() {
        return new PatchUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Update webhook subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchUnifiedWebhookResponse>} - The async response
     */
    public CompletableFuture<PatchUnifiedWebhookResponse> patchUnifiedWebhook(PatchUnifiedWebhookRequest request) {
        AsyncRequestOperation<PatchUnifiedWebhookRequest, PatchUnifiedWebhookResponse> operation
              = new PatchUnifiedWebhook.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Trigger webhook
     * 
     * @return The async call builder
     */
    public PatchUnifiedWebhookTriggerRequestBuilder patchUnifiedWebhookTrigger() {
        return new PatchUnifiedWebhookTriggerRequestBuilder(sdkConfiguration);
    }

    /**
     * Trigger webhook
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchUnifiedWebhookTriggerResponse>} - The async response
     */
    public CompletableFuture<PatchUnifiedWebhookTriggerResponse> patchUnifiedWebhookTrigger(PatchUnifiedWebhookTriggerRequest request) {
        AsyncRequestOperation<PatchUnifiedWebhookTriggerRequest, PatchUnifiedWebhookTriggerResponse> operation
              = new PatchUnifiedWebhookTrigger.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove connection
     * 
     * @return The async call builder
     */
    public RemoveUnifiedConnectionRequestBuilder removeUnifiedConnection() {
        return new RemoveUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveUnifiedConnectionResponse>} - The async response
     */
    public CompletableFuture<RemoveUnifiedConnectionResponse> removeUnifiedConnection(RemoveUnifiedConnectionRequest request) {
        AsyncRequestOperation<RemoveUnifiedConnectionRequest, RemoveUnifiedConnectionResponse> operation
              = new RemoveUnifiedConnection.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove webhook subscription
     * 
     * @return The async call builder
     */
    public RemoveUnifiedWebhookRequestBuilder removeUnifiedWebhook() {
        return new RemoveUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove webhook subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveUnifiedWebhookResponse>} - The async response
     */
    public CompletableFuture<RemoveUnifiedWebhookResponse> removeUnifiedWebhook(RemoveUnifiedWebhookRequest request) {
        AsyncRequestOperation<RemoveUnifiedWebhookRequest, RemoveUnifiedWebhookResponse> operation
              = new RemoveUnifiedWebhook.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update connection
     * 
     * @return The async call builder
     */
    public UpdateUnifiedConnectionRequestBuilder updateUnifiedConnection() {
        return new UpdateUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateUnifiedConnectionResponse>} - The async response
     */
    public CompletableFuture<UpdateUnifiedConnectionResponse> updateUnifiedConnection(UpdateUnifiedConnectionRequest request) {
        AsyncRequestOperation<UpdateUnifiedConnectionRequest, UpdateUnifiedConnectionResponse> operation
              = new UpdateUnifiedConnection.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update webhook subscription
     * 
     * @return The async call builder
     */
    public UpdateUnifiedWebhookRequestBuilder updateUnifiedWebhook() {
        return new UpdateUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Update webhook subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateUnifiedWebhookResponse>} - The async response
     */
    public CompletableFuture<UpdateUnifiedWebhookResponse> updateUnifiedWebhook(UpdateUnifiedWebhookRequest request) {
        AsyncRequestOperation<UpdateUnifiedWebhookRequest, UpdateUnifiedWebhookResponse> operation
              = new UpdateUnifiedWebhook.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Trigger webhook
     * 
     * @return The async call builder
     */
    public UpdateUnifiedWebhookTriggerRequestBuilder updateUnifiedWebhookTrigger() {
        return new UpdateUnifiedWebhookTriggerRequestBuilder(sdkConfiguration);
    }

    /**
     * Trigger webhook
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateUnifiedWebhookTriggerResponse>} - The async response
     */
    public CompletableFuture<UpdateUnifiedWebhookTriggerResponse> updateUnifiedWebhookTrigger(UpdateUnifiedWebhookTriggerRequest request) {
        AsyncRequestOperation<UpdateUnifiedWebhookTriggerRequest, UpdateUnifiedWebhookTriggerResponse> operation
              = new UpdateUnifiedWebhookTrigger.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
