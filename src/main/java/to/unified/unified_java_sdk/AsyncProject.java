/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.GetTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.ListTaskProjectsRequest;
import to.unified.unified_java_sdk.models.operations.PatchTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.RemoveTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.UpdateTaskProjectRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.async.GetTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.async.ListTaskProjectsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListTaskProjectsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveTaskProjectResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateTaskProjectRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateTaskProjectResponse;
import to.unified.unified_java_sdk.operations.CreateTaskProject;
import to.unified.unified_java_sdk.operations.GetTaskProject;
import to.unified.unified_java_sdk.operations.ListTaskProjects;
import to.unified.unified_java_sdk.operations.PatchTaskProject;
import to.unified.unified_java_sdk.operations.RemoveTaskProject;
import to.unified.unified_java_sdk.operations.UpdateTaskProject;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncProject {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Project syncSDK;

    AsyncProject(Project syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Project sync() {
        return syncSDK;
    }


    /**
     * Create a project
     * 
     * @return The async call builder
     */
    public CreateTaskProjectRequestBuilder createTaskProject() {
        return new CreateTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateTaskProjectResponse>} - The async response
     */
    public CompletableFuture<CreateTaskProjectResponse> createTaskProject(CreateTaskProjectRequest request) {
        AsyncRequestOperation<CreateTaskProjectRequest, CreateTaskProjectResponse> operation
              = new CreateTaskProject.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a project
     * 
     * @return The async call builder
     */
    public GetTaskProjectRequestBuilder getTaskProject() {
        return new GetTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetTaskProjectResponse>} - The async response
     */
    public CompletableFuture<GetTaskProjectResponse> getTaskProject(GetTaskProjectRequest request) {
        AsyncRequestOperation<GetTaskProjectRequest, GetTaskProjectResponse> operation
              = new GetTaskProject.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all projects
     * 
     * @return The async call builder
     */
    public ListTaskProjectsRequestBuilder listTaskProjects() {
        return new ListTaskProjectsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all projects
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListTaskProjectsResponse>} - The async response
     */
    public CompletableFuture<ListTaskProjectsResponse> listTaskProjects(ListTaskProjectsRequest request) {
        AsyncRequestOperation<ListTaskProjectsRequest, ListTaskProjectsResponse> operation
              = new ListTaskProjects.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a project
     * 
     * @return The async call builder
     */
    public PatchTaskProjectRequestBuilder patchTaskProject() {
        return new PatchTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchTaskProjectResponse>} - The async response
     */
    public CompletableFuture<PatchTaskProjectResponse> patchTaskProject(PatchTaskProjectRequest request) {
        AsyncRequestOperation<PatchTaskProjectRequest, PatchTaskProjectResponse> operation
              = new PatchTaskProject.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a project
     * 
     * @return The async call builder
     */
    public RemoveTaskProjectRequestBuilder removeTaskProject() {
        return new RemoveTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveTaskProjectResponse>} - The async response
     */
    public CompletableFuture<RemoveTaskProjectResponse> removeTaskProject(RemoveTaskProjectRequest request) {
        AsyncRequestOperation<RemoveTaskProjectRequest, RemoveTaskProjectResponse> operation
              = new RemoveTaskProject.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a project
     * 
     * @return The async call builder
     */
    public UpdateTaskProjectRequestBuilder updateTaskProject() {
        return new UpdateTaskProjectRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a project
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateTaskProjectResponse>} - The async response
     */
    public CompletableFuture<UpdateTaskProjectResponse> updateTaskProject(UpdateTaskProjectRequest request) {
        AsyncRequestOperation<UpdateTaskProjectRequest, UpdateTaskProjectResponse> operation
              = new UpdateTaskProject.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
