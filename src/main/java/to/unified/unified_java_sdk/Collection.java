/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.CreateCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.GetCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.ListCommerceCollectionsRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceCollectionsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCommerceCollectionsResponse;
import to.unified.unified_java_sdk.models.operations.PatchCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceCollectionResponse;
import to.unified.unified_java_sdk.operations.CreateCommerceCollection;
import to.unified.unified_java_sdk.operations.GetCommerceCollection;
import to.unified.unified_java_sdk.operations.ListCommerceCollections;
import to.unified.unified_java_sdk.operations.PatchCommerceCollection;
import to.unified.unified_java_sdk.operations.RemoveCommerceCollection;
import to.unified.unified_java_sdk.operations.UpdateCommerceCollection;
import to.unified.unified_java_sdk.utils.Headers;


public class Collection {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncCollection asyncSDK;

    Collection(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncCollection(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncCollection async() {
        return asyncSDK;
    }

    /**
     * Create a collection
     * 
     * @return The call builder
     */
    public CreateCommerceCollectionRequestBuilder createCommerceCollection() {
        return new CreateCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCommerceCollectionResponse createCommerceCollection(CreateCommerceCollectionRequest request) throws Exception {
        RequestOperation<CreateCommerceCollectionRequest, CreateCommerceCollectionResponse> operation
              = new CreateCommerceCollection.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a collection
     * 
     * @return The call builder
     */
    public GetCommerceCollectionRequestBuilder getCommerceCollection() {
        return new GetCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCommerceCollectionResponse getCommerceCollection(GetCommerceCollectionRequest request) throws Exception {
        RequestOperation<GetCommerceCollectionRequest, GetCommerceCollectionResponse> operation
              = new GetCommerceCollection.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all collections
     * 
     * @return The call builder
     */
    public ListCommerceCollectionsRequestBuilder listCommerceCollections() {
        return new ListCommerceCollectionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all collections
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCommerceCollectionsResponse listCommerceCollections(ListCommerceCollectionsRequest request) throws Exception {
        RequestOperation<ListCommerceCollectionsRequest, ListCommerceCollectionsResponse> operation
              = new ListCommerceCollections.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a collection
     * 
     * @return The call builder
     */
    public PatchCommerceCollectionRequestBuilder patchCommerceCollection() {
        return new PatchCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCommerceCollectionResponse patchCommerceCollection(PatchCommerceCollectionRequest request) throws Exception {
        RequestOperation<PatchCommerceCollectionRequest, PatchCommerceCollectionResponse> operation
              = new PatchCommerceCollection.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a collection
     * 
     * @return The call builder
     */
    public RemoveCommerceCollectionRequestBuilder removeCommerceCollection() {
        return new RemoveCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCommerceCollectionResponse removeCommerceCollection(RemoveCommerceCollectionRequest request) throws Exception {
        RequestOperation<RemoveCommerceCollectionRequest, RemoveCommerceCollectionResponse> operation
              = new RemoveCommerceCollection.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a collection
     * 
     * @return The call builder
     */
    public UpdateCommerceCollectionRequestBuilder updateCommerceCollection() {
        return new UpdateCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCommerceCollectionResponse updateCommerceCollection(UpdateCommerceCollectionRequest request) throws Exception {
        RequestOperation<UpdateCommerceCollectionRequest, UpdateCommerceCollectionResponse> operation
              = new UpdateCommerceCollection.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
