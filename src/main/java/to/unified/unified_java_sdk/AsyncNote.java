/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateTicketingNoteRequest;
import to.unified.unified_java_sdk.models.operations.GetTicketingNoteRequest;
import to.unified.unified_java_sdk.models.operations.ListTicketingNotesRequest;
import to.unified.unified_java_sdk.models.operations.PatchTicketingNoteRequest;
import to.unified.unified_java_sdk.models.operations.RemoveTicketingNoteRequest;
import to.unified.unified_java_sdk.models.operations.UpdateTicketingNoteRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateTicketingNoteRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateTicketingNoteResponse;
import to.unified.unified_java_sdk.models.operations.async.GetTicketingNoteRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetTicketingNoteResponse;
import to.unified.unified_java_sdk.models.operations.async.ListTicketingNotesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListTicketingNotesResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchTicketingNoteRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchTicketingNoteResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveTicketingNoteRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveTicketingNoteResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateTicketingNoteRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateTicketingNoteResponse;
import to.unified.unified_java_sdk.operations.CreateTicketingNote;
import to.unified.unified_java_sdk.operations.GetTicketingNote;
import to.unified.unified_java_sdk.operations.ListTicketingNotes;
import to.unified.unified_java_sdk.operations.PatchTicketingNote;
import to.unified.unified_java_sdk.operations.RemoveTicketingNote;
import to.unified.unified_java_sdk.operations.UpdateTicketingNote;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncNote {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Note syncSDK;

    AsyncNote(Note syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Note sync() {
        return syncSDK;
    }


    /**
     * Create a note
     * 
     * @return The async call builder
     */
    public CreateTicketingNoteRequestBuilder createTicketingNote() {
        return new CreateTicketingNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateTicketingNoteResponse>} - The async response
     */
    public CompletableFuture<CreateTicketingNoteResponse> createTicketingNote(CreateTicketingNoteRequest request) {
        AsyncRequestOperation<CreateTicketingNoteRequest, CreateTicketingNoteResponse> operation
              = new CreateTicketingNote.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a note
     * 
     * @return The async call builder
     */
    public GetTicketingNoteRequestBuilder getTicketingNote() {
        return new GetTicketingNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetTicketingNoteResponse>} - The async response
     */
    public CompletableFuture<GetTicketingNoteResponse> getTicketingNote(GetTicketingNoteRequest request) {
        AsyncRequestOperation<GetTicketingNoteRequest, GetTicketingNoteResponse> operation
              = new GetTicketingNote.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all notes
     * 
     * @return The async call builder
     */
    public ListTicketingNotesRequestBuilder listTicketingNotes() {
        return new ListTicketingNotesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all notes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListTicketingNotesResponse>} - The async response
     */
    public CompletableFuture<ListTicketingNotesResponse> listTicketingNotes(ListTicketingNotesRequest request) {
        AsyncRequestOperation<ListTicketingNotesRequest, ListTicketingNotesResponse> operation
              = new ListTicketingNotes.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a note
     * 
     * @return The async call builder
     */
    public PatchTicketingNoteRequestBuilder patchTicketingNote() {
        return new PatchTicketingNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchTicketingNoteResponse>} - The async response
     */
    public CompletableFuture<PatchTicketingNoteResponse> patchTicketingNote(PatchTicketingNoteRequest request) {
        AsyncRequestOperation<PatchTicketingNoteRequest, PatchTicketingNoteResponse> operation
              = new PatchTicketingNote.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a note
     * 
     * @return The async call builder
     */
    public RemoveTicketingNoteRequestBuilder removeTicketingNote() {
        return new RemoveTicketingNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveTicketingNoteResponse>} - The async response
     */
    public CompletableFuture<RemoveTicketingNoteResponse> removeTicketingNote(RemoveTicketingNoteRequest request) {
        AsyncRequestOperation<RemoveTicketingNoteRequest, RemoveTicketingNoteResponse> operation
              = new RemoveTicketingNote.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a note
     * 
     * @return The async call builder
     */
    public UpdateTicketingNoteRequestBuilder updateTicketingNote() {
        return new UpdateTicketingNoteRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateTicketingNoteResponse>} - The async response
     */
    public CompletableFuture<UpdateTicketingNoteResponse> updateTicketingNote(UpdateTicketingNoteRequest request) {
        AsyncRequestOperation<UpdateTicketingNoteRequest, UpdateTicketingNoteResponse> operation
              = new UpdateTicketingNote.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
