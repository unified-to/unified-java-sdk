/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import to.unified.unified_java_sdk.models.operations.CreateCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.CreateCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.CreateCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.CreateCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.CreateCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.CreateCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCrmPipelineResponse;
import to.unified.unified_java_sdk.models.operations.GetCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.GetCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.GetCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.GetCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.GetCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.GetCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCrmPipelineResponse;
import to.unified.unified_java_sdk.models.operations.ListCrmCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCrmCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.ListCrmContactsRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmContactsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCrmContactsResponse;
import to.unified.unified_java_sdk.models.operations.ListCrmDealsRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmDealsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCrmDealsResponse;
import to.unified.unified_java_sdk.models.operations.ListCrmEventsRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmEventsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCrmEventsResponse;
import to.unified.unified_java_sdk.models.operations.ListCrmLeadsRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmLeadsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCrmLeadsResponse;
import to.unified.unified_java_sdk.models.operations.ListCrmPipelinesRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmPipelinesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCrmPipelinesResponse;
import to.unified.unified_java_sdk.models.operations.PatchCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.PatchCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.PatchCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.PatchCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.PatchCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.PatchCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCrmPipelineResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCrmPipelineResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCrmCompanyRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCrmCompanyResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCrmContactRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCrmContactResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCrmDealRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmDealRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCrmDealResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCrmLeadRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmLeadRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCrmLeadResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCrmPipelineRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmPipelineRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCrmPipelineResponse;
import to.unified.unified_java_sdk.operations.CreateCrmCompany;
import to.unified.unified_java_sdk.operations.CreateCrmContact;
import to.unified.unified_java_sdk.operations.CreateCrmDeal;
import to.unified.unified_java_sdk.operations.CreateCrmEvent;
import to.unified.unified_java_sdk.operations.CreateCrmLead;
import to.unified.unified_java_sdk.operations.CreateCrmPipeline;
import to.unified.unified_java_sdk.operations.GetCrmCompany;
import to.unified.unified_java_sdk.operations.GetCrmContact;
import to.unified.unified_java_sdk.operations.GetCrmDeal;
import to.unified.unified_java_sdk.operations.GetCrmEvent;
import to.unified.unified_java_sdk.operations.GetCrmLead;
import to.unified.unified_java_sdk.operations.GetCrmPipeline;
import to.unified.unified_java_sdk.operations.ListCrmCompanies;
import to.unified.unified_java_sdk.operations.ListCrmContacts;
import to.unified.unified_java_sdk.operations.ListCrmDeals;
import to.unified.unified_java_sdk.operations.ListCrmEvents;
import to.unified.unified_java_sdk.operations.ListCrmLeads;
import to.unified.unified_java_sdk.operations.ListCrmPipelines;
import to.unified.unified_java_sdk.operations.PatchCrmCompany;
import to.unified.unified_java_sdk.operations.PatchCrmContact;
import to.unified.unified_java_sdk.operations.PatchCrmDeal;
import to.unified.unified_java_sdk.operations.PatchCrmEvent;
import to.unified.unified_java_sdk.operations.PatchCrmLead;
import to.unified.unified_java_sdk.operations.PatchCrmPipeline;
import to.unified.unified_java_sdk.operations.RemoveCrmCompany;
import to.unified.unified_java_sdk.operations.RemoveCrmContact;
import to.unified.unified_java_sdk.operations.RemoveCrmDeal;
import to.unified.unified_java_sdk.operations.RemoveCrmEvent;
import to.unified.unified_java_sdk.operations.RemoveCrmLead;
import to.unified.unified_java_sdk.operations.RemoveCrmPipeline;
import to.unified.unified_java_sdk.operations.UpdateCrmCompany;
import to.unified.unified_java_sdk.operations.UpdateCrmContact;
import to.unified.unified_java_sdk.operations.UpdateCrmDeal;
import to.unified.unified_java_sdk.operations.UpdateCrmEvent;
import to.unified.unified_java_sdk.operations.UpdateCrmLead;
import to.unified.unified_java_sdk.operations.UpdateCrmPipeline;
import to.unified.unified_java_sdk.utils.Headers;


public class Crm {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncCrm asyncSDK;

    Crm(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncCrm(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncCrm async() {
        return asyncSDK;
    }

    /**
     * Create a company
     * 
     * @return The call builder
     */
    public CreateCrmCompanyRequestBuilder createCrmCompany() {
        return new CreateCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateCrmCompanyResponse createCrmCompany(CreateCrmCompanyRequest request) {
        RequestOperation<CreateCrmCompanyRequest, CreateCrmCompanyResponse> operation
              = new CreateCrmCompany.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a contact
     * 
     * @return The call builder
     */
    public CreateCrmContactRequestBuilder createCrmContact() {
        return new CreateCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateCrmContactResponse createCrmContact(CreateCrmContactRequest request) {
        RequestOperation<CreateCrmContactRequest, CreateCrmContactResponse> operation
              = new CreateCrmContact.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a deal
     * 
     * @return The call builder
     */
    public CreateCrmDealRequestBuilder createCrmDeal() {
        return new CreateCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateCrmDealResponse createCrmDeal(CreateCrmDealRequest request) {
        RequestOperation<CreateCrmDealRequest, CreateCrmDealResponse> operation
              = new CreateCrmDeal.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create an event
     * 
     * @return The call builder
     */
    public CreateCrmEventRequestBuilder createCrmEvent() {
        return new CreateCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateCrmEventResponse createCrmEvent(CreateCrmEventRequest request) {
        RequestOperation<CreateCrmEventRequest, CreateCrmEventResponse> operation
              = new CreateCrmEvent.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a lead
     * 
     * @return The call builder
     */
    public CreateCrmLeadRequestBuilder createCrmLead() {
        return new CreateCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateCrmLeadResponse createCrmLead(CreateCrmLeadRequest request) {
        RequestOperation<CreateCrmLeadRequest, CreateCrmLeadResponse> operation
              = new CreateCrmLead.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a pipeline
     * 
     * @return The call builder
     */
    public CreateCrmPipelineRequestBuilder createCrmPipeline() {
        return new CreateCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateCrmPipelineResponse createCrmPipeline(CreateCrmPipelineRequest request) {
        RequestOperation<CreateCrmPipelineRequest, CreateCrmPipelineResponse> operation
              = new CreateCrmPipeline.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a company
     * 
     * @return The call builder
     */
    public GetCrmCompanyRequestBuilder getCrmCompany() {
        return new GetCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetCrmCompanyResponse getCrmCompany(GetCrmCompanyRequest request) {
        RequestOperation<GetCrmCompanyRequest, GetCrmCompanyResponse> operation
              = new GetCrmCompany.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a contact
     * 
     * @return The call builder
     */
    public GetCrmContactRequestBuilder getCrmContact() {
        return new GetCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetCrmContactResponse getCrmContact(GetCrmContactRequest request) {
        RequestOperation<GetCrmContactRequest, GetCrmContactResponse> operation
              = new GetCrmContact.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a deal
     * 
     * @return The call builder
     */
    public GetCrmDealRequestBuilder getCrmDeal() {
        return new GetCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetCrmDealResponse getCrmDeal(GetCrmDealRequest request) {
        RequestOperation<GetCrmDealRequest, GetCrmDealResponse> operation
              = new GetCrmDeal.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an event
     * 
     * @return The call builder
     */
    public GetCrmEventRequestBuilder getCrmEvent() {
        return new GetCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetCrmEventResponse getCrmEvent(GetCrmEventRequest request) {
        RequestOperation<GetCrmEventRequest, GetCrmEventResponse> operation
              = new GetCrmEvent.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a lead
     * 
     * @return The call builder
     */
    public GetCrmLeadRequestBuilder getCrmLead() {
        return new GetCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetCrmLeadResponse getCrmLead(GetCrmLeadRequest request) {
        RequestOperation<GetCrmLeadRequest, GetCrmLeadResponse> operation
              = new GetCrmLead.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a pipeline
     * 
     * @return The call builder
     */
    public GetCrmPipelineRequestBuilder getCrmPipeline() {
        return new GetCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetCrmPipelineResponse getCrmPipeline(GetCrmPipelineRequest request) {
        RequestOperation<GetCrmPipelineRequest, GetCrmPipelineResponse> operation
              = new GetCrmPipeline.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all companies
     * 
     * @return The call builder
     */
    public ListCrmCompaniesRequestBuilder listCrmCompanies() {
        return new ListCrmCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all companies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListCrmCompaniesResponse listCrmCompanies(ListCrmCompaniesRequest request) {
        RequestOperation<ListCrmCompaniesRequest, ListCrmCompaniesResponse> operation
              = new ListCrmCompanies.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all contacts
     * 
     * @return The call builder
     */
    public ListCrmContactsRequestBuilder listCrmContacts() {
        return new ListCrmContactsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all contacts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListCrmContactsResponse listCrmContacts(ListCrmContactsRequest request) {
        RequestOperation<ListCrmContactsRequest, ListCrmContactsResponse> operation
              = new ListCrmContacts.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all deals
     * 
     * @return The call builder
     */
    public ListCrmDealsRequestBuilder listCrmDeals() {
        return new ListCrmDealsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all deals
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListCrmDealsResponse listCrmDeals(ListCrmDealsRequest request) {
        RequestOperation<ListCrmDealsRequest, ListCrmDealsResponse> operation
              = new ListCrmDeals.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all events
     * 
     * @return The call builder
     */
    public ListCrmEventsRequestBuilder listCrmEvents() {
        return new ListCrmEventsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all events
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListCrmEventsResponse listCrmEvents(ListCrmEventsRequest request) {
        RequestOperation<ListCrmEventsRequest, ListCrmEventsResponse> operation
              = new ListCrmEvents.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all leads
     * 
     * @return The call builder
     */
    public ListCrmLeadsRequestBuilder listCrmLeads() {
        return new ListCrmLeadsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all leads
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListCrmLeadsResponse listCrmLeads(ListCrmLeadsRequest request) {
        RequestOperation<ListCrmLeadsRequest, ListCrmLeadsResponse> operation
              = new ListCrmLeads.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all pipelines
     * 
     * @return The call builder
     */
    public ListCrmPipelinesRequestBuilder listCrmPipelines() {
        return new ListCrmPipelinesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all pipelines
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListCrmPipelinesResponse listCrmPipelines(ListCrmPipelinesRequest request) {
        RequestOperation<ListCrmPipelinesRequest, ListCrmPipelinesResponse> operation
              = new ListCrmPipelines.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a company
     * 
     * @return The call builder
     */
    public PatchCrmCompanyRequestBuilder patchCrmCompany() {
        return new PatchCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchCrmCompanyResponse patchCrmCompany(PatchCrmCompanyRequest request) {
        RequestOperation<PatchCrmCompanyRequest, PatchCrmCompanyResponse> operation
              = new PatchCrmCompany.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a contact
     * 
     * @return The call builder
     */
    public PatchCrmContactRequestBuilder patchCrmContact() {
        return new PatchCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchCrmContactResponse patchCrmContact(PatchCrmContactRequest request) {
        RequestOperation<PatchCrmContactRequest, PatchCrmContactResponse> operation
              = new PatchCrmContact.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a deal
     * 
     * @return The call builder
     */
    public PatchCrmDealRequestBuilder patchCrmDeal() {
        return new PatchCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchCrmDealResponse patchCrmDeal(PatchCrmDealRequest request) {
        RequestOperation<PatchCrmDealRequest, PatchCrmDealResponse> operation
              = new PatchCrmDeal.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an event
     * 
     * @return The call builder
     */
    public PatchCrmEventRequestBuilder patchCrmEvent() {
        return new PatchCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchCrmEventResponse patchCrmEvent(PatchCrmEventRequest request) {
        RequestOperation<PatchCrmEventRequest, PatchCrmEventResponse> operation
              = new PatchCrmEvent.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a lead
     * 
     * @return The call builder
     */
    public PatchCrmLeadRequestBuilder patchCrmLead() {
        return new PatchCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchCrmLeadResponse patchCrmLead(PatchCrmLeadRequest request) {
        RequestOperation<PatchCrmLeadRequest, PatchCrmLeadResponse> operation
              = new PatchCrmLead.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a pipeline
     * 
     * @return The call builder
     */
    public PatchCrmPipelineRequestBuilder patchCrmPipeline() {
        return new PatchCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchCrmPipelineResponse patchCrmPipeline(PatchCrmPipelineRequest request) {
        RequestOperation<PatchCrmPipelineRequest, PatchCrmPipelineResponse> operation
              = new PatchCrmPipeline.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a company
     * 
     * @return The call builder
     */
    public RemoveCrmCompanyRequestBuilder removeCrmCompany() {
        return new RemoveCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveCrmCompanyResponse removeCrmCompany(RemoveCrmCompanyRequest request) {
        RequestOperation<RemoveCrmCompanyRequest, RemoveCrmCompanyResponse> operation
              = new RemoveCrmCompany.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a contact
     * 
     * @return The call builder
     */
    public RemoveCrmContactRequestBuilder removeCrmContact() {
        return new RemoveCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveCrmContactResponse removeCrmContact(RemoveCrmContactRequest request) {
        RequestOperation<RemoveCrmContactRequest, RemoveCrmContactResponse> operation
              = new RemoveCrmContact.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a deal
     * 
     * @return The call builder
     */
    public RemoveCrmDealRequestBuilder removeCrmDeal() {
        return new RemoveCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveCrmDealResponse removeCrmDeal(RemoveCrmDealRequest request) {
        RequestOperation<RemoveCrmDealRequest, RemoveCrmDealResponse> operation
              = new RemoveCrmDeal.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an event
     * 
     * @return The call builder
     */
    public RemoveCrmEventRequestBuilder removeCrmEvent() {
        return new RemoveCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveCrmEventResponse removeCrmEvent(RemoveCrmEventRequest request) {
        RequestOperation<RemoveCrmEventRequest, RemoveCrmEventResponse> operation
              = new RemoveCrmEvent.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a lead
     * 
     * @return The call builder
     */
    public RemoveCrmLeadRequestBuilder removeCrmLead() {
        return new RemoveCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveCrmLeadResponse removeCrmLead(RemoveCrmLeadRequest request) {
        RequestOperation<RemoveCrmLeadRequest, RemoveCrmLeadResponse> operation
              = new RemoveCrmLead.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a pipeline
     * 
     * @return The call builder
     */
    public RemoveCrmPipelineRequestBuilder removeCrmPipeline() {
        return new RemoveCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveCrmPipelineResponse removeCrmPipeline(RemoveCrmPipelineRequest request) {
        RequestOperation<RemoveCrmPipelineRequest, RemoveCrmPipelineResponse> operation
              = new RemoveCrmPipeline.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a company
     * 
     * @return The call builder
     */
    public UpdateCrmCompanyRequestBuilder updateCrmCompany() {
        return new UpdateCrmCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateCrmCompanyResponse updateCrmCompany(UpdateCrmCompanyRequest request) {
        RequestOperation<UpdateCrmCompanyRequest, UpdateCrmCompanyResponse> operation
              = new UpdateCrmCompany.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a contact
     * 
     * @return The call builder
     */
    public UpdateCrmContactRequestBuilder updateCrmContact() {
        return new UpdateCrmContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateCrmContactResponse updateCrmContact(UpdateCrmContactRequest request) {
        RequestOperation<UpdateCrmContactRequest, UpdateCrmContactResponse> operation
              = new UpdateCrmContact.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a deal
     * 
     * @return The call builder
     */
    public UpdateCrmDealRequestBuilder updateCrmDeal() {
        return new UpdateCrmDealRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a deal
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateCrmDealResponse updateCrmDeal(UpdateCrmDealRequest request) {
        RequestOperation<UpdateCrmDealRequest, UpdateCrmDealResponse> operation
              = new UpdateCrmDeal.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an event
     * 
     * @return The call builder
     */
    public UpdateCrmEventRequestBuilder updateCrmEvent() {
        return new UpdateCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateCrmEventResponse updateCrmEvent(UpdateCrmEventRequest request) {
        RequestOperation<UpdateCrmEventRequest, UpdateCrmEventResponse> operation
              = new UpdateCrmEvent.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a lead
     * 
     * @return The call builder
     */
    public UpdateCrmLeadRequestBuilder updateCrmLead() {
        return new UpdateCrmLeadRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a lead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateCrmLeadResponse updateCrmLead(UpdateCrmLeadRequest request) {
        RequestOperation<UpdateCrmLeadRequest, UpdateCrmLeadResponse> operation
              = new UpdateCrmLead.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a pipeline
     * 
     * @return The call builder
     */
    public UpdateCrmPipelineRequestBuilder updateCrmPipeline() {
        return new UpdateCrmPipelineRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a pipeline
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateCrmPipelineResponse updateCrmPipeline(UpdateCrmPipelineRequest request) {
        RequestOperation<UpdateCrmPipelineRequest, UpdateCrmPipelineResponse> operation
              = new UpdateCrmPipeline.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
