/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.GetAccountingBalancesheetRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingBalancesheetsRequest;
import to.unified.unified_java_sdk.models.operations.async.GetAccountingBalancesheetRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAccountingBalancesheetResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAccountingBalancesheetsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAccountingBalancesheetsResponse;
import to.unified.unified_java_sdk.operations.GetAccountingBalancesheet;
import to.unified.unified_java_sdk.operations.ListAccountingBalancesheets;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncBalancesheet {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Balancesheet syncSDK;

    AsyncBalancesheet(Balancesheet syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Balancesheet sync() {
        return syncSDK;
    }


    /**
     * Retrieve a balancesheet
     * 
     * @return The async call builder
     */
    public GetAccountingBalancesheetRequestBuilder getAccountingBalancesheet() {
        return new GetAccountingBalancesheetRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a balancesheet
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetAccountingBalancesheetResponse>} - The async response
     */
    public CompletableFuture<GetAccountingBalancesheetResponse> getAccountingBalancesheet(GetAccountingBalancesheetRequest request) {
        AsyncRequestOperation<GetAccountingBalancesheetRequest, GetAccountingBalancesheetResponse> operation
              = new GetAccountingBalancesheet.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all balancesheets
     * 
     * @return The async call builder
     */
    public ListAccountingBalancesheetsRequestBuilder listAccountingBalancesheets() {
        return new ListAccountingBalancesheetsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all balancesheets
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAccountingBalancesheetsResponse>} - The async response
     */
    public CompletableFuture<ListAccountingBalancesheetsResponse> listAccountingBalancesheets(ListAccountingBalancesheetsRequest request) {
        AsyncRequestOperation<ListAccountingBalancesheetsRequest, ListAccountingBalancesheetsResponse> operation
              = new ListAccountingBalancesheets.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
