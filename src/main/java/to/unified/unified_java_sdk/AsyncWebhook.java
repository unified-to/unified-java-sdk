/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.GetUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.ListUnifiedWebhooksRequest;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedWebhookTriggerRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedWebhookTriggerRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedWebhooksRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUnifiedWebhooksResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchUnifiedWebhookTriggerRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchUnifiedWebhookTriggerResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateUnifiedWebhookTriggerRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateUnifiedWebhookTriggerResponse;
import to.unified.unified_java_sdk.operations.CreateUnifiedWebhook;
import to.unified.unified_java_sdk.operations.GetUnifiedWebhook;
import to.unified.unified_java_sdk.operations.ListUnifiedWebhooks;
import to.unified.unified_java_sdk.operations.PatchUnifiedWebhook;
import to.unified.unified_java_sdk.operations.PatchUnifiedWebhookTrigger;
import to.unified.unified_java_sdk.operations.RemoveUnifiedWebhook;
import to.unified.unified_java_sdk.operations.UpdateUnifiedWebhook;
import to.unified.unified_java_sdk.operations.UpdateUnifiedWebhookTrigger;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncWebhook {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Webhook syncSDK;

    AsyncWebhook(Webhook syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Webhook sync() {
        return syncSDK;
    }


    /**
     * Create webhook subscription
     * 
     * <p>The data payload received by your server is described at https://docs.unified.to/unified/overview.
     * The `interval` field can be set as low as 1 minute for paid accounts, and 60 minutes for free
     * accounts.
     * 
     * @return The async call builder
     */
    public CreateUnifiedWebhookRequestBuilder createUnifiedWebhook() {
        return new CreateUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Create webhook subscription
     * 
     * <p>The data payload received by your server is described at https://docs.unified.to/unified/overview.
     * The `interval` field can be set as low as 1 minute for paid accounts, and 60 minutes for free
     * accounts.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateUnifiedWebhookResponse>} - The async response
     */
    public CompletableFuture<CreateUnifiedWebhookResponse> createUnifiedWebhook(CreateUnifiedWebhookRequest request) {
        AsyncRequestOperation<CreateUnifiedWebhookRequest, CreateUnifiedWebhookResponse> operation
              = new CreateUnifiedWebhook.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve webhook by its ID
     * 
     * @return The async call builder
     */
    public GetUnifiedWebhookRequestBuilder getUnifiedWebhook() {
        return new GetUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve webhook by its ID
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetUnifiedWebhookResponse>} - The async response
     */
    public CompletableFuture<GetUnifiedWebhookResponse> getUnifiedWebhook(GetUnifiedWebhookRequest request) {
        AsyncRequestOperation<GetUnifiedWebhookRequest, GetUnifiedWebhookResponse> operation
              = new GetUnifiedWebhook.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Returns all registered webhooks
     * 
     * @return The async call builder
     */
    public ListUnifiedWebhooksRequestBuilder listUnifiedWebhooks() {
        return new ListUnifiedWebhooksRequestBuilder(sdkConfiguration);
    }

    /**
     * Returns all registered webhooks
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUnifiedWebhooksResponse>} - The async response
     */
    public CompletableFuture<ListUnifiedWebhooksResponse> listUnifiedWebhooks(ListUnifiedWebhooksRequest request) {
        AsyncRequestOperation<ListUnifiedWebhooksRequest, ListUnifiedWebhooksResponse> operation
              = new ListUnifiedWebhooks.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update webhook subscription
     * 
     * @return The async call builder
     */
    public PatchUnifiedWebhookRequestBuilder patchUnifiedWebhook() {
        return new PatchUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Update webhook subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchUnifiedWebhookResponse>} - The async response
     */
    public CompletableFuture<PatchUnifiedWebhookResponse> patchUnifiedWebhook(PatchUnifiedWebhookRequest request) {
        AsyncRequestOperation<PatchUnifiedWebhookRequest, PatchUnifiedWebhookResponse> operation
              = new PatchUnifiedWebhook.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Trigger webhook
     * 
     * @return The async call builder
     */
    public PatchUnifiedWebhookTriggerRequestBuilder patchUnifiedWebhookTrigger() {
        return new PatchUnifiedWebhookTriggerRequestBuilder(sdkConfiguration);
    }

    /**
     * Trigger webhook
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchUnifiedWebhookTriggerResponse>} - The async response
     */
    public CompletableFuture<PatchUnifiedWebhookTriggerResponse> patchUnifiedWebhookTrigger(PatchUnifiedWebhookTriggerRequest request) {
        AsyncRequestOperation<PatchUnifiedWebhookTriggerRequest, PatchUnifiedWebhookTriggerResponse> operation
              = new PatchUnifiedWebhookTrigger.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove webhook subscription
     * 
     * @return The async call builder
     */
    public RemoveUnifiedWebhookRequestBuilder removeUnifiedWebhook() {
        return new RemoveUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove webhook subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveUnifiedWebhookResponse>} - The async response
     */
    public CompletableFuture<RemoveUnifiedWebhookResponse> removeUnifiedWebhook(RemoveUnifiedWebhookRequest request) {
        AsyncRequestOperation<RemoveUnifiedWebhookRequest, RemoveUnifiedWebhookResponse> operation
              = new RemoveUnifiedWebhook.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update webhook subscription
     * 
     * @return The async call builder
     */
    public UpdateUnifiedWebhookRequestBuilder updateUnifiedWebhook() {
        return new UpdateUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Update webhook subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateUnifiedWebhookResponse>} - The async response
     */
    public CompletableFuture<UpdateUnifiedWebhookResponse> updateUnifiedWebhook(UpdateUnifiedWebhookRequest request) {
        AsyncRequestOperation<UpdateUnifiedWebhookRequest, UpdateUnifiedWebhookResponse> operation
              = new UpdateUnifiedWebhook.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Trigger webhook
     * 
     * @return The async call builder
     */
    public UpdateUnifiedWebhookTriggerRequestBuilder updateUnifiedWebhookTrigger() {
        return new UpdateUnifiedWebhookTriggerRequestBuilder(sdkConfiguration);
    }

    /**
     * Trigger webhook
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateUnifiedWebhookTriggerResponse>} - The async response
     */
    public CompletableFuture<UpdateUnifiedWebhookTriggerResponse> updateUnifiedWebhookTrigger(UpdateUnifiedWebhookTriggerRequest request) {
        AsyncRequestOperation<UpdateUnifiedWebhookTriggerRequest, UpdateUnifiedWebhookTriggerResponse> operation
              = new UpdateUnifiedWebhookTrigger.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
