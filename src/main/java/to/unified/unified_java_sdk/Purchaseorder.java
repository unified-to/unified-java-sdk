/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import java.util.List;
import java.util.Optional;
import to.unified.unified_java_sdk.models.operations.CreateAccountingPurchaseorderRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingPurchaseorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingPurchaseorderResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingPurchaseorderRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingPurchaseorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingPurchaseorderResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingPurchaseordersRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingPurchaseordersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingPurchaseordersResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingPurchaseorderRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingPurchaseorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingPurchaseorderResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingPurchaseorderRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingPurchaseorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingPurchaseorderResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingPurchaseorderRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingPurchaseorderRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingPurchaseorderResponse;
import to.unified.unified_java_sdk.operations.CreateAccountingPurchaseorderOperation;
import to.unified.unified_java_sdk.operations.GetAccountingPurchaseorderOperation;
import to.unified.unified_java_sdk.operations.ListAccountingPurchaseordersOperation;
import to.unified.unified_java_sdk.operations.PatchAccountingPurchaseorderOperation;
import to.unified.unified_java_sdk.operations.RemoveAccountingPurchaseorderOperation;
import to.unified.unified_java_sdk.operations.UpdateAccountingPurchaseorderOperation;


public class Purchaseorder {
    private final SDKConfiguration sdkConfiguration;

    Purchaseorder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * Create a purchaseorder
     * 
     * @return The call builder
     */
    public CreateAccountingPurchaseorderRequestBuilder createAccountingPurchaseorder() {
        return new CreateAccountingPurchaseorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a purchaseorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingPurchaseorderResponse createAccountingPurchaseorder(CreateAccountingPurchaseorderRequest request) throws Exception {
        RequestOperation<CreateAccountingPurchaseorderRequest, CreateAccountingPurchaseorderResponse> operation
              = new CreateAccountingPurchaseorderOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a purchaseorder
     * 
     * @return The call builder
     */
    public GetAccountingPurchaseorderRequestBuilder getAccountingPurchaseorder() {
        return new GetAccountingPurchaseorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a purchaseorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingPurchaseorderResponse getAccountingPurchaseorder(GetAccountingPurchaseorderRequest request) throws Exception {
        RequestOperation<GetAccountingPurchaseorderRequest, GetAccountingPurchaseorderResponse> operation
              = new GetAccountingPurchaseorderOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all purchaseorders
     * 
     * @return The call builder
     */
    public ListAccountingPurchaseordersRequestBuilder listAccountingPurchaseorders() {
        return new ListAccountingPurchaseordersRequestBuilder(sdkConfiguration);
    }

    /**
     * List all purchaseorders
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingPurchaseordersResponse listAccountingPurchaseorders(ListAccountingPurchaseordersRequest request) throws Exception {
        RequestOperation<ListAccountingPurchaseordersRequest, ListAccountingPurchaseordersResponse> operation
              = new ListAccountingPurchaseordersOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a purchaseorder
     * 
     * @return The call builder
     */
    public PatchAccountingPurchaseorderRequestBuilder patchAccountingPurchaseorder() {
        return new PatchAccountingPurchaseorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a purchaseorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingPurchaseorderResponse patchAccountingPurchaseorder(PatchAccountingPurchaseorderRequest request) throws Exception {
        RequestOperation<PatchAccountingPurchaseorderRequest, PatchAccountingPurchaseorderResponse> operation
              = new PatchAccountingPurchaseorderOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a purchaseorder
     * 
     * @return The call builder
     */
    public RemoveAccountingPurchaseorderRequestBuilder removeAccountingPurchaseorder() {
        return new RemoveAccountingPurchaseorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a purchaseorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingPurchaseorderResponse removeAccountingPurchaseorder(RemoveAccountingPurchaseorderRequest request) throws Exception {
        RequestOperation<RemoveAccountingPurchaseorderRequest, RemoveAccountingPurchaseorderResponse> operation
              = new RemoveAccountingPurchaseorderOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a purchaseorder
     * 
     * @return The call builder
     */
    public UpdateAccountingPurchaseorderRequestBuilder updateAccountingPurchaseorder() {
        return new UpdateAccountingPurchaseorderRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a purchaseorder
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingPurchaseorderResponse updateAccountingPurchaseorder(UpdateAccountingPurchaseorderRequest request) throws Exception {
        RequestOperation<UpdateAccountingPurchaseorderRequest, UpdateAccountingPurchaseorderResponse> operation
              = new UpdateAccountingPurchaseorderOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
