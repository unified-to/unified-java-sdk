/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingTaxratesRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingTaxrateRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAccountingTaxratesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAccountingTaxratesResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAccountingTaxrateResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAccountingTaxrateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAccountingTaxrateResponse;
import to.unified.unified_java_sdk.operations.CreateAccountingTaxrate;
import to.unified.unified_java_sdk.operations.GetAccountingTaxrate;
import to.unified.unified_java_sdk.operations.ListAccountingTaxrates;
import to.unified.unified_java_sdk.operations.PatchAccountingTaxrate;
import to.unified.unified_java_sdk.operations.RemoveAccountingTaxrate;
import to.unified.unified_java_sdk.operations.UpdateAccountingTaxrate;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncTaxrate {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Taxrate syncSDK;

    AsyncTaxrate(Taxrate syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Taxrate sync() {
        return syncSDK;
    }


    /**
     * Create a taxrate
     * 
     * @return The async call builder
     */
    public CreateAccountingTaxrateRequestBuilder createAccountingTaxrate() {
        return new CreateAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateAccountingTaxrateResponse&gt; - The async response
     */
    public CompletableFuture<CreateAccountingTaxrateResponse> createAccountingTaxrate(CreateAccountingTaxrateRequest request) {
        AsyncRequestOperation<CreateAccountingTaxrateRequest, CreateAccountingTaxrateResponse> operation
              = new CreateAccountingTaxrate.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a taxrate
     * 
     * @return The async call builder
     */
    public GetAccountingTaxrateRequestBuilder getAccountingTaxrate() {
        return new GetAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetAccountingTaxrateResponse&gt; - The async response
     */
    public CompletableFuture<GetAccountingTaxrateResponse> getAccountingTaxrate(GetAccountingTaxrateRequest request) {
        AsyncRequestOperation<GetAccountingTaxrateRequest, GetAccountingTaxrateResponse> operation
              = new GetAccountingTaxrate.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all taxrates
     * 
     * @return The async call builder
     */
    public ListAccountingTaxratesRequestBuilder listAccountingTaxrates() {
        return new ListAccountingTaxratesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all taxrates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListAccountingTaxratesResponse&gt; - The async response
     */
    public CompletableFuture<ListAccountingTaxratesResponse> listAccountingTaxrates(ListAccountingTaxratesRequest request) {
        AsyncRequestOperation<ListAccountingTaxratesRequest, ListAccountingTaxratesResponse> operation
              = new ListAccountingTaxrates.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a taxrate
     * 
     * @return The async call builder
     */
    public PatchAccountingTaxrateRequestBuilder patchAccountingTaxrate() {
        return new PatchAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchAccountingTaxrateResponse&gt; - The async response
     */
    public CompletableFuture<PatchAccountingTaxrateResponse> patchAccountingTaxrate(PatchAccountingTaxrateRequest request) {
        AsyncRequestOperation<PatchAccountingTaxrateRequest, PatchAccountingTaxrateResponse> operation
              = new PatchAccountingTaxrate.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a taxrate
     * 
     * @return The async call builder
     */
    public RemoveAccountingTaxrateRequestBuilder removeAccountingTaxrate() {
        return new RemoveAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveAccountingTaxrateResponse&gt; - The async response
     */
    public CompletableFuture<RemoveAccountingTaxrateResponse> removeAccountingTaxrate(RemoveAccountingTaxrateRequest request) {
        AsyncRequestOperation<RemoveAccountingTaxrateRequest, RemoveAccountingTaxrateResponse> operation
              = new RemoveAccountingTaxrate.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a taxrate
     * 
     * @return The async call builder
     */
    public UpdateAccountingTaxrateRequestBuilder updateAccountingTaxrate() {
        return new UpdateAccountingTaxrateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a taxrate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateAccountingTaxrateResponse&gt; - The async response
     */
    public CompletableFuture<UpdateAccountingTaxrateResponse> updateAccountingTaxrate(UpdateAccountingTaxrateRequest request) {
        AsyncRequestOperation<UpdateAccountingTaxrateRequest, UpdateAccountingTaxrateResponse> operation
              = new UpdateAccountingTaxrate.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
