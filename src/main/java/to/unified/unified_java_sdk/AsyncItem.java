/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceItemsRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceItemsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListCommerceItemsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateCommerceItemResponse;
import to.unified.unified_java_sdk.operations.CreateCommerceItem;
import to.unified.unified_java_sdk.operations.GetCommerceItem;
import to.unified.unified_java_sdk.operations.ListCommerceItems;
import to.unified.unified_java_sdk.operations.PatchCommerceItem;
import to.unified.unified_java_sdk.operations.RemoveCommerceItem;
import to.unified.unified_java_sdk.operations.UpdateCommerceItem;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncItem {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Item syncSDK;

    AsyncItem(Item syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Item sync() {
        return syncSDK;
    }


    /**
     * Create an item
     * 
     * @return The async call builder
     */
    public CreateCommerceItemRequestBuilder createCommerceItem() {
        return new CreateCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateCommerceItemResponse&gt; - The async response
     */
    public CompletableFuture<CreateCommerceItemResponse> createCommerceItem(CreateCommerceItemRequest request) {
        AsyncRequestOperation<CreateCommerceItemRequest, CreateCommerceItemResponse> operation
              = new CreateCommerceItem.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an item
     * 
     * @return The async call builder
     */
    public GetCommerceItemRequestBuilder getCommerceItem() {
        return new GetCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetCommerceItemResponse&gt; - The async response
     */
    public CompletableFuture<GetCommerceItemResponse> getCommerceItem(GetCommerceItemRequest request) {
        AsyncRequestOperation<GetCommerceItemRequest, GetCommerceItemResponse> operation
              = new GetCommerceItem.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all items
     * 
     * @return The async call builder
     */
    public ListCommerceItemsRequestBuilder listCommerceItems() {
        return new ListCommerceItemsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all items
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListCommerceItemsResponse&gt; - The async response
     */
    public CompletableFuture<ListCommerceItemsResponse> listCommerceItems(ListCommerceItemsRequest request) {
        AsyncRequestOperation<ListCommerceItemsRequest, ListCommerceItemsResponse> operation
              = new ListCommerceItems.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an item
     * 
     * @return The async call builder
     */
    public PatchCommerceItemRequestBuilder patchCommerceItem() {
        return new PatchCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchCommerceItemResponse&gt; - The async response
     */
    public CompletableFuture<PatchCommerceItemResponse> patchCommerceItem(PatchCommerceItemRequest request) {
        AsyncRequestOperation<PatchCommerceItemRequest, PatchCommerceItemResponse> operation
              = new PatchCommerceItem.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an item
     * 
     * @return The async call builder
     */
    public RemoveCommerceItemRequestBuilder removeCommerceItem() {
        return new RemoveCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveCommerceItemResponse&gt; - The async response
     */
    public CompletableFuture<RemoveCommerceItemResponse> removeCommerceItem(RemoveCommerceItemRequest request) {
        AsyncRequestOperation<RemoveCommerceItemRequest, RemoveCommerceItemResponse> operation
              = new RemoveCommerceItem.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an item
     * 
     * @return The async call builder
     */
    public UpdateCommerceItemRequestBuilder updateCommerceItem() {
        return new UpdateCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateCommerceItemResponse&gt; - The async response
     */
    public CompletableFuture<UpdateCommerceItemResponse> updateCommerceItem(UpdateCommerceItemRequest request) {
        AsyncRequestOperation<UpdateCommerceItemRequest, UpdateCommerceItemResponse> operation
              = new UpdateCommerceItem.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
