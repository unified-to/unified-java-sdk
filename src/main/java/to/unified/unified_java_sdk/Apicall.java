/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import to.unified.unified_java_sdk.models.operations.GetUnifiedApicallRequest;
import to.unified.unified_java_sdk.models.operations.GetUnifiedApicallRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetUnifiedApicallResponse;
import to.unified.unified_java_sdk.models.operations.ListUnifiedApicallsRequest;
import to.unified.unified_java_sdk.models.operations.ListUnifiedApicallsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListUnifiedApicallsResponse;
import to.unified.unified_java_sdk.operations.GetUnifiedApicall;
import to.unified.unified_java_sdk.operations.ListUnifiedApicalls;
import to.unified.unified_java_sdk.utils.Headers;


public class Apicall {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncApicall asyncSDK;

    Apicall(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncApicall(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncApicall async() {
        return asyncSDK;
    }

    /**
     * Retrieve specific API Call by its ID
     * 
     * @return The call builder
     */
    public GetUnifiedApicallRequestBuilder getUnifiedApicall() {
        return new GetUnifiedApicallRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve specific API Call by its ID
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetUnifiedApicallResponse getUnifiedApicall(GetUnifiedApicallRequest request) {
        RequestOperation<GetUnifiedApicallRequest, GetUnifiedApicallResponse> operation
              = new GetUnifiedApicall.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Returns API Calls
     * 
     * @return The call builder
     */
    public ListUnifiedApicallsRequestBuilder listUnifiedApicalls() {
        return new ListUnifiedApicallsRequestBuilder(sdkConfiguration);
    }

    /**
     * Returns API Calls
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListUnifiedApicallsResponse listUnifiedApicalls(ListUnifiedApicallsRequest request) {
        RequestOperation<ListUnifiedApicallsRequest, ListUnifiedApicallsResponse> operation
              = new ListUnifiedApicalls.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
