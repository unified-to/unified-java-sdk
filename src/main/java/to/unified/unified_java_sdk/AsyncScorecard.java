/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsScorecardsRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsScorecardResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsScorecardResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsScorecardsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsScorecardsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsScorecardResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsScorecardResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsScorecardResponse;
import to.unified.unified_java_sdk.operations.CreateAtsScorecard;
import to.unified.unified_java_sdk.operations.GetAtsScorecard;
import to.unified.unified_java_sdk.operations.ListAtsScorecards;
import to.unified.unified_java_sdk.operations.PatchAtsScorecard;
import to.unified.unified_java_sdk.operations.RemoveAtsScorecard;
import to.unified.unified_java_sdk.operations.UpdateAtsScorecard;


public class AsyncScorecard {
    private final SDKConfiguration sdkConfiguration;
    private final Scorecard syncSDK;

    AsyncScorecard(Scorecard syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Scorecard sync() {
        return syncSDK;
    }


    /**
     * Create a scorecard
     * 
     * @return The async call builder
     */
    public CreateAtsScorecardRequestBuilder createAtsScorecard() {
        return new CreateAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateAtsScorecardResponse&gt; - The async response
     */
    public CompletableFuture<CreateAtsScorecardResponse> createAtsScorecard(CreateAtsScorecardRequest request) {
        AsyncRequestOperation<CreateAtsScorecardRequest, CreateAtsScorecardResponse> operation
              = new CreateAtsScorecard.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a scorecard
     * 
     * @return The async call builder
     */
    public GetAtsScorecardRequestBuilder getAtsScorecard() {
        return new GetAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetAtsScorecardResponse&gt; - The async response
     */
    public CompletableFuture<GetAtsScorecardResponse> getAtsScorecard(GetAtsScorecardRequest request) {
        AsyncRequestOperation<GetAtsScorecardRequest, GetAtsScorecardResponse> operation
              = new GetAtsScorecard.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all scorecards
     * 
     * @return The async call builder
     */
    public ListAtsScorecardsRequestBuilder listAtsScorecards() {
        return new ListAtsScorecardsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all scorecards
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListAtsScorecardsResponse&gt; - The async response
     */
    public CompletableFuture<ListAtsScorecardsResponse> listAtsScorecards(ListAtsScorecardsRequest request) {
        AsyncRequestOperation<ListAtsScorecardsRequest, ListAtsScorecardsResponse> operation
              = new ListAtsScorecards.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a scorecard
     * 
     * @return The async call builder
     */
    public PatchAtsScorecardRequestBuilder patchAtsScorecard() {
        return new PatchAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchAtsScorecardResponse&gt; - The async response
     */
    public CompletableFuture<PatchAtsScorecardResponse> patchAtsScorecard(PatchAtsScorecardRequest request) {
        AsyncRequestOperation<PatchAtsScorecardRequest, PatchAtsScorecardResponse> operation
              = new PatchAtsScorecard.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a scorecard
     * 
     * @return The async call builder
     */
    public RemoveAtsScorecardRequestBuilder removeAtsScorecard() {
        return new RemoveAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveAtsScorecardResponse&gt; - The async response
     */
    public CompletableFuture<RemoveAtsScorecardResponse> removeAtsScorecard(RemoveAtsScorecardRequest request) {
        AsyncRequestOperation<RemoveAtsScorecardRequest, RemoveAtsScorecardResponse> operation
              = new RemoveAtsScorecard.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a scorecard
     * 
     * @return The async call builder
     */
    public UpdateAtsScorecardRequestBuilder updateAtsScorecard() {
        return new UpdateAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateAtsScorecardResponse&gt; - The async response
     */
    public CompletableFuture<UpdateAtsScorecardResponse> updateAtsScorecard(UpdateAtsScorecardRequest request) {
        AsyncRequestOperation<UpdateAtsScorecardRequest, UpdateAtsScorecardResponse> operation
              = new UpdateAtsScorecard.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
