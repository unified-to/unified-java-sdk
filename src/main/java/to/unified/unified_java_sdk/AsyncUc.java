/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.CreateUcContactRequest;
import to.unified.unified_java_sdk.models.operations.CreateUcRecordingRequest;
import to.unified.unified_java_sdk.models.operations.GetUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.GetUcContactRequest;
import to.unified.unified_java_sdk.models.operations.GetUcRecordingRequest;
import to.unified.unified_java_sdk.models.operations.ListUcCallsRequest;
import to.unified.unified_java_sdk.models.operations.ListUcCommentsRequest;
import to.unified.unified_java_sdk.models.operations.ListUcContactsRequest;
import to.unified.unified_java_sdk.models.operations.ListUcRecordingsRequest;
import to.unified.unified_java_sdk.models.operations.PatchUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.PatchUcContactRequest;
import to.unified.unified_java_sdk.models.operations.PatchUcRecordingRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUcContactRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUcRecordingRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUcContactRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUcRecordingRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateUcContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateUcContactResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateUcRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateUcRecordingResponse;
import to.unified.unified_java_sdk.models.operations.async.GetUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.GetUcContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUcContactResponse;
import to.unified.unified_java_sdk.models.operations.async.GetUcRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUcRecordingResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUcCallsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUcCallsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUcCommentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUcCommentsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUcContactsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUcContactsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUcRecordingsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUcRecordingsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchUcContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchUcContactResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchUcRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchUcRecordingResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveUcContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveUcContactResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveUcRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveUcRecordingResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateUcContactRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateUcContactResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateUcRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateUcRecordingResponse;
import to.unified.unified_java_sdk.operations.CreateUcComment;
import to.unified.unified_java_sdk.operations.CreateUcContact;
import to.unified.unified_java_sdk.operations.CreateUcRecording;
import to.unified.unified_java_sdk.operations.GetUcComment;
import to.unified.unified_java_sdk.operations.GetUcContact;
import to.unified.unified_java_sdk.operations.GetUcRecording;
import to.unified.unified_java_sdk.operations.ListUcCalls;
import to.unified.unified_java_sdk.operations.ListUcComments;
import to.unified.unified_java_sdk.operations.ListUcContacts;
import to.unified.unified_java_sdk.operations.ListUcRecordings;
import to.unified.unified_java_sdk.operations.PatchUcComment;
import to.unified.unified_java_sdk.operations.PatchUcContact;
import to.unified.unified_java_sdk.operations.PatchUcRecording;
import to.unified.unified_java_sdk.operations.RemoveUcComment;
import to.unified.unified_java_sdk.operations.RemoveUcContact;
import to.unified.unified_java_sdk.operations.RemoveUcRecording;
import to.unified.unified_java_sdk.operations.UpdateUcComment;
import to.unified.unified_java_sdk.operations.UpdateUcContact;
import to.unified.unified_java_sdk.operations.UpdateUcRecording;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncUc {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Uc syncSDK;

    AsyncUc(Uc syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Uc sync() {
        return syncSDK;
    }


    /**
     * Create a comment
     * 
     * @return The async call builder
     */
    public CreateUcCommentRequestBuilder createUcComment() {
        return new CreateUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateUcCommentResponse>} - The async response
     */
    public CompletableFuture<CreateUcCommentResponse> createUcComment(CreateUcCommentRequest request) {
        AsyncRequestOperation<CreateUcCommentRequest, CreateUcCommentResponse> operation
              = new CreateUcComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a contact
     * 
     * @return The async call builder
     */
    public CreateUcContactRequestBuilder createUcContact() {
        return new CreateUcContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateUcContactResponse>} - The async response
     */
    public CompletableFuture<CreateUcContactResponse> createUcContact(CreateUcContactRequest request) {
        AsyncRequestOperation<CreateUcContactRequest, CreateUcContactResponse> operation
              = new CreateUcContact.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a recording
     * 
     * @return The async call builder
     */
    public CreateUcRecordingRequestBuilder createUcRecording() {
        return new CreateUcRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateUcRecordingResponse>} - The async response
     */
    public CompletableFuture<CreateUcRecordingResponse> createUcRecording(CreateUcRecordingRequest request) {
        AsyncRequestOperation<CreateUcRecordingRequest, CreateUcRecordingResponse> operation
              = new CreateUcRecording.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a comment
     * 
     * @return The async call builder
     */
    public GetUcCommentRequestBuilder getUcComment() {
        return new GetUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetUcCommentResponse>} - The async response
     */
    public CompletableFuture<GetUcCommentResponse> getUcComment(GetUcCommentRequest request) {
        AsyncRequestOperation<GetUcCommentRequest, GetUcCommentResponse> operation
              = new GetUcComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a contact
     * 
     * @return The async call builder
     */
    public GetUcContactRequestBuilder getUcContact() {
        return new GetUcContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetUcContactResponse>} - The async response
     */
    public CompletableFuture<GetUcContactResponse> getUcContact(GetUcContactRequest request) {
        AsyncRequestOperation<GetUcContactRequest, GetUcContactResponse> operation
              = new GetUcContact.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a recording
     * 
     * @return The async call builder
     */
    public GetUcRecordingRequestBuilder getUcRecording() {
        return new GetUcRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetUcRecordingResponse>} - The async response
     */
    public CompletableFuture<GetUcRecordingResponse> getUcRecording(GetUcRecordingRequest request) {
        AsyncRequestOperation<GetUcRecordingRequest, GetUcRecordingResponse> operation
              = new GetUcRecording.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all calls
     * 
     * @return The async call builder
     */
    public ListUcCallsRequestBuilder listUcCalls() {
        return new ListUcCallsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all calls
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUcCallsResponse>} - The async response
     */
    public CompletableFuture<ListUcCallsResponse> listUcCalls(ListUcCallsRequest request) {
        AsyncRequestOperation<ListUcCallsRequest, ListUcCallsResponse> operation
              = new ListUcCalls.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all comments
     * 
     * @return The async call builder
     */
    public ListUcCommentsRequestBuilder listUcComments() {
        return new ListUcCommentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all comments
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUcCommentsResponse>} - The async response
     */
    public CompletableFuture<ListUcCommentsResponse> listUcComments(ListUcCommentsRequest request) {
        AsyncRequestOperation<ListUcCommentsRequest, ListUcCommentsResponse> operation
              = new ListUcComments.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all contacts
     * 
     * @return The async call builder
     */
    public ListUcContactsRequestBuilder listUcContacts() {
        return new ListUcContactsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all contacts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUcContactsResponse>} - The async response
     */
    public CompletableFuture<ListUcContactsResponse> listUcContacts(ListUcContactsRequest request) {
        AsyncRequestOperation<ListUcContactsRequest, ListUcContactsResponse> operation
              = new ListUcContacts.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all recordings
     * 
     * @return The async call builder
     */
    public ListUcRecordingsRequestBuilder listUcRecordings() {
        return new ListUcRecordingsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all recordings
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUcRecordingsResponse>} - The async response
     */
    public CompletableFuture<ListUcRecordingsResponse> listUcRecordings(ListUcRecordingsRequest request) {
        AsyncRequestOperation<ListUcRecordingsRequest, ListUcRecordingsResponse> operation
              = new ListUcRecordings.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a comment
     * 
     * @return The async call builder
     */
    public PatchUcCommentRequestBuilder patchUcComment() {
        return new PatchUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchUcCommentResponse>} - The async response
     */
    public CompletableFuture<PatchUcCommentResponse> patchUcComment(PatchUcCommentRequest request) {
        AsyncRequestOperation<PatchUcCommentRequest, PatchUcCommentResponse> operation
              = new PatchUcComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a contact
     * 
     * @return The async call builder
     */
    public PatchUcContactRequestBuilder patchUcContact() {
        return new PatchUcContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchUcContactResponse>} - The async response
     */
    public CompletableFuture<PatchUcContactResponse> patchUcContact(PatchUcContactRequest request) {
        AsyncRequestOperation<PatchUcContactRequest, PatchUcContactResponse> operation
              = new PatchUcContact.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a recording
     * 
     * @return The async call builder
     */
    public PatchUcRecordingRequestBuilder patchUcRecording() {
        return new PatchUcRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchUcRecordingResponse>} - The async response
     */
    public CompletableFuture<PatchUcRecordingResponse> patchUcRecording(PatchUcRecordingRequest request) {
        AsyncRequestOperation<PatchUcRecordingRequest, PatchUcRecordingResponse> operation
              = new PatchUcRecording.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a comment
     * 
     * @return The async call builder
     */
    public RemoveUcCommentRequestBuilder removeUcComment() {
        return new RemoveUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveUcCommentResponse>} - The async response
     */
    public CompletableFuture<RemoveUcCommentResponse> removeUcComment(RemoveUcCommentRequest request) {
        AsyncRequestOperation<RemoveUcCommentRequest, RemoveUcCommentResponse> operation
              = new RemoveUcComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a contact
     * 
     * @return The async call builder
     */
    public RemoveUcContactRequestBuilder removeUcContact() {
        return new RemoveUcContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveUcContactResponse>} - The async response
     */
    public CompletableFuture<RemoveUcContactResponse> removeUcContact(RemoveUcContactRequest request) {
        AsyncRequestOperation<RemoveUcContactRequest, RemoveUcContactResponse> operation
              = new RemoveUcContact.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a recording
     * 
     * @return The async call builder
     */
    public RemoveUcRecordingRequestBuilder removeUcRecording() {
        return new RemoveUcRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveUcRecordingResponse>} - The async response
     */
    public CompletableFuture<RemoveUcRecordingResponse> removeUcRecording(RemoveUcRecordingRequest request) {
        AsyncRequestOperation<RemoveUcRecordingRequest, RemoveUcRecordingResponse> operation
              = new RemoveUcRecording.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a comment
     * 
     * @return The async call builder
     */
    public UpdateUcCommentRequestBuilder updateUcComment() {
        return new UpdateUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateUcCommentResponse>} - The async response
     */
    public CompletableFuture<UpdateUcCommentResponse> updateUcComment(UpdateUcCommentRequest request) {
        AsyncRequestOperation<UpdateUcCommentRequest, UpdateUcCommentResponse> operation
              = new UpdateUcComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a contact
     * 
     * @return The async call builder
     */
    public UpdateUcContactRequestBuilder updateUcContact() {
        return new UpdateUcContactRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a contact
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateUcContactResponse>} - The async response
     */
    public CompletableFuture<UpdateUcContactResponse> updateUcContact(UpdateUcContactRequest request) {
        AsyncRequestOperation<UpdateUcContactRequest, UpdateUcContactResponse> operation
              = new UpdateUcContact.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a recording
     * 
     * @return The async call builder
     */
    public UpdateUcRecordingRequestBuilder updateUcRecording() {
        return new UpdateUcRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateUcRecordingResponse>} - The async response
     */
    public CompletableFuture<UpdateUcRecordingResponse> updateUcRecording(UpdateUcRecordingRequest request) {
        AsyncRequestOperation<UpdateUcRecordingRequest, UpdateUcRecordingResponse> operation
              = new UpdateUcRecording.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
