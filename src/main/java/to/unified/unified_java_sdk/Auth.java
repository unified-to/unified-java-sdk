/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.GetUnifiedIntegrationAuthRequest;
import to.unified.unified_java_sdk.models.operations.GetUnifiedIntegrationAuthRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetUnifiedIntegrationAuthResponse;
import to.unified.unified_java_sdk.models.operations.GetUnifiedIntegrationLoginRequest;
import to.unified.unified_java_sdk.models.operations.GetUnifiedIntegrationLoginRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetUnifiedIntegrationLoginResponse;
import to.unified.unified_java_sdk.operations.GetUnifiedIntegrationAuth;
import to.unified.unified_java_sdk.operations.GetUnifiedIntegrationLogin;
import to.unified.unified_java_sdk.utils.Headers;


public class Auth {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncAuth asyncSDK;

    Auth(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncAuth(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncAuth async() {
        return asyncSDK;
    }

    /**
     * Authorize new connection
     * 
     * <p>Returns an authorization URL for the specified integration. Once a successful authorization occurs,
     * a new connection is created.
     * 
     * @return The call builder
     */
    public GetUnifiedIntegrationAuthRequestBuilder getUnifiedIntegrationAuth() {
        return new GetUnifiedIntegrationAuthRequestBuilder(sdkConfiguration);
    }

    /**
     * Authorize new connection
     * 
     * <p>Returns an authorization URL for the specified integration. Once a successful authorization occurs,
     * a new connection is created.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetUnifiedIntegrationAuthResponse getUnifiedIntegrationAuth(GetUnifiedIntegrationAuthRequest request) throws Exception {
        RequestOperation<GetUnifiedIntegrationAuthRequest, GetUnifiedIntegrationAuthResponse> operation
              = new GetUnifiedIntegrationAuth.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Sign in a user
     * 
     * <p>Returns an authentication URL for the specified integration. Once a successful authentication
     * occurs, the name and email are returned inside a jwt parameter, which is a JSON web token that is
     * base-64 encoded.
     * 
     * @return The call builder
     */
    public GetUnifiedIntegrationLoginRequestBuilder getUnifiedIntegrationLogin() {
        return new GetUnifiedIntegrationLoginRequestBuilder(sdkConfiguration);
    }

    /**
     * Sign in a user
     * 
     * <p>Returns an authentication URL for the specified integration. Once a successful authentication
     * occurs, the name and email are returned inside a jwt parameter, which is a JSON web token that is
     * base-64 encoded.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetUnifiedIntegrationLoginResponse getUnifiedIntegrationLogin(GetUnifiedIntegrationLoginRequest request) throws Exception {
        RequestOperation<GetUnifiedIntegrationLoginRequest, GetUnifiedIntegrationLoginResponse> operation
              = new GetUnifiedIntegrationLogin.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
