/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.CreateScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.GetScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.GetScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.ListScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.ListScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.PatchScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.PatchScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.RemoveScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.RemoveScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.UpdateScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.UpdateScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateScimUsersResponse;
import to.unified.unified_java_sdk.operations.CreateScimUsers;
import to.unified.unified_java_sdk.operations.GetScimUsers;
import to.unified.unified_java_sdk.operations.ListScimUsers;
import to.unified.unified_java_sdk.operations.PatchScimUsers;
import to.unified.unified_java_sdk.operations.RemoveScimUsers;
import to.unified.unified_java_sdk.operations.UpdateScimUsers;


public class User {
    private final SDKConfiguration sdkConfiguration;

    User(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create user
     * 
     * @return The call builder
     */
    public CreateScimUsersRequestBuilder createScimUsers() {
        return new CreateScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Create user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateScimUsersResponse createScimUsers(CreateScimUsersRequest request) throws Exception {
        RequestOperation<CreateScimUsersRequest, CreateScimUsersResponse> operation
              = new CreateScimUsers.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get user
     * 
     * @return The call builder
     */
    public GetScimUsersRequestBuilder getScimUsers() {
        return new GetScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Get user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetScimUsersResponse getScimUsers(GetScimUsersRequest request) throws Exception {
        RequestOperation<GetScimUsersRequest, GetScimUsersResponse> operation
              = new GetScimUsers.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List users
     * 
     * @return The call builder
     */
    public ListScimUsersRequestBuilder listScimUsers() {
        return new ListScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * List users
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListScimUsersResponse listScimUsers(ListScimUsersRequest request) throws Exception {
        RequestOperation<ListScimUsersRequest, ListScimUsersResponse> operation
              = new ListScimUsers.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update user
     * 
     * @return The call builder
     */
    public PatchScimUsersRequestBuilder patchScimUsers() {
        return new PatchScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Update user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchScimUsersResponse patchScimUsers(PatchScimUsersRequest request) throws Exception {
        RequestOperation<PatchScimUsersRequest, PatchScimUsersResponse> operation
              = new PatchScimUsers.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete user
     * 
     * @return The call builder
     */
    public RemoveScimUsersRequestBuilder removeScimUsers() {
        return new RemoveScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveScimUsersResponse removeScimUsers(RemoveScimUsersRequest request) throws Exception {
        RequestOperation<RemoveScimUsersRequest, RemoveScimUsersResponse> operation
              = new RemoveScimUsers.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update user
     * 
     * @return The call builder
     */
    public UpdateScimUsersRequestBuilder updateScimUsers() {
        return new UpdateScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Update user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateScimUsersResponse updateScimUsers(UpdateScimUsersRequest request) throws Exception {
        RequestOperation<UpdateScimUsersRequest, UpdateScimUsersResponse> operation
              = new UpdateScimUsers.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
