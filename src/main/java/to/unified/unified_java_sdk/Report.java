/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import to.unified.unified_java_sdk.models.operations.GetAccountingReportRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingReportRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingReportResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingReportsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingReportsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingReportsResponse;
import to.unified.unified_java_sdk.operations.GetAccountingReport;
import to.unified.unified_java_sdk.operations.ListAccountingReports;
import to.unified.unified_java_sdk.utils.Headers;


public class Report {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncReport asyncSDK;

    Report(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncReport(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncReport async() {
        return asyncSDK;
    }

    /**
     * Retrieve a report
     * 
     * @return The call builder
     */
    public GetAccountingReportRequestBuilder getAccountingReport() {
        return new GetAccountingReportRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a report
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetAccountingReportResponse getAccountingReport(GetAccountingReportRequest request) {
        RequestOperation<GetAccountingReportRequest, GetAccountingReportResponse> operation
              = new GetAccountingReport.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all reports
     * 
     * @return The call builder
     */
    public ListAccountingReportsRequestBuilder listAccountingReports() {
        return new ListAccountingReportsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all reports
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListAccountingReportsResponse listAccountingReports(ListAccountingReportsRequest request) {
        RequestOperation<ListAccountingReportsRequest, ListAccountingReportsResponse> operation
              = new ListAccountingReports.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
