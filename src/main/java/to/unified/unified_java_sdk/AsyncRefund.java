/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.GetPaymentRefundRequest;
import to.unified.unified_java_sdk.models.operations.ListPaymentRefundsRequest;
import to.unified.unified_java_sdk.models.operations.async.GetPaymentRefundRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetPaymentRefundResponse;
import to.unified.unified_java_sdk.models.operations.async.ListPaymentRefundsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListPaymentRefundsResponse;
import to.unified.unified_java_sdk.operations.GetPaymentRefund;
import to.unified.unified_java_sdk.operations.ListPaymentRefunds;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncRefund {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Refund syncSDK;

    AsyncRefund(Refund syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Refund sync() {
        return syncSDK;
    }


    /**
     * Retrieve a refund
     * 
     * @return The async call builder
     */
    public GetPaymentRefundRequestBuilder getPaymentRefund() {
        return new GetPaymentRefundRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a refund
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetPaymentRefundResponse&gt; - The async response
     */
    public CompletableFuture<GetPaymentRefundResponse> getPaymentRefund(GetPaymentRefundRequest request) {
        AsyncRequestOperation<GetPaymentRefundRequest, GetPaymentRefundResponse> operation
              = new GetPaymentRefund.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all refunds
     * 
     * @return The async call builder
     */
    public ListPaymentRefundsRequestBuilder listPaymentRefunds() {
        return new ListPaymentRefundsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all refunds
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListPaymentRefundsResponse&gt; - The async response
     */
    public CompletableFuture<ListPaymentRefundsResponse> listPaymentRefunds(ListPaymentRefundsRequest request) {
        AsyncRequestOperation<ListPaymentRefundsRequest, ListPaymentRefundsResponse> operation
              = new ListPaymentRefunds.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
