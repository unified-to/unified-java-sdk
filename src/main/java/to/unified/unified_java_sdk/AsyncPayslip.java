/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.GetHrisPayslipRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisPayslipsRequest;
import to.unified.unified_java_sdk.models.operations.async.GetHrisPayslipRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetHrisPayslipResponse;
import to.unified.unified_java_sdk.models.operations.async.ListHrisPayslipsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListHrisPayslipsResponse;
import to.unified.unified_java_sdk.operations.GetHrisPayslip;
import to.unified.unified_java_sdk.operations.ListHrisPayslips;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncPayslip {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Payslip syncSDK;

    AsyncPayslip(Payslip syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Payslip sync() {
        return syncSDK;
    }


    /**
     * Retrieve a payslip
     * 
     * @return The async call builder
     */
    public GetHrisPayslipRequestBuilder getHrisPayslip() {
        return new GetHrisPayslipRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a payslip
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetHrisPayslipResponse>} - The async response
     */
    public CompletableFuture<GetHrisPayslipResponse> getHrisPayslip(GetHrisPayslipRequest request) {
        AsyncRequestOperation<GetHrisPayslipRequest, GetHrisPayslipResponse> operation
              = new GetHrisPayslip.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all payslips
     * 
     * @return The async call builder
     */
    public ListHrisPayslipsRequestBuilder listHrisPayslips() {
        return new ListHrisPayslipsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all payslips
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListHrisPayslipsResponse>} - The async response
     */
    public CompletableFuture<ListHrisPayslipsResponse> listHrisPayslips(ListHrisPayslipsRequest request) {
        AsyncRequestOperation<ListHrisPayslipsRequest, ListHrisPayslipsResponse> operation
              = new ListHrisPayslips.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
