/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import to.unified.unified_java_sdk.models.operations.GetAccountingCashflowRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingCashflowRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingCashflowResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingCashflowsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingCashflowsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingCashflowsResponse;
import to.unified.unified_java_sdk.operations.GetAccountingCashflow;
import to.unified.unified_java_sdk.operations.ListAccountingCashflows;
import to.unified.unified_java_sdk.utils.Headers;


public class Cashflow {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncCashflow asyncSDK;

    Cashflow(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncCashflow(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncCashflow async() {
        return asyncSDK;
    }

    /**
     * Retrieve a cashflow
     * 
     * @return The call builder
     */
    public GetAccountingCashflowRequestBuilder getAccountingCashflow() {
        return new GetAccountingCashflowRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a cashflow
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetAccountingCashflowResponse getAccountingCashflow(GetAccountingCashflowRequest request) {
        RequestOperation<GetAccountingCashflowRequest, GetAccountingCashflowResponse> operation
              = new GetAccountingCashflow.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all cashflows
     * 
     * @return The call builder
     */
    public ListAccountingCashflowsRequestBuilder listAccountingCashflows() {
        return new ListAccountingCashflowsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all cashflows
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListAccountingCashflowsResponse listAccountingCashflows(ListAccountingCashflowsRequest request) {
        RequestOperation<ListAccountingCashflowsRequest, ListAccountingCashflowsResponse> operation
              = new ListAccountingCashflows.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
