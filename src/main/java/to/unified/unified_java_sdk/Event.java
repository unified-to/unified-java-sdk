/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import java.util.List;
import java.util.Optional;
import to.unified.unified_java_sdk.models.operations.CreateCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.CreateCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.CreateCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.CreateCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.GetCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.GetCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.GetCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.GetCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.ListCalendarEventsRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarEventsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCalendarEventsResponse;
import to.unified.unified_java_sdk.models.operations.ListCrmEventsRequest;
import to.unified.unified_java_sdk.models.operations.ListCrmEventsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCrmEventsResponse;
import to.unified.unified_java_sdk.models.operations.PatchCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.PatchCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.PatchCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.PatchCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCrmEventResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCrmEventRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCrmEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCrmEventResponse;
import to.unified.unified_java_sdk.operations.CreateCalendarEventOperation;
import to.unified.unified_java_sdk.operations.CreateCrmEventOperation;
import to.unified.unified_java_sdk.operations.GetCalendarEventOperation;
import to.unified.unified_java_sdk.operations.GetCrmEventOperation;
import to.unified.unified_java_sdk.operations.ListCalendarEventsOperation;
import to.unified.unified_java_sdk.operations.ListCrmEventsOperation;
import to.unified.unified_java_sdk.operations.PatchCalendarEventOperation;
import to.unified.unified_java_sdk.operations.PatchCrmEventOperation;
import to.unified.unified_java_sdk.operations.RemoveCalendarEventOperation;
import to.unified.unified_java_sdk.operations.RemoveCrmEventOperation;
import to.unified.unified_java_sdk.operations.UpdateCalendarEventOperation;
import to.unified.unified_java_sdk.operations.UpdateCrmEventOperation;


public class Event {
    private final SDKConfiguration sdkConfiguration;

    Event(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * Create an event
     * 
     * @return The call builder
     */
    public CreateCalendarEventRequestBuilder createCalendarEvent() {
        return new CreateCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCalendarEventResponse createCalendarEvent(CreateCalendarEventRequest request) throws Exception {
        RequestOperation<CreateCalendarEventRequest, CreateCalendarEventResponse> operation
              = new CreateCalendarEventOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create an event
     * 
     * @return The call builder
     */
    public CreateCrmEventRequestBuilder createCrmEvent() {
        return new CreateCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCrmEventResponse createCrmEvent(CreateCrmEventRequest request) throws Exception {
        RequestOperation<CreateCrmEventRequest, CreateCrmEventResponse> operation
              = new CreateCrmEventOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an event
     * 
     * @return The call builder
     */
    public GetCalendarEventRequestBuilder getCalendarEvent() {
        return new GetCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCalendarEventResponse getCalendarEvent(GetCalendarEventRequest request) throws Exception {
        RequestOperation<GetCalendarEventRequest, GetCalendarEventResponse> operation
              = new GetCalendarEventOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an event
     * 
     * @return The call builder
     */
    public GetCrmEventRequestBuilder getCrmEvent() {
        return new GetCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCrmEventResponse getCrmEvent(GetCrmEventRequest request) throws Exception {
        RequestOperation<GetCrmEventRequest, GetCrmEventResponse> operation
              = new GetCrmEventOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all events
     * 
     * @return The call builder
     */
    public ListCalendarEventsRequestBuilder listCalendarEvents() {
        return new ListCalendarEventsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all events
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCalendarEventsResponse listCalendarEvents(ListCalendarEventsRequest request) throws Exception {
        RequestOperation<ListCalendarEventsRequest, ListCalendarEventsResponse> operation
              = new ListCalendarEventsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all events
     * 
     * @return The call builder
     */
    public ListCrmEventsRequestBuilder listCrmEvents() {
        return new ListCrmEventsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all events
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCrmEventsResponse listCrmEvents(ListCrmEventsRequest request) throws Exception {
        RequestOperation<ListCrmEventsRequest, ListCrmEventsResponse> operation
              = new ListCrmEventsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an event
     * 
     * @return The call builder
     */
    public PatchCalendarEventRequestBuilder patchCalendarEvent() {
        return new PatchCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCalendarEventResponse patchCalendarEvent(PatchCalendarEventRequest request) throws Exception {
        RequestOperation<PatchCalendarEventRequest, PatchCalendarEventResponse> operation
              = new PatchCalendarEventOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an event
     * 
     * @return The call builder
     */
    public PatchCrmEventRequestBuilder patchCrmEvent() {
        return new PatchCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCrmEventResponse patchCrmEvent(PatchCrmEventRequest request) throws Exception {
        RequestOperation<PatchCrmEventRequest, PatchCrmEventResponse> operation
              = new PatchCrmEventOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an event
     * 
     * @return The call builder
     */
    public RemoveCalendarEventRequestBuilder removeCalendarEvent() {
        return new RemoveCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCalendarEventResponse removeCalendarEvent(RemoveCalendarEventRequest request) throws Exception {
        RequestOperation<RemoveCalendarEventRequest, RemoveCalendarEventResponse> operation
              = new RemoveCalendarEventOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an event
     * 
     * @return The call builder
     */
    public RemoveCrmEventRequestBuilder removeCrmEvent() {
        return new RemoveCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCrmEventResponse removeCrmEvent(RemoveCrmEventRequest request) throws Exception {
        RequestOperation<RemoveCrmEventRequest, RemoveCrmEventResponse> operation
              = new RemoveCrmEventOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an event
     * 
     * @return The call builder
     */
    public UpdateCalendarEventRequestBuilder updateCalendarEvent() {
        return new UpdateCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCalendarEventResponse updateCalendarEvent(UpdateCalendarEventRequest request) throws Exception {
        RequestOperation<UpdateCalendarEventRequest, UpdateCalendarEventResponse> operation
              = new UpdateCalendarEventOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an event
     * 
     * @return The call builder
     */
    public UpdateCrmEventRequestBuilder updateCrmEvent() {
        return new UpdateCrmEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCrmEventResponse updateCrmEvent(UpdateCrmEventRequest request) throws Exception {
        RequestOperation<UpdateCrmEventRequest, UpdateCrmEventResponse> operation
              = new UpdateCrmEventOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
