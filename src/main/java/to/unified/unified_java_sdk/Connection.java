/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import java.util.List;
import java.util.Optional;
import to.unified.unified_java_sdk.models.operations.CreateUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.GetUnifiedConnectionRequest;
import to.unified.unified_java_sdk.models.operations.GetUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.ListUnifiedConnectionsRequest;
import to.unified.unified_java_sdk.models.operations.ListUnifiedConnectionsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListUnifiedConnectionsResponse;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedConnectionRequest;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.RemoveUnifiedConnectionRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveUnifiedConnectionResponse;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedConnectionRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedConnectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedConnectionResponse;
import to.unified.unified_java_sdk.operations.CreateUnifiedConnectionOperation;
import to.unified.unified_java_sdk.operations.GetUnifiedConnectionOperation;
import to.unified.unified_java_sdk.operations.ListUnifiedConnectionsOperation;
import to.unified.unified_java_sdk.operations.PatchUnifiedConnectionOperation;
import to.unified.unified_java_sdk.operations.RemoveUnifiedConnectionOperation;
import to.unified.unified_java_sdk.operations.UpdateUnifiedConnectionOperation;


public class Connection {
    private final SDKConfiguration sdkConfiguration;

    Connection(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * Create connection
     * 
     * <p>Used only to import existing customer credentials; use "Create connection indirectly" instead
     * 
     * @return The call builder
     */
    public CreateUnifiedConnectionRequestBuilder createUnifiedConnection() {
        return new CreateUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Create connection
     * 
     * <p>Used only to import existing customer credentials; use "Create connection indirectly" instead
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateUnifiedConnectionResponse createUnifiedConnection(to.unified.unified_java_sdk.models.shared.Connection request) throws Exception {
        RequestOperation<to.unified.unified_java_sdk.models.shared.Connection, CreateUnifiedConnectionResponse> operation
              = new CreateUnifiedConnectionOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve connection
     * 
     * @return The call builder
     */
    public GetUnifiedConnectionRequestBuilder getUnifiedConnection() {
        return new GetUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetUnifiedConnectionResponse getUnifiedConnection(GetUnifiedConnectionRequest request) throws Exception {
        RequestOperation<GetUnifiedConnectionRequest, GetUnifiedConnectionResponse> operation
              = new GetUnifiedConnectionOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all connections
     * 
     * @return The call builder
     */
    public ListUnifiedConnectionsRequestBuilder listUnifiedConnections() {
        return new ListUnifiedConnectionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all connections
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListUnifiedConnectionsResponse listUnifiedConnections(ListUnifiedConnectionsRequest request) throws Exception {
        RequestOperation<ListUnifiedConnectionsRequest, ListUnifiedConnectionsResponse> operation
              = new ListUnifiedConnectionsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update connection
     * 
     * @return The call builder
     */
    public PatchUnifiedConnectionRequestBuilder patchUnifiedConnection() {
        return new PatchUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchUnifiedConnectionResponse patchUnifiedConnection(PatchUnifiedConnectionRequest request) throws Exception {
        RequestOperation<PatchUnifiedConnectionRequest, PatchUnifiedConnectionResponse> operation
              = new PatchUnifiedConnectionOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove connection
     * 
     * @return The call builder
     */
    public RemoveUnifiedConnectionRequestBuilder removeUnifiedConnection() {
        return new RemoveUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveUnifiedConnectionResponse removeUnifiedConnection(RemoveUnifiedConnectionRequest request) throws Exception {
        RequestOperation<RemoveUnifiedConnectionRequest, RemoveUnifiedConnectionResponse> operation
              = new RemoveUnifiedConnectionOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update connection
     * 
     * @return The call builder
     */
    public UpdateUnifiedConnectionRequestBuilder updateUnifiedConnection() {
        return new UpdateUnifiedConnectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateUnifiedConnectionResponse updateUnifiedConnection(UpdateUnifiedConnectionRequest request) throws Exception {
        RequestOperation<UpdateUnifiedConnectionRequest, UpdateUnifiedConnectionResponse> operation
              = new UpdateUnifiedConnectionOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
