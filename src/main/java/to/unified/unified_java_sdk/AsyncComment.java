/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateKmsCommentRequest;
import to.unified.unified_java_sdk.models.operations.CreateTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.CreateUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.GetKmsCommentRequest;
import to.unified.unified_java_sdk.models.operations.GetTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.GetUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.ListKmsCommentsRequest;
import to.unified.unified_java_sdk.models.operations.ListTaskCommentsRequest;
import to.unified.unified_java_sdk.models.operations.ListUcCommentsRequest;
import to.unified.unified_java_sdk.models.operations.PatchKmsCommentRequest;
import to.unified.unified_java_sdk.models.operations.PatchTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.PatchUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveKmsCommentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateKmsCommentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateTaskCommentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUcCommentRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateKmsCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateKmsCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.GetKmsCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetKmsCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.GetTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.GetUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.ListKmsCommentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListKmsCommentsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListTaskCommentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListTaskCommentsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListUcCommentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListUcCommentsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchKmsCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchKmsCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveKmsCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveKmsCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveUcCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateKmsCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateKmsCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateTaskCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateTaskCommentResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateUcCommentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateUcCommentResponse;
import to.unified.unified_java_sdk.operations.CreateKmsComment;
import to.unified.unified_java_sdk.operations.CreateTaskComment;
import to.unified.unified_java_sdk.operations.CreateUcComment;
import to.unified.unified_java_sdk.operations.GetKmsComment;
import to.unified.unified_java_sdk.operations.GetTaskComment;
import to.unified.unified_java_sdk.operations.GetUcComment;
import to.unified.unified_java_sdk.operations.ListKmsComments;
import to.unified.unified_java_sdk.operations.ListTaskComments;
import to.unified.unified_java_sdk.operations.ListUcComments;
import to.unified.unified_java_sdk.operations.PatchKmsComment;
import to.unified.unified_java_sdk.operations.PatchTaskComment;
import to.unified.unified_java_sdk.operations.PatchUcComment;
import to.unified.unified_java_sdk.operations.RemoveKmsComment;
import to.unified.unified_java_sdk.operations.RemoveTaskComment;
import to.unified.unified_java_sdk.operations.RemoveUcComment;
import to.unified.unified_java_sdk.operations.UpdateKmsComment;
import to.unified.unified_java_sdk.operations.UpdateTaskComment;
import to.unified.unified_java_sdk.operations.UpdateUcComment;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncComment {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Comment syncSDK;

    AsyncComment(Comment syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Comment sync() {
        return syncSDK;
    }


    /**
     * Create a comment
     * 
     * @return The async call builder
     */
    public CreateKmsCommentRequestBuilder createKmsComment() {
        return new CreateKmsCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateKmsCommentResponse>} - The async response
     */
    public CompletableFuture<CreateKmsCommentResponse> createKmsComment(CreateKmsCommentRequest request) {
        AsyncRequestOperation<CreateKmsCommentRequest, CreateKmsCommentResponse> operation
              = new CreateKmsComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a comment
     * 
     * @return The async call builder
     */
    public CreateTaskCommentRequestBuilder createTaskComment() {
        return new CreateTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateTaskCommentResponse>} - The async response
     */
    public CompletableFuture<CreateTaskCommentResponse> createTaskComment(CreateTaskCommentRequest request) {
        AsyncRequestOperation<CreateTaskCommentRequest, CreateTaskCommentResponse> operation
              = new CreateTaskComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a comment
     * 
     * @return The async call builder
     */
    public CreateUcCommentRequestBuilder createUcComment() {
        return new CreateUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateUcCommentResponse>} - The async response
     */
    public CompletableFuture<CreateUcCommentResponse> createUcComment(CreateUcCommentRequest request) {
        AsyncRequestOperation<CreateUcCommentRequest, CreateUcCommentResponse> operation
              = new CreateUcComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a comment
     * 
     * @return The async call builder
     */
    public GetKmsCommentRequestBuilder getKmsComment() {
        return new GetKmsCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetKmsCommentResponse>} - The async response
     */
    public CompletableFuture<GetKmsCommentResponse> getKmsComment(GetKmsCommentRequest request) {
        AsyncRequestOperation<GetKmsCommentRequest, GetKmsCommentResponse> operation
              = new GetKmsComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a comment
     * 
     * @return The async call builder
     */
    public GetTaskCommentRequestBuilder getTaskComment() {
        return new GetTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetTaskCommentResponse>} - The async response
     */
    public CompletableFuture<GetTaskCommentResponse> getTaskComment(GetTaskCommentRequest request) {
        AsyncRequestOperation<GetTaskCommentRequest, GetTaskCommentResponse> operation
              = new GetTaskComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a comment
     * 
     * @return The async call builder
     */
    public GetUcCommentRequestBuilder getUcComment() {
        return new GetUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetUcCommentResponse>} - The async response
     */
    public CompletableFuture<GetUcCommentResponse> getUcComment(GetUcCommentRequest request) {
        AsyncRequestOperation<GetUcCommentRequest, GetUcCommentResponse> operation
              = new GetUcComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all comments
     * 
     * @return The async call builder
     */
    public ListKmsCommentsRequestBuilder listKmsComments() {
        return new ListKmsCommentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all comments
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListKmsCommentsResponse>} - The async response
     */
    public CompletableFuture<ListKmsCommentsResponse> listKmsComments(ListKmsCommentsRequest request) {
        AsyncRequestOperation<ListKmsCommentsRequest, ListKmsCommentsResponse> operation
              = new ListKmsComments.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all comments
     * 
     * @return The async call builder
     */
    public ListTaskCommentsRequestBuilder listTaskComments() {
        return new ListTaskCommentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all comments
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListTaskCommentsResponse>} - The async response
     */
    public CompletableFuture<ListTaskCommentsResponse> listTaskComments(ListTaskCommentsRequest request) {
        AsyncRequestOperation<ListTaskCommentsRequest, ListTaskCommentsResponse> operation
              = new ListTaskComments.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all comments
     * 
     * @return The async call builder
     */
    public ListUcCommentsRequestBuilder listUcComments() {
        return new ListUcCommentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all comments
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListUcCommentsResponse>} - The async response
     */
    public CompletableFuture<ListUcCommentsResponse> listUcComments(ListUcCommentsRequest request) {
        AsyncRequestOperation<ListUcCommentsRequest, ListUcCommentsResponse> operation
              = new ListUcComments.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a comment
     * 
     * @return The async call builder
     */
    public PatchKmsCommentRequestBuilder patchKmsComment() {
        return new PatchKmsCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchKmsCommentResponse>} - The async response
     */
    public CompletableFuture<PatchKmsCommentResponse> patchKmsComment(PatchKmsCommentRequest request) {
        AsyncRequestOperation<PatchKmsCommentRequest, PatchKmsCommentResponse> operation
              = new PatchKmsComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a comment
     * 
     * @return The async call builder
     */
    public PatchTaskCommentRequestBuilder patchTaskComment() {
        return new PatchTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchTaskCommentResponse>} - The async response
     */
    public CompletableFuture<PatchTaskCommentResponse> patchTaskComment(PatchTaskCommentRequest request) {
        AsyncRequestOperation<PatchTaskCommentRequest, PatchTaskCommentResponse> operation
              = new PatchTaskComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a comment
     * 
     * @return The async call builder
     */
    public PatchUcCommentRequestBuilder patchUcComment() {
        return new PatchUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchUcCommentResponse>} - The async response
     */
    public CompletableFuture<PatchUcCommentResponse> patchUcComment(PatchUcCommentRequest request) {
        AsyncRequestOperation<PatchUcCommentRequest, PatchUcCommentResponse> operation
              = new PatchUcComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a comment
     * 
     * @return The async call builder
     */
    public RemoveKmsCommentRequestBuilder removeKmsComment() {
        return new RemoveKmsCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveKmsCommentResponse>} - The async response
     */
    public CompletableFuture<RemoveKmsCommentResponse> removeKmsComment(RemoveKmsCommentRequest request) {
        AsyncRequestOperation<RemoveKmsCommentRequest, RemoveKmsCommentResponse> operation
              = new RemoveKmsComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a comment
     * 
     * @return The async call builder
     */
    public RemoveTaskCommentRequestBuilder removeTaskComment() {
        return new RemoveTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveTaskCommentResponse>} - The async response
     */
    public CompletableFuture<RemoveTaskCommentResponse> removeTaskComment(RemoveTaskCommentRequest request) {
        AsyncRequestOperation<RemoveTaskCommentRequest, RemoveTaskCommentResponse> operation
              = new RemoveTaskComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a comment
     * 
     * @return The async call builder
     */
    public RemoveUcCommentRequestBuilder removeUcComment() {
        return new RemoveUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveUcCommentResponse>} - The async response
     */
    public CompletableFuture<RemoveUcCommentResponse> removeUcComment(RemoveUcCommentRequest request) {
        AsyncRequestOperation<RemoveUcCommentRequest, RemoveUcCommentResponse> operation
              = new RemoveUcComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a comment
     * 
     * @return The async call builder
     */
    public UpdateKmsCommentRequestBuilder updateKmsComment() {
        return new UpdateKmsCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateKmsCommentResponse>} - The async response
     */
    public CompletableFuture<UpdateKmsCommentResponse> updateKmsComment(UpdateKmsCommentRequest request) {
        AsyncRequestOperation<UpdateKmsCommentRequest, UpdateKmsCommentResponse> operation
              = new UpdateKmsComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a comment
     * 
     * @return The async call builder
     */
    public UpdateTaskCommentRequestBuilder updateTaskComment() {
        return new UpdateTaskCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateTaskCommentResponse>} - The async response
     */
    public CompletableFuture<UpdateTaskCommentResponse> updateTaskComment(UpdateTaskCommentRequest request) {
        AsyncRequestOperation<UpdateTaskCommentRequest, UpdateTaskCommentResponse> operation
              = new UpdateTaskComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a comment
     * 
     * @return The async call builder
     */
    public UpdateUcCommentRequestBuilder updateUcComment() {
        return new UpdateUcCommentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a comment
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateUcCommentResponse>} - The async response
     */
    public CompletableFuture<UpdateUcCommentResponse> updateUcComment(UpdateUcCommentRequest request) {
        AsyncRequestOperation<UpdateUcCommentRequest, UpdateUcCommentResponse> operation
              = new UpdateUcComment.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
