/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import to.unified.unified_java_sdk.models.operations.CreateUcRecordingRequest;
import to.unified.unified_java_sdk.models.operations.CreateUcRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateUcRecordingResponse;
import to.unified.unified_java_sdk.models.operations.GetCalendarRecordingRequest;
import to.unified.unified_java_sdk.models.operations.GetCalendarRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCalendarRecordingResponse;
import to.unified.unified_java_sdk.models.operations.GetUcRecordingRequest;
import to.unified.unified_java_sdk.models.operations.GetUcRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetUcRecordingResponse;
import to.unified.unified_java_sdk.models.operations.ListCalendarRecordingsRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarRecordingsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCalendarRecordingsResponse;
import to.unified.unified_java_sdk.models.operations.ListUcRecordingsRequest;
import to.unified.unified_java_sdk.models.operations.ListUcRecordingsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListUcRecordingsResponse;
import to.unified.unified_java_sdk.models.operations.PatchUcRecordingRequest;
import to.unified.unified_java_sdk.models.operations.PatchUcRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchUcRecordingResponse;
import to.unified.unified_java_sdk.models.operations.RemoveUcRecordingRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUcRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveUcRecordingResponse;
import to.unified.unified_java_sdk.models.operations.UpdateUcRecordingRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUcRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateUcRecordingResponse;
import to.unified.unified_java_sdk.operations.CreateUcRecording;
import to.unified.unified_java_sdk.operations.GetCalendarRecording;
import to.unified.unified_java_sdk.operations.GetUcRecording;
import to.unified.unified_java_sdk.operations.ListCalendarRecordings;
import to.unified.unified_java_sdk.operations.ListUcRecordings;
import to.unified.unified_java_sdk.operations.PatchUcRecording;
import to.unified.unified_java_sdk.operations.RemoveUcRecording;
import to.unified.unified_java_sdk.operations.UpdateUcRecording;
import to.unified.unified_java_sdk.utils.Headers;


public class Recording {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncRecording asyncSDK;

    Recording(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncRecording(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncRecording async() {
        return asyncSDK;
    }

    /**
     * Create a recording
     * 
     * @return The call builder
     */
    public CreateUcRecordingRequestBuilder createUcRecording() {
        return new CreateUcRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateUcRecordingResponse createUcRecording(CreateUcRecordingRequest request) {
        RequestOperation<CreateUcRecordingRequest, CreateUcRecordingResponse> operation
              = new CreateUcRecording.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a recording
     * 
     * @return The call builder
     */
    public GetCalendarRecordingRequestBuilder getCalendarRecording() {
        return new GetCalendarRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetCalendarRecordingResponse getCalendarRecording(GetCalendarRecordingRequest request) {
        RequestOperation<GetCalendarRecordingRequest, GetCalendarRecordingResponse> operation
              = new GetCalendarRecording.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a recording
     * 
     * @return The call builder
     */
    public GetUcRecordingRequestBuilder getUcRecording() {
        return new GetUcRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetUcRecordingResponse getUcRecording(GetUcRecordingRequest request) {
        RequestOperation<GetUcRecordingRequest, GetUcRecordingResponse> operation
              = new GetUcRecording.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all recordings
     * 
     * @return The call builder
     */
    public ListCalendarRecordingsRequestBuilder listCalendarRecordings() {
        return new ListCalendarRecordingsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all recordings
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListCalendarRecordingsResponse listCalendarRecordings(ListCalendarRecordingsRequest request) {
        RequestOperation<ListCalendarRecordingsRequest, ListCalendarRecordingsResponse> operation
              = new ListCalendarRecordings.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all recordings
     * 
     * @return The call builder
     */
    public ListUcRecordingsRequestBuilder listUcRecordings() {
        return new ListUcRecordingsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all recordings
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListUcRecordingsResponse listUcRecordings(ListUcRecordingsRequest request) {
        RequestOperation<ListUcRecordingsRequest, ListUcRecordingsResponse> operation
              = new ListUcRecordings.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a recording
     * 
     * @return The call builder
     */
    public PatchUcRecordingRequestBuilder patchUcRecording() {
        return new PatchUcRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchUcRecordingResponse patchUcRecording(PatchUcRecordingRequest request) {
        RequestOperation<PatchUcRecordingRequest, PatchUcRecordingResponse> operation
              = new PatchUcRecording.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a recording
     * 
     * @return The call builder
     */
    public RemoveUcRecordingRequestBuilder removeUcRecording() {
        return new RemoveUcRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveUcRecordingResponse removeUcRecording(RemoveUcRecordingRequest request) {
        RequestOperation<RemoveUcRecordingRequest, RemoveUcRecordingResponse> operation
              = new RemoveUcRecording.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a recording
     * 
     * @return The call builder
     */
    public UpdateUcRecordingRequestBuilder updateUcRecording() {
        return new UpdateUcRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateUcRecordingResponse updateUcRecording(UpdateUcRecordingRequest request) {
        RequestOperation<UpdateUcRecordingRequest, UpdateUcRecordingResponse> operation
              = new UpdateUcRecording.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
