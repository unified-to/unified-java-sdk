/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateAccountingCreditmemoRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingCreditmemoRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingCreditmemoesRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingCreditmemoRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingCreditmemoRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingCreditmemoRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateAccountingCreditmemoRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAccountingCreditmemoResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAccountingCreditmemoRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAccountingCreditmemoResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAccountingCreditmemoesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAccountingCreditmemoesResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAccountingCreditmemoRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAccountingCreditmemoResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAccountingCreditmemoRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAccountingCreditmemoResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAccountingCreditmemoRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAccountingCreditmemoResponse;
import to.unified.unified_java_sdk.operations.CreateAccountingCreditmemo;
import to.unified.unified_java_sdk.operations.GetAccountingCreditmemo;
import to.unified.unified_java_sdk.operations.ListAccountingCreditmemoes;
import to.unified.unified_java_sdk.operations.PatchAccountingCreditmemo;
import to.unified.unified_java_sdk.operations.RemoveAccountingCreditmemo;
import to.unified.unified_java_sdk.operations.UpdateAccountingCreditmemo;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncCreditmemo {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Creditmemo syncSDK;

    AsyncCreditmemo(Creditmemo syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Creditmemo sync() {
        return syncSDK;
    }


    /**
     * Create a creditmemo
     * 
     * @return The async call builder
     */
    public CreateAccountingCreditmemoRequestBuilder createAccountingCreditmemo() {
        return new CreateAccountingCreditmemoRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a creditmemo
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateAccountingCreditmemoResponse&gt; - The async response
     */
    public CompletableFuture<CreateAccountingCreditmemoResponse> createAccountingCreditmemo(CreateAccountingCreditmemoRequest request) {
        AsyncRequestOperation<CreateAccountingCreditmemoRequest, CreateAccountingCreditmemoResponse> operation
              = new CreateAccountingCreditmemo.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a creditmemo
     * 
     * @return The async call builder
     */
    public GetAccountingCreditmemoRequestBuilder getAccountingCreditmemo() {
        return new GetAccountingCreditmemoRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a creditmemo
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetAccountingCreditmemoResponse&gt; - The async response
     */
    public CompletableFuture<GetAccountingCreditmemoResponse> getAccountingCreditmemo(GetAccountingCreditmemoRequest request) {
        AsyncRequestOperation<GetAccountingCreditmemoRequest, GetAccountingCreditmemoResponse> operation
              = new GetAccountingCreditmemo.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all creditmemoes
     * 
     * @return The async call builder
     */
    public ListAccountingCreditmemoesRequestBuilder listAccountingCreditmemoes() {
        return new ListAccountingCreditmemoesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all creditmemoes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListAccountingCreditmemoesResponse&gt; - The async response
     */
    public CompletableFuture<ListAccountingCreditmemoesResponse> listAccountingCreditmemoes(ListAccountingCreditmemoesRequest request) {
        AsyncRequestOperation<ListAccountingCreditmemoesRequest, ListAccountingCreditmemoesResponse> operation
              = new ListAccountingCreditmemoes.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a creditmemo
     * 
     * @return The async call builder
     */
    public PatchAccountingCreditmemoRequestBuilder patchAccountingCreditmemo() {
        return new PatchAccountingCreditmemoRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a creditmemo
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchAccountingCreditmemoResponse&gt; - The async response
     */
    public CompletableFuture<PatchAccountingCreditmemoResponse> patchAccountingCreditmemo(PatchAccountingCreditmemoRequest request) {
        AsyncRequestOperation<PatchAccountingCreditmemoRequest, PatchAccountingCreditmemoResponse> operation
              = new PatchAccountingCreditmemo.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a creditmemo
     * 
     * @return The async call builder
     */
    public RemoveAccountingCreditmemoRequestBuilder removeAccountingCreditmemo() {
        return new RemoveAccountingCreditmemoRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a creditmemo
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveAccountingCreditmemoResponse&gt; - The async response
     */
    public CompletableFuture<RemoveAccountingCreditmemoResponse> removeAccountingCreditmemo(RemoveAccountingCreditmemoRequest request) {
        AsyncRequestOperation<RemoveAccountingCreditmemoRequest, RemoveAccountingCreditmemoResponse> operation
              = new RemoveAccountingCreditmemo.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a creditmemo
     * 
     * @return The async call builder
     */
    public UpdateAccountingCreditmemoRequestBuilder updateAccountingCreditmemo() {
        return new UpdateAccountingCreditmemoRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a creditmemo
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateAccountingCreditmemoResponse&gt; - The async response
     */
    public CompletableFuture<UpdateAccountingCreditmemoResponse> updateAccountingCreditmemo(UpdateAccountingCreditmemoRequest request) {
        AsyncRequestOperation<UpdateAccountingCreditmemoRequest, UpdateAccountingCreditmemoResponse> operation
              = new UpdateAccountingCreditmemo.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
