/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import to.unified.unified_java_sdk.models.operations.CreateHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.CreateHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.CreateScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.CreateScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.GetHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.GetScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.GetScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.ListHrisGroupsRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListHrisGroupsResponse;
import to.unified.unified_java_sdk.models.operations.ListScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.ListScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.PatchHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.PatchScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.PatchScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.RemoveHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.RemoveScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.RemoveScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveScimGroupsResponse;
import to.unified.unified_java_sdk.models.operations.UpdateHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.UpdateScimGroupsRequest;
import to.unified.unified_java_sdk.models.operations.UpdateScimGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateScimGroupsResponse;
import to.unified.unified_java_sdk.operations.CreateHrisGroup;
import to.unified.unified_java_sdk.operations.CreateScimGroups;
import to.unified.unified_java_sdk.operations.GetHrisGroup;
import to.unified.unified_java_sdk.operations.GetScimGroups;
import to.unified.unified_java_sdk.operations.ListHrisGroups;
import to.unified.unified_java_sdk.operations.ListScimGroups;
import to.unified.unified_java_sdk.operations.PatchHrisGroup;
import to.unified.unified_java_sdk.operations.PatchScimGroups;
import to.unified.unified_java_sdk.operations.RemoveHrisGroup;
import to.unified.unified_java_sdk.operations.RemoveScimGroups;
import to.unified.unified_java_sdk.operations.UpdateHrisGroup;
import to.unified.unified_java_sdk.operations.UpdateScimGroups;
import to.unified.unified_java_sdk.utils.Headers;


public class Group {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncGroup asyncSDK;

    Group(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncGroup(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncGroup async() {
        return asyncSDK;
    }

    /**
     * Create a group
     * 
     * @return The call builder
     */
    public CreateHrisGroupRequestBuilder createHrisGroup() {
        return new CreateHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateHrisGroupResponse createHrisGroup(CreateHrisGroupRequest request) {
        RequestOperation<CreateHrisGroupRequest, CreateHrisGroupResponse> operation
              = new CreateHrisGroup.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create group
     * 
     * @return The call builder
     */
    public CreateScimGroupsRequestBuilder createScimGroups() {
        return new CreateScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Create group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateScimGroupsResponse createScimGroups(CreateScimGroupsRequest request) {
        RequestOperation<CreateScimGroupsRequest, CreateScimGroupsResponse> operation
              = new CreateScimGroups.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a group
     * 
     * @return The call builder
     */
    public GetHrisGroupRequestBuilder getHrisGroup() {
        return new GetHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetHrisGroupResponse getHrisGroup(GetHrisGroupRequest request) {
        RequestOperation<GetHrisGroupRequest, GetHrisGroupResponse> operation
              = new GetHrisGroup.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get group
     * 
     * @return The call builder
     */
    public GetScimGroupsRequestBuilder getScimGroups() {
        return new GetScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Get group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetScimGroupsResponse getScimGroups(GetScimGroupsRequest request) {
        RequestOperation<GetScimGroupsRequest, GetScimGroupsResponse> operation
              = new GetScimGroups.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all groups
     * 
     * @return The call builder
     */
    public ListHrisGroupsRequestBuilder listHrisGroups() {
        return new ListHrisGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all groups
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListHrisGroupsResponse listHrisGroups(ListHrisGroupsRequest request) {
        RequestOperation<ListHrisGroupsRequest, ListHrisGroupsResponse> operation
              = new ListHrisGroups.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List groups
     * 
     * @return The call builder
     */
    public ListScimGroupsRequestBuilder listScimGroups() {
        return new ListScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * List groups
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListScimGroupsResponse listScimGroups(ListScimGroupsRequest request) {
        RequestOperation<ListScimGroupsRequest, ListScimGroupsResponse> operation
              = new ListScimGroups.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a group
     * 
     * @return The call builder
     */
    public PatchHrisGroupRequestBuilder patchHrisGroup() {
        return new PatchHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchHrisGroupResponse patchHrisGroup(PatchHrisGroupRequest request) {
        RequestOperation<PatchHrisGroupRequest, PatchHrisGroupResponse> operation
              = new PatchHrisGroup.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update group
     * 
     * @return The call builder
     */
    public PatchScimGroupsRequestBuilder patchScimGroups() {
        return new PatchScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Update group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public PatchScimGroupsResponse patchScimGroups(PatchScimGroupsRequest request) {
        RequestOperation<PatchScimGroupsRequest, PatchScimGroupsResponse> operation
              = new PatchScimGroups.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a group
     * 
     * @return The call builder
     */
    public RemoveHrisGroupRequestBuilder removeHrisGroup() {
        return new RemoveHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveHrisGroupResponse removeHrisGroup(RemoveHrisGroupRequest request) {
        RequestOperation<RemoveHrisGroupRequest, RemoveHrisGroupResponse> operation
              = new RemoveHrisGroup.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete group
     * 
     * @return The call builder
     */
    public RemoveScimGroupsRequestBuilder removeScimGroups() {
        return new RemoveScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public RemoveScimGroupsResponse removeScimGroups(RemoveScimGroupsRequest request) {
        RequestOperation<RemoveScimGroupsRequest, RemoveScimGroupsResponse> operation
              = new RemoveScimGroups.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a group
     * 
     * @return The call builder
     */
    public UpdateHrisGroupRequestBuilder updateHrisGroup() {
        return new UpdateHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateHrisGroupResponse updateHrisGroup(UpdateHrisGroupRequest request) {
        RequestOperation<UpdateHrisGroupRequest, UpdateHrisGroupResponse> operation
              = new UpdateHrisGroup.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update group
     * 
     * @return The call builder
     */
    public UpdateScimGroupsRequestBuilder updateScimGroups() {
        return new UpdateScimGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Update group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateScimGroupsResponse updateScimGroups(UpdateScimGroupsRequest request) {
        RequestOperation<UpdateScimGroupsRequest, UpdateScimGroupsResponse> operation
              = new UpdateScimGroups.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
