/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsInterviewsRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsInterviewsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsInterviewsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsInterviewResponse;
import to.unified.unified_java_sdk.operations.CreateAtsInterview;
import to.unified.unified_java_sdk.operations.GetAtsInterview;
import to.unified.unified_java_sdk.operations.ListAtsInterviews;
import to.unified.unified_java_sdk.operations.PatchAtsInterview;
import to.unified.unified_java_sdk.operations.RemoveAtsInterview;
import to.unified.unified_java_sdk.operations.UpdateAtsInterview;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncInterview {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Interview syncSDK;

    AsyncInterview(Interview syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Interview sync() {
        return syncSDK;
    }


    /**
     * Create an interview
     * 
     * @return The async call builder
     */
    public CreateAtsInterviewRequestBuilder createAtsInterview() {
        return new CreateAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateAtsInterviewResponse>} - The async response
     */
    public CompletableFuture<CreateAtsInterviewResponse> createAtsInterview(CreateAtsInterviewRequest request) {
        AsyncRequestOperation<CreateAtsInterviewRequest, CreateAtsInterviewResponse> operation
              = new CreateAtsInterview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an interview
     * 
     * @return The async call builder
     */
    public GetAtsInterviewRequestBuilder getAtsInterview() {
        return new GetAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetAtsInterviewResponse>} - The async response
     */
    public CompletableFuture<GetAtsInterviewResponse> getAtsInterview(GetAtsInterviewRequest request) {
        AsyncRequestOperation<GetAtsInterviewRequest, GetAtsInterviewResponse> operation
              = new GetAtsInterview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all interviews
     * 
     * @return The async call builder
     */
    public ListAtsInterviewsRequestBuilder listAtsInterviews() {
        return new ListAtsInterviewsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all interviews
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAtsInterviewsResponse>} - The async response
     */
    public CompletableFuture<ListAtsInterviewsResponse> listAtsInterviews(ListAtsInterviewsRequest request) {
        AsyncRequestOperation<ListAtsInterviewsRequest, ListAtsInterviewsResponse> operation
              = new ListAtsInterviews.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an interview
     * 
     * @return The async call builder
     */
    public PatchAtsInterviewRequestBuilder patchAtsInterview() {
        return new PatchAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchAtsInterviewResponse>} - The async response
     */
    public CompletableFuture<PatchAtsInterviewResponse> patchAtsInterview(PatchAtsInterviewRequest request) {
        AsyncRequestOperation<PatchAtsInterviewRequest, PatchAtsInterviewResponse> operation
              = new PatchAtsInterview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an interview
     * 
     * @return The async call builder
     */
    public RemoveAtsInterviewRequestBuilder removeAtsInterview() {
        return new RemoveAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveAtsInterviewResponse>} - The async response
     */
    public CompletableFuture<RemoveAtsInterviewResponse> removeAtsInterview(RemoveAtsInterviewRequest request) {
        AsyncRequestOperation<RemoveAtsInterviewRequest, RemoveAtsInterviewResponse> operation
              = new RemoveAtsInterview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an interview
     * 
     * @return The async call builder
     */
    public UpdateAtsInterviewRequestBuilder updateAtsInterview() {
        return new UpdateAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateAtsInterviewResponse>} - The async response
     */
    public CompletableFuture<UpdateAtsInterviewResponse> updateAtsInterview(UpdateAtsInterviewRequest request) {
        AsyncRequestOperation<UpdateAtsInterviewRequest, UpdateAtsInterviewResponse> operation
              = new UpdateAtsInterview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
