/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateCalendarCalendarRequest;
import to.unified.unified_java_sdk.models.operations.CreateCalendarCalendarRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCalendarCalendarResponse;
import to.unified.unified_java_sdk.models.operations.CreateCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.CreateCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.CreateCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.CreateCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.GetCalendarCalendarRequest;
import to.unified.unified_java_sdk.models.operations.GetCalendarCalendarRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCalendarCalendarResponse;
import to.unified.unified_java_sdk.models.operations.GetCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.GetCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.GetCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.GetCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.GetCalendarRecordingRequest;
import to.unified.unified_java_sdk.models.operations.GetCalendarRecordingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCalendarRecordingResponse;
import to.unified.unified_java_sdk.models.operations.ListCalendarBusiesRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarBusiesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCalendarBusiesResponse;
import to.unified.unified_java_sdk.models.operations.ListCalendarCalendarsRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarCalendarsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCalendarCalendarsResponse;
import to.unified.unified_java_sdk.models.operations.ListCalendarEventsRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarEventsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCalendarEventsResponse;
import to.unified.unified_java_sdk.models.operations.ListCalendarLinksRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarLinksRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCalendarLinksResponse;
import to.unified.unified_java_sdk.models.operations.ListCalendarRecordingsRequest;
import to.unified.unified_java_sdk.models.operations.ListCalendarRecordingsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCalendarRecordingsResponse;
import to.unified.unified_java_sdk.models.operations.PatchCalendarCalendarRequest;
import to.unified.unified_java_sdk.models.operations.PatchCalendarCalendarRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCalendarCalendarResponse;
import to.unified.unified_java_sdk.models.operations.PatchCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.PatchCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.PatchCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.PatchCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarCalendarRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarCalendarRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarCalendarResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCalendarLinkResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarCalendarRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarCalendarRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarCalendarResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarEventRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarEventRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarEventResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarLinkRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarLinkRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCalendarLinkResponse;
import to.unified.unified_java_sdk.operations.CreateCalendarCalendar;
import to.unified.unified_java_sdk.operations.CreateCalendarEvent;
import to.unified.unified_java_sdk.operations.CreateCalendarLink;
import to.unified.unified_java_sdk.operations.GetCalendarCalendar;
import to.unified.unified_java_sdk.operations.GetCalendarEvent;
import to.unified.unified_java_sdk.operations.GetCalendarLink;
import to.unified.unified_java_sdk.operations.GetCalendarRecording;
import to.unified.unified_java_sdk.operations.ListCalendarBusies;
import to.unified.unified_java_sdk.operations.ListCalendarCalendars;
import to.unified.unified_java_sdk.operations.ListCalendarEvents;
import to.unified.unified_java_sdk.operations.ListCalendarLinks;
import to.unified.unified_java_sdk.operations.ListCalendarRecordings;
import to.unified.unified_java_sdk.operations.PatchCalendarCalendar;
import to.unified.unified_java_sdk.operations.PatchCalendarEvent;
import to.unified.unified_java_sdk.operations.PatchCalendarLink;
import to.unified.unified_java_sdk.operations.RemoveCalendarCalendar;
import to.unified.unified_java_sdk.operations.RemoveCalendarEvent;
import to.unified.unified_java_sdk.operations.RemoveCalendarLink;
import to.unified.unified_java_sdk.operations.UpdateCalendarCalendar;
import to.unified.unified_java_sdk.operations.UpdateCalendarEvent;
import to.unified.unified_java_sdk.operations.UpdateCalendarLink;


public class Calendar {
    private final SDKConfiguration sdkConfiguration;

    Calendar(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a calendar
     * 
     * @return The call builder
     */
    public CreateCalendarCalendarRequestBuilder createCalendarCalendar() {
        return new CreateCalendarCalendarRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a calendar
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCalendarCalendarResponse createCalendarCalendar(CreateCalendarCalendarRequest request) throws Exception {
        RequestOperation<CreateCalendarCalendarRequest, CreateCalendarCalendarResponse> operation
              = new CreateCalendarCalendar.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create an event
     * 
     * @return The call builder
     */
    public CreateCalendarEventRequestBuilder createCalendarEvent() {
        return new CreateCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCalendarEventResponse createCalendarEvent(CreateCalendarEventRequest request) throws Exception {
        RequestOperation<CreateCalendarEventRequest, CreateCalendarEventResponse> operation
              = new CreateCalendarEvent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a link
     * 
     * @return The call builder
     */
    public CreateCalendarLinkRequestBuilder createCalendarLink() {
        return new CreateCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCalendarLinkResponse createCalendarLink(CreateCalendarLinkRequest request) throws Exception {
        RequestOperation<CreateCalendarLinkRequest, CreateCalendarLinkResponse> operation
              = new CreateCalendarLink.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a calendar
     * 
     * @return The call builder
     */
    public GetCalendarCalendarRequestBuilder getCalendarCalendar() {
        return new GetCalendarCalendarRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a calendar
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCalendarCalendarResponse getCalendarCalendar(GetCalendarCalendarRequest request) throws Exception {
        RequestOperation<GetCalendarCalendarRequest, GetCalendarCalendarResponse> operation
              = new GetCalendarCalendar.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an event
     * 
     * @return The call builder
     */
    public GetCalendarEventRequestBuilder getCalendarEvent() {
        return new GetCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCalendarEventResponse getCalendarEvent(GetCalendarEventRequest request) throws Exception {
        RequestOperation<GetCalendarEventRequest, GetCalendarEventResponse> operation
              = new GetCalendarEvent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a link
     * 
     * @return The call builder
     */
    public GetCalendarLinkRequestBuilder getCalendarLink() {
        return new GetCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCalendarLinkResponse getCalendarLink(GetCalendarLinkRequest request) throws Exception {
        RequestOperation<GetCalendarLinkRequest, GetCalendarLinkResponse> operation
              = new GetCalendarLink.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a recording
     * 
     * @return The call builder
     */
    public GetCalendarRecordingRequestBuilder getCalendarRecording() {
        return new GetCalendarRecordingRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a recording
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCalendarRecordingResponse getCalendarRecording(GetCalendarRecordingRequest request) throws Exception {
        RequestOperation<GetCalendarRecordingRequest, GetCalendarRecordingResponse> operation
              = new GetCalendarRecording.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all busies
     * 
     * @return The call builder
     */
    public ListCalendarBusiesRequestBuilder listCalendarBusies() {
        return new ListCalendarBusiesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all busies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCalendarBusiesResponse listCalendarBusies(ListCalendarBusiesRequest request) throws Exception {
        RequestOperation<ListCalendarBusiesRequest, ListCalendarBusiesResponse> operation
              = new ListCalendarBusies.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all calendars
     * 
     * @return The call builder
     */
    public ListCalendarCalendarsRequestBuilder listCalendarCalendars() {
        return new ListCalendarCalendarsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all calendars
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCalendarCalendarsResponse listCalendarCalendars(ListCalendarCalendarsRequest request) throws Exception {
        RequestOperation<ListCalendarCalendarsRequest, ListCalendarCalendarsResponse> operation
              = new ListCalendarCalendars.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all events
     * 
     * @return The call builder
     */
    public ListCalendarEventsRequestBuilder listCalendarEvents() {
        return new ListCalendarEventsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all events
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCalendarEventsResponse listCalendarEvents(ListCalendarEventsRequest request) throws Exception {
        RequestOperation<ListCalendarEventsRequest, ListCalendarEventsResponse> operation
              = new ListCalendarEvents.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all links
     * 
     * @return The call builder
     */
    public ListCalendarLinksRequestBuilder listCalendarLinks() {
        return new ListCalendarLinksRequestBuilder(sdkConfiguration);
    }

    /**
     * List all links
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCalendarLinksResponse listCalendarLinks(ListCalendarLinksRequest request) throws Exception {
        RequestOperation<ListCalendarLinksRequest, ListCalendarLinksResponse> operation
              = new ListCalendarLinks.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all recordings
     * 
     * @return The call builder
     */
    public ListCalendarRecordingsRequestBuilder listCalendarRecordings() {
        return new ListCalendarRecordingsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all recordings
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCalendarRecordingsResponse listCalendarRecordings(ListCalendarRecordingsRequest request) throws Exception {
        RequestOperation<ListCalendarRecordingsRequest, ListCalendarRecordingsResponse> operation
              = new ListCalendarRecordings.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a calendar
     * 
     * @return The call builder
     */
    public PatchCalendarCalendarRequestBuilder patchCalendarCalendar() {
        return new PatchCalendarCalendarRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a calendar
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCalendarCalendarResponse patchCalendarCalendar(PatchCalendarCalendarRequest request) throws Exception {
        RequestOperation<PatchCalendarCalendarRequest, PatchCalendarCalendarResponse> operation
              = new PatchCalendarCalendar.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an event
     * 
     * @return The call builder
     */
    public PatchCalendarEventRequestBuilder patchCalendarEvent() {
        return new PatchCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCalendarEventResponse patchCalendarEvent(PatchCalendarEventRequest request) throws Exception {
        RequestOperation<PatchCalendarEventRequest, PatchCalendarEventResponse> operation
              = new PatchCalendarEvent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a link
     * 
     * @return The call builder
     */
    public PatchCalendarLinkRequestBuilder patchCalendarLink() {
        return new PatchCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCalendarLinkResponse patchCalendarLink(PatchCalendarLinkRequest request) throws Exception {
        RequestOperation<PatchCalendarLinkRequest, PatchCalendarLinkResponse> operation
              = new PatchCalendarLink.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a calendar
     * 
     * @return The call builder
     */
    public RemoveCalendarCalendarRequestBuilder removeCalendarCalendar() {
        return new RemoveCalendarCalendarRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a calendar
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCalendarCalendarResponse removeCalendarCalendar(RemoveCalendarCalendarRequest request) throws Exception {
        RequestOperation<RemoveCalendarCalendarRequest, RemoveCalendarCalendarResponse> operation
              = new RemoveCalendarCalendar.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an event
     * 
     * @return The call builder
     */
    public RemoveCalendarEventRequestBuilder removeCalendarEvent() {
        return new RemoveCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCalendarEventResponse removeCalendarEvent(RemoveCalendarEventRequest request) throws Exception {
        RequestOperation<RemoveCalendarEventRequest, RemoveCalendarEventResponse> operation
              = new RemoveCalendarEvent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a link
     * 
     * @return The call builder
     */
    public RemoveCalendarLinkRequestBuilder removeCalendarLink() {
        return new RemoveCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCalendarLinkResponse removeCalendarLink(RemoveCalendarLinkRequest request) throws Exception {
        RequestOperation<RemoveCalendarLinkRequest, RemoveCalendarLinkResponse> operation
              = new RemoveCalendarLink.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a calendar
     * 
     * @return The call builder
     */
    public UpdateCalendarCalendarRequestBuilder updateCalendarCalendar() {
        return new UpdateCalendarCalendarRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a calendar
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCalendarCalendarResponse updateCalendarCalendar(UpdateCalendarCalendarRequest request) throws Exception {
        RequestOperation<UpdateCalendarCalendarRequest, UpdateCalendarCalendarResponse> operation
              = new UpdateCalendarCalendar.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an event
     * 
     * @return The call builder
     */
    public UpdateCalendarEventRequestBuilder updateCalendarEvent() {
        return new UpdateCalendarEventRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an event
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCalendarEventResponse updateCalendarEvent(UpdateCalendarEventRequest request) throws Exception {
        RequestOperation<UpdateCalendarEventRequest, UpdateCalendarEventResponse> operation
              = new UpdateCalendarEvent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a link
     * 
     * @return The call builder
     */
    public UpdateCalendarLinkRequestBuilder updateCalendarLink() {
        return new UpdateCalendarLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCalendarLinkResponse updateCalendarLink(UpdateCalendarLinkRequest request) throws Exception {
        RequestOperation<UpdateCalendarLinkRequest, UpdateCalendarLinkResponse> operation
              = new UpdateCalendarLink.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
