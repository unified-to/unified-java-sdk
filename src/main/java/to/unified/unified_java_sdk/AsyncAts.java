/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsApplicationRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsCandidateRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.CreateAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsApplicationRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsCandidateRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.GetAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsActivitiesRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsApplicationsRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsApplicationstatusesRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsCandidatesRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsDocumentsRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsInterviewsRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsJobsRequest;
import to.unified.unified_java_sdk.models.operations.ListAtsScorecardsRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsApplicationRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsCandidateRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.PatchAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsApplicationRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsCandidateRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsActivityRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsApplicationRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsCandidateRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsCompanyRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsDocumentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsInterviewRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsJobRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAtsScorecardRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsApplicationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsApplicationResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsCandidateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsCandidateResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateAtsScorecardResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsApplicationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsApplicationResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsCandidateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsCandidateResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.async.GetAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetAtsScorecardResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsActivitiesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsActivitiesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsApplicationsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsApplicationsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsApplicationstatusesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsApplicationstatusesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsCandidatesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsCandidatesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsDocumentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsDocumentsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsInterviewsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsInterviewsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsJobsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsJobsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListAtsScorecardsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListAtsScorecardsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsApplicationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsApplicationResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsCandidateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsCandidateResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchAtsScorecardResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsApplicationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsApplicationResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsCandidateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsCandidateResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveAtsScorecardResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsActivityRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsActivityResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsApplicationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsApplicationResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsCandidateRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsCandidateResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsCompanyResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsDocumentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsDocumentResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsInterviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsInterviewResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsJobRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsJobResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsScorecardRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateAtsScorecardResponse;
import to.unified.unified_java_sdk.operations.CreateAtsActivity;
import to.unified.unified_java_sdk.operations.CreateAtsApplication;
import to.unified.unified_java_sdk.operations.CreateAtsCandidate;
import to.unified.unified_java_sdk.operations.CreateAtsCompany;
import to.unified.unified_java_sdk.operations.CreateAtsDocument;
import to.unified.unified_java_sdk.operations.CreateAtsInterview;
import to.unified.unified_java_sdk.operations.CreateAtsJob;
import to.unified.unified_java_sdk.operations.CreateAtsScorecard;
import to.unified.unified_java_sdk.operations.GetAtsActivity;
import to.unified.unified_java_sdk.operations.GetAtsApplication;
import to.unified.unified_java_sdk.operations.GetAtsCandidate;
import to.unified.unified_java_sdk.operations.GetAtsCompany;
import to.unified.unified_java_sdk.operations.GetAtsDocument;
import to.unified.unified_java_sdk.operations.GetAtsInterview;
import to.unified.unified_java_sdk.operations.GetAtsJob;
import to.unified.unified_java_sdk.operations.GetAtsScorecard;
import to.unified.unified_java_sdk.operations.ListAtsActivities;
import to.unified.unified_java_sdk.operations.ListAtsApplications;
import to.unified.unified_java_sdk.operations.ListAtsApplicationstatuses;
import to.unified.unified_java_sdk.operations.ListAtsCandidates;
import to.unified.unified_java_sdk.operations.ListAtsCompanies;
import to.unified.unified_java_sdk.operations.ListAtsDocuments;
import to.unified.unified_java_sdk.operations.ListAtsInterviews;
import to.unified.unified_java_sdk.operations.ListAtsJobs;
import to.unified.unified_java_sdk.operations.ListAtsScorecards;
import to.unified.unified_java_sdk.operations.PatchAtsActivity;
import to.unified.unified_java_sdk.operations.PatchAtsApplication;
import to.unified.unified_java_sdk.operations.PatchAtsCandidate;
import to.unified.unified_java_sdk.operations.PatchAtsCompany;
import to.unified.unified_java_sdk.operations.PatchAtsDocument;
import to.unified.unified_java_sdk.operations.PatchAtsInterview;
import to.unified.unified_java_sdk.operations.PatchAtsJob;
import to.unified.unified_java_sdk.operations.PatchAtsScorecard;
import to.unified.unified_java_sdk.operations.RemoveAtsActivity;
import to.unified.unified_java_sdk.operations.RemoveAtsApplication;
import to.unified.unified_java_sdk.operations.RemoveAtsCandidate;
import to.unified.unified_java_sdk.operations.RemoveAtsCompany;
import to.unified.unified_java_sdk.operations.RemoveAtsDocument;
import to.unified.unified_java_sdk.operations.RemoveAtsInterview;
import to.unified.unified_java_sdk.operations.RemoveAtsJob;
import to.unified.unified_java_sdk.operations.RemoveAtsScorecard;
import to.unified.unified_java_sdk.operations.UpdateAtsActivity;
import to.unified.unified_java_sdk.operations.UpdateAtsApplication;
import to.unified.unified_java_sdk.operations.UpdateAtsCandidate;
import to.unified.unified_java_sdk.operations.UpdateAtsCompany;
import to.unified.unified_java_sdk.operations.UpdateAtsDocument;
import to.unified.unified_java_sdk.operations.UpdateAtsInterview;
import to.unified.unified_java_sdk.operations.UpdateAtsJob;
import to.unified.unified_java_sdk.operations.UpdateAtsScorecard;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncAts {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Ats syncSDK;

    AsyncAts(Ats syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Ats sync() {
        return syncSDK;
    }


    /**
     * Create an activity
     * 
     * @return The async call builder
     */
    public CreateAtsActivityRequestBuilder createAtsActivity() {
        return new CreateAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateAtsActivityResponse>} - The async response
     */
    public CompletableFuture<CreateAtsActivityResponse> createAtsActivity(CreateAtsActivityRequest request) {
        AsyncRequestOperation<CreateAtsActivityRequest, CreateAtsActivityResponse> operation
              = new CreateAtsActivity.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create an application
     * 
     * @return The async call builder
     */
    public CreateAtsApplicationRequestBuilder createAtsApplication() {
        return new CreateAtsApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateAtsApplicationResponse>} - The async response
     */
    public CompletableFuture<CreateAtsApplicationResponse> createAtsApplication(CreateAtsApplicationRequest request) {
        AsyncRequestOperation<CreateAtsApplicationRequest, CreateAtsApplicationResponse> operation
              = new CreateAtsApplication.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a candidate
     * 
     * @return The async call builder
     */
    public CreateAtsCandidateRequestBuilder createAtsCandidate() {
        return new CreateAtsCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a candidate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateAtsCandidateResponse>} - The async response
     */
    public CompletableFuture<CreateAtsCandidateResponse> createAtsCandidate(CreateAtsCandidateRequest request) {
        AsyncRequestOperation<CreateAtsCandidateRequest, CreateAtsCandidateResponse> operation
              = new CreateAtsCandidate.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a company
     * 
     * @return The async call builder
     */
    public CreateAtsCompanyRequestBuilder createAtsCompany() {
        return new CreateAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateAtsCompanyResponse>} - The async response
     */
    public CompletableFuture<CreateAtsCompanyResponse> createAtsCompany(CreateAtsCompanyRequest request) {
        AsyncRequestOperation<CreateAtsCompanyRequest, CreateAtsCompanyResponse> operation
              = new CreateAtsCompany.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a document
     * 
     * @return The async call builder
     */
    public CreateAtsDocumentRequestBuilder createAtsDocument() {
        return new CreateAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateAtsDocumentResponse>} - The async response
     */
    public CompletableFuture<CreateAtsDocumentResponse> createAtsDocument(CreateAtsDocumentRequest request) {
        AsyncRequestOperation<CreateAtsDocumentRequest, CreateAtsDocumentResponse> operation
              = new CreateAtsDocument.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create an interview
     * 
     * @return The async call builder
     */
    public CreateAtsInterviewRequestBuilder createAtsInterview() {
        return new CreateAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateAtsInterviewResponse>} - The async response
     */
    public CompletableFuture<CreateAtsInterviewResponse> createAtsInterview(CreateAtsInterviewRequest request) {
        AsyncRequestOperation<CreateAtsInterviewRequest, CreateAtsInterviewResponse> operation
              = new CreateAtsInterview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a job
     * 
     * @return The async call builder
     */
    public CreateAtsJobRequestBuilder createAtsJob() {
        return new CreateAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateAtsJobResponse>} - The async response
     */
    public CompletableFuture<CreateAtsJobResponse> createAtsJob(CreateAtsJobRequest request) {
        AsyncRequestOperation<CreateAtsJobRequest, CreateAtsJobResponse> operation
              = new CreateAtsJob.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a scorecard
     * 
     * @return The async call builder
     */
    public CreateAtsScorecardRequestBuilder createAtsScorecard() {
        return new CreateAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateAtsScorecardResponse>} - The async response
     */
    public CompletableFuture<CreateAtsScorecardResponse> createAtsScorecard(CreateAtsScorecardRequest request) {
        AsyncRequestOperation<CreateAtsScorecardRequest, CreateAtsScorecardResponse> operation
              = new CreateAtsScorecard.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an activity
     * 
     * @return The async call builder
     */
    public GetAtsActivityRequestBuilder getAtsActivity() {
        return new GetAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetAtsActivityResponse>} - The async response
     */
    public CompletableFuture<GetAtsActivityResponse> getAtsActivity(GetAtsActivityRequest request) {
        AsyncRequestOperation<GetAtsActivityRequest, GetAtsActivityResponse> operation
              = new GetAtsActivity.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an application
     * 
     * @return The async call builder
     */
    public GetAtsApplicationRequestBuilder getAtsApplication() {
        return new GetAtsApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetAtsApplicationResponse>} - The async response
     */
    public CompletableFuture<GetAtsApplicationResponse> getAtsApplication(GetAtsApplicationRequest request) {
        AsyncRequestOperation<GetAtsApplicationRequest, GetAtsApplicationResponse> operation
              = new GetAtsApplication.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a candidate
     * 
     * @return The async call builder
     */
    public GetAtsCandidateRequestBuilder getAtsCandidate() {
        return new GetAtsCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a candidate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetAtsCandidateResponse>} - The async response
     */
    public CompletableFuture<GetAtsCandidateResponse> getAtsCandidate(GetAtsCandidateRequest request) {
        AsyncRequestOperation<GetAtsCandidateRequest, GetAtsCandidateResponse> operation
              = new GetAtsCandidate.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a company
     * 
     * @return The async call builder
     */
    public GetAtsCompanyRequestBuilder getAtsCompany() {
        return new GetAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetAtsCompanyResponse>} - The async response
     */
    public CompletableFuture<GetAtsCompanyResponse> getAtsCompany(GetAtsCompanyRequest request) {
        AsyncRequestOperation<GetAtsCompanyRequest, GetAtsCompanyResponse> operation
              = new GetAtsCompany.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a document
     * 
     * @return The async call builder
     */
    public GetAtsDocumentRequestBuilder getAtsDocument() {
        return new GetAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetAtsDocumentResponse>} - The async response
     */
    public CompletableFuture<GetAtsDocumentResponse> getAtsDocument(GetAtsDocumentRequest request) {
        AsyncRequestOperation<GetAtsDocumentRequest, GetAtsDocumentResponse> operation
              = new GetAtsDocument.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an interview
     * 
     * @return The async call builder
     */
    public GetAtsInterviewRequestBuilder getAtsInterview() {
        return new GetAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetAtsInterviewResponse>} - The async response
     */
    public CompletableFuture<GetAtsInterviewResponse> getAtsInterview(GetAtsInterviewRequest request) {
        AsyncRequestOperation<GetAtsInterviewRequest, GetAtsInterviewResponse> operation
              = new GetAtsInterview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a job
     * 
     * @return The async call builder
     */
    public GetAtsJobRequestBuilder getAtsJob() {
        return new GetAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetAtsJobResponse>} - The async response
     */
    public CompletableFuture<GetAtsJobResponse> getAtsJob(GetAtsJobRequest request) {
        AsyncRequestOperation<GetAtsJobRequest, GetAtsJobResponse> operation
              = new GetAtsJob.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a scorecard
     * 
     * @return The async call builder
     */
    public GetAtsScorecardRequestBuilder getAtsScorecard() {
        return new GetAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetAtsScorecardResponse>} - The async response
     */
    public CompletableFuture<GetAtsScorecardResponse> getAtsScorecard(GetAtsScorecardRequest request) {
        AsyncRequestOperation<GetAtsScorecardRequest, GetAtsScorecardResponse> operation
              = new GetAtsScorecard.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all activities
     * 
     * @return The async call builder
     */
    public ListAtsActivitiesRequestBuilder listAtsActivities() {
        return new ListAtsActivitiesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all activities
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAtsActivitiesResponse>} - The async response
     */
    public CompletableFuture<ListAtsActivitiesResponse> listAtsActivities(ListAtsActivitiesRequest request) {
        AsyncRequestOperation<ListAtsActivitiesRequest, ListAtsActivitiesResponse> operation
              = new ListAtsActivities.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all applications
     * 
     * @return The async call builder
     */
    public ListAtsApplicationsRequestBuilder listAtsApplications() {
        return new ListAtsApplicationsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all applications
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAtsApplicationsResponse>} - The async response
     */
    public CompletableFuture<ListAtsApplicationsResponse> listAtsApplications(ListAtsApplicationsRequest request) {
        AsyncRequestOperation<ListAtsApplicationsRequest, ListAtsApplicationsResponse> operation
              = new ListAtsApplications.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all applicationstatuses
     * 
     * @return The async call builder
     */
    public ListAtsApplicationstatusesRequestBuilder listAtsApplicationstatuses() {
        return new ListAtsApplicationstatusesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all applicationstatuses
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAtsApplicationstatusesResponse>} - The async response
     */
    public CompletableFuture<ListAtsApplicationstatusesResponse> listAtsApplicationstatuses(ListAtsApplicationstatusesRequest request) {
        AsyncRequestOperation<ListAtsApplicationstatusesRequest, ListAtsApplicationstatusesResponse> operation
              = new ListAtsApplicationstatuses.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all candidates
     * 
     * @return The async call builder
     */
    public ListAtsCandidatesRequestBuilder listAtsCandidates() {
        return new ListAtsCandidatesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all candidates
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAtsCandidatesResponse>} - The async response
     */
    public CompletableFuture<ListAtsCandidatesResponse> listAtsCandidates(ListAtsCandidatesRequest request) {
        AsyncRequestOperation<ListAtsCandidatesRequest, ListAtsCandidatesResponse> operation
              = new ListAtsCandidates.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all companies
     * 
     * @return The async call builder
     */
    public ListAtsCompaniesRequestBuilder listAtsCompanies() {
        return new ListAtsCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all companies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAtsCompaniesResponse>} - The async response
     */
    public CompletableFuture<ListAtsCompaniesResponse> listAtsCompanies(ListAtsCompaniesRequest request) {
        AsyncRequestOperation<ListAtsCompaniesRequest, ListAtsCompaniesResponse> operation
              = new ListAtsCompanies.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all documents
     * 
     * @return The async call builder
     */
    public ListAtsDocumentsRequestBuilder listAtsDocuments() {
        return new ListAtsDocumentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all documents
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAtsDocumentsResponse>} - The async response
     */
    public CompletableFuture<ListAtsDocumentsResponse> listAtsDocuments(ListAtsDocumentsRequest request) {
        AsyncRequestOperation<ListAtsDocumentsRequest, ListAtsDocumentsResponse> operation
              = new ListAtsDocuments.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all interviews
     * 
     * @return The async call builder
     */
    public ListAtsInterviewsRequestBuilder listAtsInterviews() {
        return new ListAtsInterviewsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all interviews
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAtsInterviewsResponse>} - The async response
     */
    public CompletableFuture<ListAtsInterviewsResponse> listAtsInterviews(ListAtsInterviewsRequest request) {
        AsyncRequestOperation<ListAtsInterviewsRequest, ListAtsInterviewsResponse> operation
              = new ListAtsInterviews.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all jobs
     * 
     * @return The async call builder
     */
    public ListAtsJobsRequestBuilder listAtsJobs() {
        return new ListAtsJobsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all jobs
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAtsJobsResponse>} - The async response
     */
    public CompletableFuture<ListAtsJobsResponse> listAtsJobs(ListAtsJobsRequest request) {
        AsyncRequestOperation<ListAtsJobsRequest, ListAtsJobsResponse> operation
              = new ListAtsJobs.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all scorecards
     * 
     * @return The async call builder
     */
    public ListAtsScorecardsRequestBuilder listAtsScorecards() {
        return new ListAtsScorecardsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all scorecards
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListAtsScorecardsResponse>} - The async response
     */
    public CompletableFuture<ListAtsScorecardsResponse> listAtsScorecards(ListAtsScorecardsRequest request) {
        AsyncRequestOperation<ListAtsScorecardsRequest, ListAtsScorecardsResponse> operation
              = new ListAtsScorecards.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an activity
     * 
     * @return The async call builder
     */
    public PatchAtsActivityRequestBuilder patchAtsActivity() {
        return new PatchAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchAtsActivityResponse>} - The async response
     */
    public CompletableFuture<PatchAtsActivityResponse> patchAtsActivity(PatchAtsActivityRequest request) {
        AsyncRequestOperation<PatchAtsActivityRequest, PatchAtsActivityResponse> operation
              = new PatchAtsActivity.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an application
     * 
     * @return The async call builder
     */
    public PatchAtsApplicationRequestBuilder patchAtsApplication() {
        return new PatchAtsApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchAtsApplicationResponse>} - The async response
     */
    public CompletableFuture<PatchAtsApplicationResponse> patchAtsApplication(PatchAtsApplicationRequest request) {
        AsyncRequestOperation<PatchAtsApplicationRequest, PatchAtsApplicationResponse> operation
              = new PatchAtsApplication.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a candidate
     * 
     * @return The async call builder
     */
    public PatchAtsCandidateRequestBuilder patchAtsCandidate() {
        return new PatchAtsCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a candidate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchAtsCandidateResponse>} - The async response
     */
    public CompletableFuture<PatchAtsCandidateResponse> patchAtsCandidate(PatchAtsCandidateRequest request) {
        AsyncRequestOperation<PatchAtsCandidateRequest, PatchAtsCandidateResponse> operation
              = new PatchAtsCandidate.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a company
     * 
     * @return The async call builder
     */
    public PatchAtsCompanyRequestBuilder patchAtsCompany() {
        return new PatchAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchAtsCompanyResponse>} - The async response
     */
    public CompletableFuture<PatchAtsCompanyResponse> patchAtsCompany(PatchAtsCompanyRequest request) {
        AsyncRequestOperation<PatchAtsCompanyRequest, PatchAtsCompanyResponse> operation
              = new PatchAtsCompany.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a document
     * 
     * @return The async call builder
     */
    public PatchAtsDocumentRequestBuilder patchAtsDocument() {
        return new PatchAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchAtsDocumentResponse>} - The async response
     */
    public CompletableFuture<PatchAtsDocumentResponse> patchAtsDocument(PatchAtsDocumentRequest request) {
        AsyncRequestOperation<PatchAtsDocumentRequest, PatchAtsDocumentResponse> operation
              = new PatchAtsDocument.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an interview
     * 
     * @return The async call builder
     */
    public PatchAtsInterviewRequestBuilder patchAtsInterview() {
        return new PatchAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchAtsInterviewResponse>} - The async response
     */
    public CompletableFuture<PatchAtsInterviewResponse> patchAtsInterview(PatchAtsInterviewRequest request) {
        AsyncRequestOperation<PatchAtsInterviewRequest, PatchAtsInterviewResponse> operation
              = new PatchAtsInterview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a job
     * 
     * @return The async call builder
     */
    public PatchAtsJobRequestBuilder patchAtsJob() {
        return new PatchAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchAtsJobResponse>} - The async response
     */
    public CompletableFuture<PatchAtsJobResponse> patchAtsJob(PatchAtsJobRequest request) {
        AsyncRequestOperation<PatchAtsJobRequest, PatchAtsJobResponse> operation
              = new PatchAtsJob.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a scorecard
     * 
     * @return The async call builder
     */
    public PatchAtsScorecardRequestBuilder patchAtsScorecard() {
        return new PatchAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchAtsScorecardResponse>} - The async response
     */
    public CompletableFuture<PatchAtsScorecardResponse> patchAtsScorecard(PatchAtsScorecardRequest request) {
        AsyncRequestOperation<PatchAtsScorecardRequest, PatchAtsScorecardResponse> operation
              = new PatchAtsScorecard.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an activity
     * 
     * @return The async call builder
     */
    public RemoveAtsActivityRequestBuilder removeAtsActivity() {
        return new RemoveAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveAtsActivityResponse>} - The async response
     */
    public CompletableFuture<RemoveAtsActivityResponse> removeAtsActivity(RemoveAtsActivityRequest request) {
        AsyncRequestOperation<RemoveAtsActivityRequest, RemoveAtsActivityResponse> operation
              = new RemoveAtsActivity.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an application
     * 
     * @return The async call builder
     */
    public RemoveAtsApplicationRequestBuilder removeAtsApplication() {
        return new RemoveAtsApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveAtsApplicationResponse>} - The async response
     */
    public CompletableFuture<RemoveAtsApplicationResponse> removeAtsApplication(RemoveAtsApplicationRequest request) {
        AsyncRequestOperation<RemoveAtsApplicationRequest, RemoveAtsApplicationResponse> operation
              = new RemoveAtsApplication.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a candidate
     * 
     * @return The async call builder
     */
    public RemoveAtsCandidateRequestBuilder removeAtsCandidate() {
        return new RemoveAtsCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a candidate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveAtsCandidateResponse>} - The async response
     */
    public CompletableFuture<RemoveAtsCandidateResponse> removeAtsCandidate(RemoveAtsCandidateRequest request) {
        AsyncRequestOperation<RemoveAtsCandidateRequest, RemoveAtsCandidateResponse> operation
              = new RemoveAtsCandidate.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a company
     * 
     * @return The async call builder
     */
    public RemoveAtsCompanyRequestBuilder removeAtsCompany() {
        return new RemoveAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveAtsCompanyResponse>} - The async response
     */
    public CompletableFuture<RemoveAtsCompanyResponse> removeAtsCompany(RemoveAtsCompanyRequest request) {
        AsyncRequestOperation<RemoveAtsCompanyRequest, RemoveAtsCompanyResponse> operation
              = new RemoveAtsCompany.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a document
     * 
     * @return The async call builder
     */
    public RemoveAtsDocumentRequestBuilder removeAtsDocument() {
        return new RemoveAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveAtsDocumentResponse>} - The async response
     */
    public CompletableFuture<RemoveAtsDocumentResponse> removeAtsDocument(RemoveAtsDocumentRequest request) {
        AsyncRequestOperation<RemoveAtsDocumentRequest, RemoveAtsDocumentResponse> operation
              = new RemoveAtsDocument.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an interview
     * 
     * @return The async call builder
     */
    public RemoveAtsInterviewRequestBuilder removeAtsInterview() {
        return new RemoveAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveAtsInterviewResponse>} - The async response
     */
    public CompletableFuture<RemoveAtsInterviewResponse> removeAtsInterview(RemoveAtsInterviewRequest request) {
        AsyncRequestOperation<RemoveAtsInterviewRequest, RemoveAtsInterviewResponse> operation
              = new RemoveAtsInterview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a job
     * 
     * @return The async call builder
     */
    public RemoveAtsJobRequestBuilder removeAtsJob() {
        return new RemoveAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveAtsJobResponse>} - The async response
     */
    public CompletableFuture<RemoveAtsJobResponse> removeAtsJob(RemoveAtsJobRequest request) {
        AsyncRequestOperation<RemoveAtsJobRequest, RemoveAtsJobResponse> operation
              = new RemoveAtsJob.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a scorecard
     * 
     * @return The async call builder
     */
    public RemoveAtsScorecardRequestBuilder removeAtsScorecard() {
        return new RemoveAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveAtsScorecardResponse>} - The async response
     */
    public CompletableFuture<RemoveAtsScorecardResponse> removeAtsScorecard(RemoveAtsScorecardRequest request) {
        AsyncRequestOperation<RemoveAtsScorecardRequest, RemoveAtsScorecardResponse> operation
              = new RemoveAtsScorecard.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an activity
     * 
     * @return The async call builder
     */
    public UpdateAtsActivityRequestBuilder updateAtsActivity() {
        return new UpdateAtsActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an activity
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateAtsActivityResponse>} - The async response
     */
    public CompletableFuture<UpdateAtsActivityResponse> updateAtsActivity(UpdateAtsActivityRequest request) {
        AsyncRequestOperation<UpdateAtsActivityRequest, UpdateAtsActivityResponse> operation
              = new UpdateAtsActivity.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an application
     * 
     * @return The async call builder
     */
    public UpdateAtsApplicationRequestBuilder updateAtsApplication() {
        return new UpdateAtsApplicationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateAtsApplicationResponse>} - The async response
     */
    public CompletableFuture<UpdateAtsApplicationResponse> updateAtsApplication(UpdateAtsApplicationRequest request) {
        AsyncRequestOperation<UpdateAtsApplicationRequest, UpdateAtsApplicationResponse> operation
              = new UpdateAtsApplication.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a candidate
     * 
     * @return The async call builder
     */
    public UpdateAtsCandidateRequestBuilder updateAtsCandidate() {
        return new UpdateAtsCandidateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a candidate
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateAtsCandidateResponse>} - The async response
     */
    public CompletableFuture<UpdateAtsCandidateResponse> updateAtsCandidate(UpdateAtsCandidateRequest request) {
        AsyncRequestOperation<UpdateAtsCandidateRequest, UpdateAtsCandidateResponse> operation
              = new UpdateAtsCandidate.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a company
     * 
     * @return The async call builder
     */
    public UpdateAtsCompanyRequestBuilder updateAtsCompany() {
        return new UpdateAtsCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateAtsCompanyResponse>} - The async response
     */
    public CompletableFuture<UpdateAtsCompanyResponse> updateAtsCompany(UpdateAtsCompanyRequest request) {
        AsyncRequestOperation<UpdateAtsCompanyRequest, UpdateAtsCompanyResponse> operation
              = new UpdateAtsCompany.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a document
     * 
     * @return The async call builder
     */
    public UpdateAtsDocumentRequestBuilder updateAtsDocument() {
        return new UpdateAtsDocumentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a document
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateAtsDocumentResponse>} - The async response
     */
    public CompletableFuture<UpdateAtsDocumentResponse> updateAtsDocument(UpdateAtsDocumentRequest request) {
        AsyncRequestOperation<UpdateAtsDocumentRequest, UpdateAtsDocumentResponse> operation
              = new UpdateAtsDocument.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an interview
     * 
     * @return The async call builder
     */
    public UpdateAtsInterviewRequestBuilder updateAtsInterview() {
        return new UpdateAtsInterviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an interview
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateAtsInterviewResponse>} - The async response
     */
    public CompletableFuture<UpdateAtsInterviewResponse> updateAtsInterview(UpdateAtsInterviewRequest request) {
        AsyncRequestOperation<UpdateAtsInterviewRequest, UpdateAtsInterviewResponse> operation
              = new UpdateAtsInterview.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a job
     * 
     * @return The async call builder
     */
    public UpdateAtsJobRequestBuilder updateAtsJob() {
        return new UpdateAtsJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateAtsJobResponse>} - The async response
     */
    public CompletableFuture<UpdateAtsJobResponse> updateAtsJob(UpdateAtsJobRequest request) {
        AsyncRequestOperation<UpdateAtsJobRequest, UpdateAtsJobResponse> operation
              = new UpdateAtsJob.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a scorecard
     * 
     * @return The async call builder
     */
    public UpdateAtsScorecardRequestBuilder updateAtsScorecard() {
        return new UpdateAtsScorecardRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a scorecard
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateAtsScorecardResponse>} - The async response
     */
    public CompletableFuture<UpdateAtsScorecardResponse> updateAtsScorecard(UpdateAtsScorecardRequest request) {
        AsyncRequestOperation<UpdateAtsScorecardRequest, UpdateAtsScorecardResponse> operation
              = new UpdateAtsScorecard.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
