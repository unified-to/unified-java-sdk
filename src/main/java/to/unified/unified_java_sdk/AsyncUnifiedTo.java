/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;
/**
 * Unified.to API: One API to Rule Them All
 */
public class AsyncUnifiedTo {

    private final AsyncAccounting accounting;

    private final AsyncAccount account;

    private final AsyncBalancesheet balancesheet;

    private final AsyncBill bill;

    private final AsyncCategory category;

    private final AsyncContact contact;

    private final AsyncCreditmemo creditmemo;

    private final AsyncInvoice invoice;

    private final AsyncJournal journal;

    private final AsyncOrder order;

    private final AsyncOrganization organization;

    private final AsyncProfitloss profitloss;

    private final AsyncPurchaseorder purchaseorder;

    private final AsyncReport report;

    private final AsyncSalesorder salesorder;

    private final AsyncTaxrate taxrate;

    private final AsyncTransaction transaction;

    private final AsyncTrialbalance trialbalance;

    private final AsyncAts ats;

    private final AsyncActivity activity;

    private final AsyncApplication application;

    private final AsyncApplicationstatus applicationstatus;

    private final AsyncCandidate candidate;

    private final AsyncCompany company;

    private final AsyncDocument document;

    private final AsyncInterview interview;

    private final AsyncJob job;

    private final AsyncScorecard scorecard;

    private final AsyncCalendar calendar;

    private final AsyncBusy busy;

    private final AsyncEvent event;

    private final AsyncLink link;

    private final AsyncRecording recording;

    private final AsyncCommerce commerce;

    private final AsyncCollection collection;

    private final AsyncInventory inventory;

    private final AsyncItem item;

    private final AsyncLocation location;

    private final AsyncReview review;

    private final AsyncCrm crm;

    private final AsyncDeal deal;

    private final AsyncLead lead;

    private final AsyncPipeline pipeline;

    private final AsyncEnrich enrich;

    private final AsyncPerson person;

    private final AsyncGenai genai;

    private final AsyncEmbedding embedding;

    private final AsyncModel model;

    private final AsyncPrompt prompt;

    private final AsyncHris hris;

    private final AsyncDevice device;

    private final AsyncEmployee employee;

    private final AsyncGroup group;

    private final AsyncPayslip payslip;

    private final AsyncTimeoff timeoff;

    private final AsyncTimeshift timeshift;

    private final AsyncKms kms;

    private final AsyncComment comment;

    private final AsyncPage page;

    private final AsyncSpace space;

    private final AsyncLms lms;

    private final AsyncClass class_;

    private final AsyncCourse course;

    private final AsyncInstructor instructor;

    private final AsyncStudent student;

    private final AsyncMartech martech;

    private final AsyncList list;

    private final AsyncMember member;

    private final AsyncMessaging messaging;

    private final AsyncChannel channel;

    private final AsyncMessage message;

    private final AsyncMetadata metadata;

    private final AsyncPassthrough passthrough;

    private final AsyncPayment payment;

    private final AsyncPayout payout;

    private final AsyncRefund refund;

    private final AsyncSubscription subscription;

    private final AsyncRepo repo;

    private final AsyncBranch branch;

    private final AsyncCommit commit;

    private final AsyncPullrequest pullrequest;

    private final AsyncRepository repository;

    private final AsyncScim scim;

    private final AsyncUser user;

    private final AsyncStorage storage;

    private final AsyncFile file;

    private final AsyncTask task;

    private final AsyncChange change;

    private final AsyncProject project;

    private final AsyncTicketing ticketing;

    private final AsyncCustomer customer;

    private final AsyncNote note;

    private final AsyncTicket ticket;

    private final AsyncUc uc;

    private final AsyncCall call;

    private final AsyncUnified unified;

    private final AsyncApicall apicall;

    private final AsyncConnection connection;

    private final AsyncIntegration integration;

    private final AsyncAuth auth;

    private final AsyncLogin login;

    private final AsyncIssue issue;

    private final AsyncWebhook webhook;

    private final AsyncVerification verification;

    private final AsyncPackage package_;

    private final AsyncRequest request;

    public AsyncAccounting accounting() {
        return accounting;
    }

    public AsyncAccount account() {
        return account;
    }

    public AsyncBalancesheet balancesheet() {
        return balancesheet;
    }

    public AsyncBill bill() {
        return bill;
    }

    public AsyncCategory category() {
        return category;
    }

    public AsyncContact contact() {
        return contact;
    }

    public AsyncCreditmemo creditmemo() {
        return creditmemo;
    }

    public AsyncInvoice invoice() {
        return invoice;
    }

    public AsyncJournal journal() {
        return journal;
    }

    public AsyncOrder order() {
        return order;
    }

    public AsyncOrganization organization() {
        return organization;
    }

    public AsyncProfitloss profitloss() {
        return profitloss;
    }

    public AsyncPurchaseorder purchaseorder() {
        return purchaseorder;
    }

    public AsyncReport report() {
        return report;
    }

    public AsyncSalesorder salesorder() {
        return salesorder;
    }

    public AsyncTaxrate taxrate() {
        return taxrate;
    }

    public AsyncTransaction transaction() {
        return transaction;
    }

    public AsyncTrialbalance trialbalance() {
        return trialbalance;
    }

    public AsyncAts ats() {
        return ats;
    }

    public AsyncActivity activity() {
        return activity;
    }

    public AsyncApplication application() {
        return application;
    }

    public AsyncApplicationstatus applicationstatus() {
        return applicationstatus;
    }

    public AsyncCandidate candidate() {
        return candidate;
    }

    public AsyncCompany company() {
        return company;
    }

    public AsyncDocument document() {
        return document;
    }

    public AsyncInterview interview() {
        return interview;
    }

    public AsyncJob job() {
        return job;
    }

    public AsyncScorecard scorecard() {
        return scorecard;
    }

    public AsyncCalendar calendar() {
        return calendar;
    }

    public AsyncBusy busy() {
        return busy;
    }

    public AsyncEvent event() {
        return event;
    }

    public AsyncLink link() {
        return link;
    }

    public AsyncRecording recording() {
        return recording;
    }

    public AsyncCommerce commerce() {
        return commerce;
    }

    public AsyncCollection collection() {
        return collection;
    }

    public AsyncInventory inventory() {
        return inventory;
    }

    public AsyncItem item() {
        return item;
    }

    public AsyncLocation location() {
        return location;
    }

    public AsyncReview review() {
        return review;
    }

    public AsyncCrm crm() {
        return crm;
    }

    public AsyncDeal deal() {
        return deal;
    }

    public AsyncLead lead() {
        return lead;
    }

    public AsyncPipeline pipeline() {
        return pipeline;
    }

    public AsyncEnrich enrich() {
        return enrich;
    }

    public AsyncPerson person() {
        return person;
    }

    public AsyncGenai genai() {
        return genai;
    }

    public AsyncEmbedding embedding() {
        return embedding;
    }

    public AsyncModel model() {
        return model;
    }

    public AsyncPrompt prompt() {
        return prompt;
    }

    public AsyncHris hris() {
        return hris;
    }

    public AsyncDevice device() {
        return device;
    }

    public AsyncEmployee employee() {
        return employee;
    }

    public AsyncGroup group() {
        return group;
    }

    public AsyncPayslip payslip() {
        return payslip;
    }

    public AsyncTimeoff timeoff() {
        return timeoff;
    }

    public AsyncTimeshift timeshift() {
        return timeshift;
    }

    public AsyncKms kms() {
        return kms;
    }

    public AsyncComment comment() {
        return comment;
    }

    public AsyncPage page() {
        return page;
    }

    public AsyncSpace space() {
        return space;
    }

    public AsyncLms lms() {
        return lms;
    }

    public AsyncClass class_() {
        return class_;
    }

    public AsyncCourse course() {
        return course;
    }

    public AsyncInstructor instructor() {
        return instructor;
    }

    public AsyncStudent student() {
        return student;
    }

    public AsyncMartech martech() {
        return martech;
    }

    public AsyncList list() {
        return list;
    }

    public AsyncMember member() {
        return member;
    }

    public AsyncMessaging messaging() {
        return messaging;
    }

    public AsyncChannel channel() {
        return channel;
    }

    public AsyncMessage message() {
        return message;
    }

    public AsyncMetadata metadata() {
        return metadata;
    }

    public AsyncPassthrough passthrough() {
        return passthrough;
    }

    public AsyncPayment payment() {
        return payment;
    }

    public AsyncPayout payout() {
        return payout;
    }

    public AsyncRefund refund() {
        return refund;
    }

    public AsyncSubscription subscription() {
        return subscription;
    }

    public AsyncRepo repo() {
        return repo;
    }

    public AsyncBranch branch() {
        return branch;
    }

    public AsyncCommit commit() {
        return commit;
    }

    public AsyncPullrequest pullrequest() {
        return pullrequest;
    }

    public AsyncRepository repository() {
        return repository;
    }

    public AsyncScim scim() {
        return scim;
    }

    public AsyncUser user() {
        return user;
    }

    public AsyncStorage storage() {
        return storage;
    }

    public AsyncFile file() {
        return file;
    }

    public AsyncTask task() {
        return task;
    }

    public AsyncChange change() {
        return change;
    }

    public AsyncProject project() {
        return project;
    }

    public AsyncTicketing ticketing() {
        return ticketing;
    }

    public AsyncCustomer customer() {
        return customer;
    }

    public AsyncNote note() {
        return note;
    }

    public AsyncTicket ticket() {
        return ticket;
    }

    public AsyncUc uc() {
        return uc;
    }

    public AsyncCall call() {
        return call;
    }

    public AsyncUnified unified() {
        return unified;
    }

    public AsyncApicall apicall() {
        return apicall;
    }

    public AsyncConnection connection() {
        return connection;
    }

    public AsyncIntegration integration() {
        return integration;
    }

    public AsyncAuth auth() {
        return auth;
    }

    public AsyncLogin login() {
        return login;
    }

    public AsyncIssue issue() {
        return issue;
    }

    public AsyncWebhook webhook() {
        return webhook;
    }

    public AsyncVerification verification() {
        return verification;
    }

    public AsyncPackage package_() {
        return package_;
    }

    public AsyncRequest request() {
        return request;
    }

    private final SDKConfiguration sdkConfiguration;
    private final UnifiedTo syncSDK;

    AsyncUnifiedTo(UnifiedTo syncSDK, SDKConfiguration sdkConfiguration) {
        this.syncSDK = syncSDK;
        this.sdkConfiguration = sdkConfiguration;
        this.accounting = new AsyncAccounting(syncSDK.accounting(), sdkConfiguration);
        this.account = new AsyncAccount(syncSDK.account(), sdkConfiguration);
        this.balancesheet = new AsyncBalancesheet(syncSDK.balancesheet(), sdkConfiguration);
        this.bill = new AsyncBill(syncSDK.bill(), sdkConfiguration);
        this.category = new AsyncCategory(syncSDK.category(), sdkConfiguration);
        this.contact = new AsyncContact(syncSDK.contact(), sdkConfiguration);
        this.creditmemo = new AsyncCreditmemo(syncSDK.creditmemo(), sdkConfiguration);
        this.invoice = new AsyncInvoice(syncSDK.invoice(), sdkConfiguration);
        this.journal = new AsyncJournal(syncSDK.journal(), sdkConfiguration);
        this.order = new AsyncOrder(syncSDK.order(), sdkConfiguration);
        this.organization = new AsyncOrganization(syncSDK.organization(), sdkConfiguration);
        this.profitloss = new AsyncProfitloss(syncSDK.profitloss(), sdkConfiguration);
        this.purchaseorder = new AsyncPurchaseorder(syncSDK.purchaseorder(), sdkConfiguration);
        this.report = new AsyncReport(syncSDK.report(), sdkConfiguration);
        this.salesorder = new AsyncSalesorder(syncSDK.salesorder(), sdkConfiguration);
        this.taxrate = new AsyncTaxrate(syncSDK.taxrate(), sdkConfiguration);
        this.transaction = new AsyncTransaction(syncSDK.transaction(), sdkConfiguration);
        this.trialbalance = new AsyncTrialbalance(syncSDK.trialbalance(), sdkConfiguration);
        this.ats = new AsyncAts(syncSDK.ats(), sdkConfiguration);
        this.activity = new AsyncActivity(syncSDK.activity(), sdkConfiguration);
        this.application = new AsyncApplication(syncSDK.application(), sdkConfiguration);
        this.applicationstatus = new AsyncApplicationstatus(syncSDK.applicationstatus(), sdkConfiguration);
        this.candidate = new AsyncCandidate(syncSDK.candidate(), sdkConfiguration);
        this.company = new AsyncCompany(syncSDK.company(), sdkConfiguration);
        this.document = new AsyncDocument(syncSDK.document(), sdkConfiguration);
        this.interview = new AsyncInterview(syncSDK.interview(), sdkConfiguration);
        this.job = new AsyncJob(syncSDK.job(), sdkConfiguration);
        this.scorecard = new AsyncScorecard(syncSDK.scorecard(), sdkConfiguration);
        this.calendar = new AsyncCalendar(syncSDK.calendar(), sdkConfiguration);
        this.busy = new AsyncBusy(syncSDK.busy(), sdkConfiguration);
        this.event = new AsyncEvent(syncSDK.event(), sdkConfiguration);
        this.link = new AsyncLink(syncSDK.link(), sdkConfiguration);
        this.recording = new AsyncRecording(syncSDK.recording(), sdkConfiguration);
        this.commerce = new AsyncCommerce(syncSDK.commerce(), sdkConfiguration);
        this.collection = new AsyncCollection(syncSDK.collection(), sdkConfiguration);
        this.inventory = new AsyncInventory(syncSDK.inventory(), sdkConfiguration);
        this.item = new AsyncItem(syncSDK.item(), sdkConfiguration);
        this.location = new AsyncLocation(syncSDK.location(), sdkConfiguration);
        this.review = new AsyncReview(syncSDK.review(), sdkConfiguration);
        this.crm = new AsyncCrm(syncSDK.crm(), sdkConfiguration);
        this.deal = new AsyncDeal(syncSDK.deal(), sdkConfiguration);
        this.lead = new AsyncLead(syncSDK.lead(), sdkConfiguration);
        this.pipeline = new AsyncPipeline(syncSDK.pipeline(), sdkConfiguration);
        this.enrich = new AsyncEnrich(syncSDK.enrich(), sdkConfiguration);
        this.person = new AsyncPerson(syncSDK.person(), sdkConfiguration);
        this.genai = new AsyncGenai(syncSDK.genai(), sdkConfiguration);
        this.embedding = new AsyncEmbedding(syncSDK.embedding(), sdkConfiguration);
        this.model = new AsyncModel(syncSDK.model(), sdkConfiguration);
        this.prompt = new AsyncPrompt(syncSDK.prompt(), sdkConfiguration);
        this.hris = new AsyncHris(syncSDK.hris(), sdkConfiguration);
        this.device = new AsyncDevice(syncSDK.device(), sdkConfiguration);
        this.employee = new AsyncEmployee(syncSDK.employee(), sdkConfiguration);
        this.group = new AsyncGroup(syncSDK.group(), sdkConfiguration);
        this.payslip = new AsyncPayslip(syncSDK.payslip(), sdkConfiguration);
        this.timeoff = new AsyncTimeoff(syncSDK.timeoff(), sdkConfiguration);
        this.timeshift = new AsyncTimeshift(syncSDK.timeshift(), sdkConfiguration);
        this.kms = new AsyncKms(syncSDK.kms(), sdkConfiguration);
        this.comment = new AsyncComment(syncSDK.comment(), sdkConfiguration);
        this.page = new AsyncPage(syncSDK.page(), sdkConfiguration);
        this.space = new AsyncSpace(syncSDK.space(), sdkConfiguration);
        this.lms = new AsyncLms(syncSDK.lms(), sdkConfiguration);
        this.class_ = new AsyncClass(syncSDK.class_(), sdkConfiguration);
        this.course = new AsyncCourse(syncSDK.course(), sdkConfiguration);
        this.instructor = new AsyncInstructor(syncSDK.instructor(), sdkConfiguration);
        this.student = new AsyncStudent(syncSDK.student(), sdkConfiguration);
        this.martech = new AsyncMartech(syncSDK.martech(), sdkConfiguration);
        this.list = new AsyncList(syncSDK.list(), sdkConfiguration);
        this.member = new AsyncMember(syncSDK.member(), sdkConfiguration);
        this.messaging = new AsyncMessaging(syncSDK.messaging(), sdkConfiguration);
        this.channel = new AsyncChannel(syncSDK.channel(), sdkConfiguration);
        this.message = new AsyncMessage(syncSDK.message(), sdkConfiguration);
        this.metadata = new AsyncMetadata(syncSDK.metadata(), sdkConfiguration);
        this.passthrough = new AsyncPassthrough(syncSDK.passthrough(), sdkConfiguration);
        this.payment = new AsyncPayment(syncSDK.payment(), sdkConfiguration);
        this.payout = new AsyncPayout(syncSDK.payout(), sdkConfiguration);
        this.refund = new AsyncRefund(syncSDK.refund(), sdkConfiguration);
        this.subscription = new AsyncSubscription(syncSDK.subscription(), sdkConfiguration);
        this.repo = new AsyncRepo(syncSDK.repo(), sdkConfiguration);
        this.branch = new AsyncBranch(syncSDK.branch(), sdkConfiguration);
        this.commit = new AsyncCommit(syncSDK.commit(), sdkConfiguration);
        this.pullrequest = new AsyncPullrequest(syncSDK.pullrequest(), sdkConfiguration);
        this.repository = new AsyncRepository(syncSDK.repository(), sdkConfiguration);
        this.scim = new AsyncScim(syncSDK.scim(), sdkConfiguration);
        this.user = new AsyncUser(syncSDK.user(), sdkConfiguration);
        this.storage = new AsyncStorage(syncSDK.storage(), sdkConfiguration);
        this.file = new AsyncFile(syncSDK.file(), sdkConfiguration);
        this.task = new AsyncTask(syncSDK.task(), sdkConfiguration);
        this.change = new AsyncChange(syncSDK.change(), sdkConfiguration);
        this.project = new AsyncProject(syncSDK.project(), sdkConfiguration);
        this.ticketing = new AsyncTicketing(syncSDK.ticketing(), sdkConfiguration);
        this.customer = new AsyncCustomer(syncSDK.customer(), sdkConfiguration);
        this.note = new AsyncNote(syncSDK.note(), sdkConfiguration);
        this.ticket = new AsyncTicket(syncSDK.ticket(), sdkConfiguration);
        this.uc = new AsyncUc(syncSDK.uc(), sdkConfiguration);
        this.call = new AsyncCall(syncSDK.call(), sdkConfiguration);
        this.unified = new AsyncUnified(syncSDK.unified(), sdkConfiguration);
        this.apicall = new AsyncApicall(syncSDK.apicall(), sdkConfiguration);
        this.connection = new AsyncConnection(syncSDK.connection(), sdkConfiguration);
        this.integration = new AsyncIntegration(syncSDK.integration(), sdkConfiguration);
        this.auth = new AsyncAuth(syncSDK.auth(), sdkConfiguration);
        this.login = new AsyncLogin(syncSDK.login(), sdkConfiguration);
        this.issue = new AsyncIssue(syncSDK.issue(), sdkConfiguration);
        this.webhook = new AsyncWebhook(syncSDK.webhook(), sdkConfiguration);
        this.verification = new AsyncVerification(syncSDK.verification(), sdkConfiguration);
        this.package_ = new AsyncPackage(syncSDK.package_(), sdkConfiguration);
        this.request = new AsyncRequest(syncSDK.request(), sdkConfiguration);
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public UnifiedTo sync() {
        return syncSDK;
    }
}
