/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateGenaiEmbeddingRequest;
import to.unified.unified_java_sdk.models.operations.CreateGenaiPromptRequest;
import to.unified.unified_java_sdk.models.operations.GetGenaiModelRequest;
import to.unified.unified_java_sdk.models.operations.ListGenaiModelsRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateGenaiEmbeddingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateGenaiEmbeddingResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateGenaiPromptRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateGenaiPromptResponse;
import to.unified.unified_java_sdk.models.operations.async.GetGenaiModelRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetGenaiModelResponse;
import to.unified.unified_java_sdk.models.operations.async.ListGenaiModelsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListGenaiModelsResponse;
import to.unified.unified_java_sdk.operations.CreateGenaiEmbedding;
import to.unified.unified_java_sdk.operations.CreateGenaiPrompt;
import to.unified.unified_java_sdk.operations.GetGenaiModel;
import to.unified.unified_java_sdk.operations.ListGenaiModels;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncGenai {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Genai syncSDK;

    AsyncGenai(Genai syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Genai sync() {
        return syncSDK;
    }


    /**
     * Create an embedding
     * 
     * @return The async call builder
     */
    public CreateGenaiEmbeddingRequestBuilder createGenaiEmbedding() {
        return new CreateGenaiEmbeddingRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an embedding
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateGenaiEmbeddingResponse>} - The async response
     */
    public CompletableFuture<CreateGenaiEmbeddingResponse> createGenaiEmbedding(CreateGenaiEmbeddingRequest request) {
        AsyncRequestOperation<CreateGenaiEmbeddingRequest, CreateGenaiEmbeddingResponse> operation
              = new CreateGenaiEmbedding.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a prompt
     * 
     * @return The async call builder
     */
    public CreateGenaiPromptRequestBuilder createGenaiPrompt() {
        return new CreateGenaiPromptRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a prompt
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateGenaiPromptResponse>} - The async response
     */
    public CompletableFuture<CreateGenaiPromptResponse> createGenaiPrompt(CreateGenaiPromptRequest request) {
        AsyncRequestOperation<CreateGenaiPromptRequest, CreateGenaiPromptResponse> operation
              = new CreateGenaiPrompt.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a model
     * 
     * @return The async call builder
     */
    public GetGenaiModelRequestBuilder getGenaiModel() {
        return new GetGenaiModelRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a model
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetGenaiModelResponse>} - The async response
     */
    public CompletableFuture<GetGenaiModelResponse> getGenaiModel(GetGenaiModelRequest request) {
        AsyncRequestOperation<GetGenaiModelRequest, GetGenaiModelResponse> operation
              = new GetGenaiModel.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all models
     * 
     * @return The async call builder
     */
    public ListGenaiModelsRequestBuilder listGenaiModels() {
        return new ListGenaiModelsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all models
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListGenaiModelsResponse>} - The async response
     */
    public CompletableFuture<ListGenaiModelsResponse> listGenaiModels(ListGenaiModelsRequest request) {
        AsyncRequestOperation<ListGenaiModelsRequest, ListGenaiModelsResponse> operation
              = new ListGenaiModels.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
