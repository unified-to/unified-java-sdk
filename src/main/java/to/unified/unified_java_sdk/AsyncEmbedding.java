/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateGenaiEmbeddingRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateGenaiEmbeddingRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateGenaiEmbeddingResponse;
import to.unified.unified_java_sdk.operations.CreateGenaiEmbedding;


public class AsyncEmbedding {
    private final SDKConfiguration sdkConfiguration;
    private final Embedding syncSDK;

    AsyncEmbedding(Embedding syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Embedding sync() {
        return syncSDK;
    }


    /**
     * Create an embedding
     * 
     * @return The async call builder
     */
    public CreateGenaiEmbeddingRequestBuilder createGenaiEmbedding() {
        return new CreateGenaiEmbeddingRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an embedding
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateGenaiEmbeddingResponse&gt; - The async response
     */
    public CompletableFuture<CreateGenaiEmbeddingResponse> createGenaiEmbedding(CreateGenaiEmbeddingRequest request) {
        AsyncRequestOperation<CreateGenaiEmbeddingRequest, CreateGenaiEmbeddingResponse> operation
              = new CreateGenaiEmbedding.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
