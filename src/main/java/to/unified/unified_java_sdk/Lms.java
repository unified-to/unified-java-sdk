/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateLmsClassRequest;
import to.unified.unified_java_sdk.models.operations.CreateLmsClassRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateLmsClassResponse;
import to.unified.unified_java_sdk.models.operations.CreateLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.CreateLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.CreateLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.CreateLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.CreateLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.CreateLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateLmsStudentResponse;
import to.unified.unified_java_sdk.models.operations.GetLmsClassRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsClassRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetLmsClassResponse;
import to.unified.unified_java_sdk.models.operations.GetLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.GetLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.GetLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetLmsStudentResponse;
import to.unified.unified_java_sdk.models.operations.ListLmsClassesRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsClassesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListLmsClassesResponse;
import to.unified.unified_java_sdk.models.operations.ListLmsCoursesRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsCoursesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListLmsCoursesResponse;
import to.unified.unified_java_sdk.models.operations.ListLmsInstructorsRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsInstructorsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListLmsInstructorsResponse;
import to.unified.unified_java_sdk.models.operations.ListLmsStudentsRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsStudentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListLmsStudentsResponse;
import to.unified.unified_java_sdk.models.operations.PatchLmsClassRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsClassRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchLmsClassResponse;
import to.unified.unified_java_sdk.models.operations.PatchLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.PatchLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.PatchLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchLmsStudentResponse;
import to.unified.unified_java_sdk.models.operations.RemoveLmsClassRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsClassRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveLmsClassResponse;
import to.unified.unified_java_sdk.models.operations.RemoveLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.RemoveLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.RemoveLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveLmsStudentResponse;
import to.unified.unified_java_sdk.models.operations.UpdateLmsClassRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsClassRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateLmsClassResponse;
import to.unified.unified_java_sdk.models.operations.UpdateLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.UpdateLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.UpdateLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateLmsStudentResponse;
import to.unified.unified_java_sdk.operations.CreateLmsClass;
import to.unified.unified_java_sdk.operations.CreateLmsCourse;
import to.unified.unified_java_sdk.operations.CreateLmsInstructor;
import to.unified.unified_java_sdk.operations.CreateLmsStudent;
import to.unified.unified_java_sdk.operations.GetLmsClass;
import to.unified.unified_java_sdk.operations.GetLmsCourse;
import to.unified.unified_java_sdk.operations.GetLmsInstructor;
import to.unified.unified_java_sdk.operations.GetLmsStudent;
import to.unified.unified_java_sdk.operations.ListLmsClasses;
import to.unified.unified_java_sdk.operations.ListLmsCourses;
import to.unified.unified_java_sdk.operations.ListLmsInstructors;
import to.unified.unified_java_sdk.operations.ListLmsStudents;
import to.unified.unified_java_sdk.operations.PatchLmsClass;
import to.unified.unified_java_sdk.operations.PatchLmsCourse;
import to.unified.unified_java_sdk.operations.PatchLmsInstructor;
import to.unified.unified_java_sdk.operations.PatchLmsStudent;
import to.unified.unified_java_sdk.operations.RemoveLmsClass;
import to.unified.unified_java_sdk.operations.RemoveLmsCourse;
import to.unified.unified_java_sdk.operations.RemoveLmsInstructor;
import to.unified.unified_java_sdk.operations.RemoveLmsStudent;
import to.unified.unified_java_sdk.operations.UpdateLmsClass;
import to.unified.unified_java_sdk.operations.UpdateLmsCourse;
import to.unified.unified_java_sdk.operations.UpdateLmsInstructor;
import to.unified.unified_java_sdk.operations.UpdateLmsStudent;


public class Lms {
    private final SDKConfiguration sdkConfiguration;

    Lms(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a class
     * 
     * @return The call builder
     */
    public CreateLmsClassRequestBuilder createLmsClass() {
        return new CreateLmsClassRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a class
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateLmsClassResponse createLmsClass(CreateLmsClassRequest request) throws Exception {
        RequestOperation<CreateLmsClassRequest, CreateLmsClassResponse> operation
              = new CreateLmsClass.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a course
     * 
     * @return The call builder
     */
    public CreateLmsCourseRequestBuilder createLmsCourse() {
        return new CreateLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateLmsCourseResponse createLmsCourse(CreateLmsCourseRequest request) throws Exception {
        RequestOperation<CreateLmsCourseRequest, CreateLmsCourseResponse> operation
              = new CreateLmsCourse.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create an instructor
     * 
     * @return The call builder
     */
    public CreateLmsInstructorRequestBuilder createLmsInstructor() {
        return new CreateLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateLmsInstructorResponse createLmsInstructor(CreateLmsInstructorRequest request) throws Exception {
        RequestOperation<CreateLmsInstructorRequest, CreateLmsInstructorResponse> operation
              = new CreateLmsInstructor.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a student
     * 
     * @return The call builder
     */
    public CreateLmsStudentRequestBuilder createLmsStudent() {
        return new CreateLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateLmsStudentResponse createLmsStudent(CreateLmsStudentRequest request) throws Exception {
        RequestOperation<CreateLmsStudentRequest, CreateLmsStudentResponse> operation
              = new CreateLmsStudent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a class
     * 
     * @return The call builder
     */
    public GetLmsClassRequestBuilder getLmsClass() {
        return new GetLmsClassRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a class
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetLmsClassResponse getLmsClass(GetLmsClassRequest request) throws Exception {
        RequestOperation<GetLmsClassRequest, GetLmsClassResponse> operation
              = new GetLmsClass.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a course
     * 
     * @return The call builder
     */
    public GetLmsCourseRequestBuilder getLmsCourse() {
        return new GetLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetLmsCourseResponse getLmsCourse(GetLmsCourseRequest request) throws Exception {
        RequestOperation<GetLmsCourseRequest, GetLmsCourseResponse> operation
              = new GetLmsCourse.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an instructor
     * 
     * @return The call builder
     */
    public GetLmsInstructorRequestBuilder getLmsInstructor() {
        return new GetLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetLmsInstructorResponse getLmsInstructor(GetLmsInstructorRequest request) throws Exception {
        RequestOperation<GetLmsInstructorRequest, GetLmsInstructorResponse> operation
              = new GetLmsInstructor.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a student
     * 
     * @return The call builder
     */
    public GetLmsStudentRequestBuilder getLmsStudent() {
        return new GetLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetLmsStudentResponse getLmsStudent(GetLmsStudentRequest request) throws Exception {
        RequestOperation<GetLmsStudentRequest, GetLmsStudentResponse> operation
              = new GetLmsStudent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all classes
     * 
     * @return The call builder
     */
    public ListLmsClassesRequestBuilder listLmsClasses() {
        return new ListLmsClassesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all classes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListLmsClassesResponse listLmsClasses(ListLmsClassesRequest request) throws Exception {
        RequestOperation<ListLmsClassesRequest, ListLmsClassesResponse> operation
              = new ListLmsClasses.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all courses
     * 
     * @return The call builder
     */
    public ListLmsCoursesRequestBuilder listLmsCourses() {
        return new ListLmsCoursesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all courses
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListLmsCoursesResponse listLmsCourses(ListLmsCoursesRequest request) throws Exception {
        RequestOperation<ListLmsCoursesRequest, ListLmsCoursesResponse> operation
              = new ListLmsCourses.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all instructors
     * 
     * @return The call builder
     */
    public ListLmsInstructorsRequestBuilder listLmsInstructors() {
        return new ListLmsInstructorsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all instructors
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListLmsInstructorsResponse listLmsInstructors(ListLmsInstructorsRequest request) throws Exception {
        RequestOperation<ListLmsInstructorsRequest, ListLmsInstructorsResponse> operation
              = new ListLmsInstructors.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all students
     * 
     * @return The call builder
     */
    public ListLmsStudentsRequestBuilder listLmsStudents() {
        return new ListLmsStudentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all students
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListLmsStudentsResponse listLmsStudents(ListLmsStudentsRequest request) throws Exception {
        RequestOperation<ListLmsStudentsRequest, ListLmsStudentsResponse> operation
              = new ListLmsStudents.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a class
     * 
     * @return The call builder
     */
    public PatchLmsClassRequestBuilder patchLmsClass() {
        return new PatchLmsClassRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a class
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchLmsClassResponse patchLmsClass(PatchLmsClassRequest request) throws Exception {
        RequestOperation<PatchLmsClassRequest, PatchLmsClassResponse> operation
              = new PatchLmsClass.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a course
     * 
     * @return The call builder
     */
    public PatchLmsCourseRequestBuilder patchLmsCourse() {
        return new PatchLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchLmsCourseResponse patchLmsCourse(PatchLmsCourseRequest request) throws Exception {
        RequestOperation<PatchLmsCourseRequest, PatchLmsCourseResponse> operation
              = new PatchLmsCourse.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an instructor
     * 
     * @return The call builder
     */
    public PatchLmsInstructorRequestBuilder patchLmsInstructor() {
        return new PatchLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchLmsInstructorResponse patchLmsInstructor(PatchLmsInstructorRequest request) throws Exception {
        RequestOperation<PatchLmsInstructorRequest, PatchLmsInstructorResponse> operation
              = new PatchLmsInstructor.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a student
     * 
     * @return The call builder
     */
    public PatchLmsStudentRequestBuilder patchLmsStudent() {
        return new PatchLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchLmsStudentResponse patchLmsStudent(PatchLmsStudentRequest request) throws Exception {
        RequestOperation<PatchLmsStudentRequest, PatchLmsStudentResponse> operation
              = new PatchLmsStudent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a class
     * 
     * @return The call builder
     */
    public RemoveLmsClassRequestBuilder removeLmsClass() {
        return new RemoveLmsClassRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a class
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveLmsClassResponse removeLmsClass(RemoveLmsClassRequest request) throws Exception {
        RequestOperation<RemoveLmsClassRequest, RemoveLmsClassResponse> operation
              = new RemoveLmsClass.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a course
     * 
     * @return The call builder
     */
    public RemoveLmsCourseRequestBuilder removeLmsCourse() {
        return new RemoveLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveLmsCourseResponse removeLmsCourse(RemoveLmsCourseRequest request) throws Exception {
        RequestOperation<RemoveLmsCourseRequest, RemoveLmsCourseResponse> operation
              = new RemoveLmsCourse.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an instructor
     * 
     * @return The call builder
     */
    public RemoveLmsInstructorRequestBuilder removeLmsInstructor() {
        return new RemoveLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveLmsInstructorResponse removeLmsInstructor(RemoveLmsInstructorRequest request) throws Exception {
        RequestOperation<RemoveLmsInstructorRequest, RemoveLmsInstructorResponse> operation
              = new RemoveLmsInstructor.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a student
     * 
     * @return The call builder
     */
    public RemoveLmsStudentRequestBuilder removeLmsStudent() {
        return new RemoveLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveLmsStudentResponse removeLmsStudent(RemoveLmsStudentRequest request) throws Exception {
        RequestOperation<RemoveLmsStudentRequest, RemoveLmsStudentResponse> operation
              = new RemoveLmsStudent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a class
     * 
     * @return The call builder
     */
    public UpdateLmsClassRequestBuilder updateLmsClass() {
        return new UpdateLmsClassRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a class
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateLmsClassResponse updateLmsClass(UpdateLmsClassRequest request) throws Exception {
        RequestOperation<UpdateLmsClassRequest, UpdateLmsClassResponse> operation
              = new UpdateLmsClass.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a course
     * 
     * @return The call builder
     */
    public UpdateLmsCourseRequestBuilder updateLmsCourse() {
        return new UpdateLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateLmsCourseResponse updateLmsCourse(UpdateLmsCourseRequest request) throws Exception {
        RequestOperation<UpdateLmsCourseRequest, UpdateLmsCourseResponse> operation
              = new UpdateLmsCourse.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an instructor
     * 
     * @return The call builder
     */
    public UpdateLmsInstructorRequestBuilder updateLmsInstructor() {
        return new UpdateLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateLmsInstructorResponse updateLmsInstructor(UpdateLmsInstructorRequest request) throws Exception {
        RequestOperation<UpdateLmsInstructorRequest, UpdateLmsInstructorResponse> operation
              = new UpdateLmsInstructor.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a student
     * 
     * @return The call builder
     */
    public UpdateLmsStudentRequestBuilder updateLmsStudent() {
        return new UpdateLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateLmsStudentResponse updateLmsStudent(UpdateLmsStudentRequest request) throws Exception {
        RequestOperation<UpdateLmsStudentRequest, UpdateLmsStudentResponse> operation
              = new UpdateLmsStudent.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
