/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.GetScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.ListScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.PatchScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.RemoveScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.UpdateScimUsersRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.async.GetScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.async.ListScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveScimUsersResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateScimUsersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateScimUsersResponse;
import to.unified.unified_java_sdk.operations.CreateScimUsers;
import to.unified.unified_java_sdk.operations.GetScimUsers;
import to.unified.unified_java_sdk.operations.ListScimUsers;
import to.unified.unified_java_sdk.operations.PatchScimUsers;
import to.unified.unified_java_sdk.operations.RemoveScimUsers;
import to.unified.unified_java_sdk.operations.UpdateScimUsers;


public class AsyncUser {
    private final SDKConfiguration sdkConfiguration;
    private final User syncSDK;

    AsyncUser(User syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public User sync() {
        return syncSDK;
    }


    /**
     * Create user
     * 
     * @return The async call builder
     */
    public CreateScimUsersRequestBuilder createScimUsers() {
        return new CreateScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Create user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateScimUsersResponse&gt; - The async response
     */
    public CompletableFuture<CreateScimUsersResponse> createScimUsers(CreateScimUsersRequest request) {
        AsyncRequestOperation<CreateScimUsersRequest, CreateScimUsersResponse> operation
              = new CreateScimUsers.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get user
     * 
     * @return The async call builder
     */
    public GetScimUsersRequestBuilder getScimUsers() {
        return new GetScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Get user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetScimUsersResponse&gt; - The async response
     */
    public CompletableFuture<GetScimUsersResponse> getScimUsers(GetScimUsersRequest request) {
        AsyncRequestOperation<GetScimUsersRequest, GetScimUsersResponse> operation
              = new GetScimUsers.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List users
     * 
     * @return The async call builder
     */
    public ListScimUsersRequestBuilder listScimUsers() {
        return new ListScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * List users
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListScimUsersResponse&gt; - The async response
     */
    public CompletableFuture<ListScimUsersResponse> listScimUsers(ListScimUsersRequest request) {
        AsyncRequestOperation<ListScimUsersRequest, ListScimUsersResponse> operation
              = new ListScimUsers.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update user
     * 
     * @return The async call builder
     */
    public PatchScimUsersRequestBuilder patchScimUsers() {
        return new PatchScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Update user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchScimUsersResponse&gt; - The async response
     */
    public CompletableFuture<PatchScimUsersResponse> patchScimUsers(PatchScimUsersRequest request) {
        AsyncRequestOperation<PatchScimUsersRequest, PatchScimUsersResponse> operation
              = new PatchScimUsers.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Delete user
     * 
     * @return The async call builder
     */
    public RemoveScimUsersRequestBuilder removeScimUsers() {
        return new RemoveScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveScimUsersResponse&gt; - The async response
     */
    public CompletableFuture<RemoveScimUsersResponse> removeScimUsers(RemoveScimUsersRequest request) {
        AsyncRequestOperation<RemoveScimUsersRequest, RemoveScimUsersResponse> operation
              = new RemoveScimUsers.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update user
     * 
     * @return The async call builder
     */
    public UpdateScimUsersRequestBuilder updateScimUsers() {
        return new UpdateScimUsersRequestBuilder(sdkConfiguration);
    }

    /**
     * Update user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateScimUsersResponse&gt; - The async response
     */
    public CompletableFuture<UpdateScimUsersResponse> updateScimUsers(UpdateScimUsersRequest request) {
        AsyncRequestOperation<UpdateScimUsersRequest, UpdateScimUsersResponse> operation
              = new UpdateScimUsers.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
