/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.CreateHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.CreateHrisDeviceRequest;
import to.unified.unified_java_sdk.models.operations.CreateHrisDeviceRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateHrisDeviceResponse;
import to.unified.unified_java_sdk.models.operations.CreateHrisEmployeeRequest;
import to.unified.unified_java_sdk.models.operations.CreateHrisEmployeeRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateHrisEmployeeResponse;
import to.unified.unified_java_sdk.models.operations.CreateHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.CreateHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.CreateHrisLocationRequest;
import to.unified.unified_java_sdk.models.operations.CreateHrisLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateHrisLocationResponse;
import to.unified.unified_java_sdk.models.operations.CreateHrisTimeshiftRequest;
import to.unified.unified_java_sdk.models.operations.CreateHrisTimeshiftRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateHrisTimeshiftResponse;
import to.unified.unified_java_sdk.models.operations.GetHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.GetHrisDeviceRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisDeviceRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetHrisDeviceResponse;
import to.unified.unified_java_sdk.models.operations.GetHrisEmployeeRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisEmployeeRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetHrisEmployeeResponse;
import to.unified.unified_java_sdk.models.operations.GetHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.GetHrisLocationRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetHrisLocationResponse;
import to.unified.unified_java_sdk.models.operations.GetHrisPayslipRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisPayslipRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetHrisPayslipResponse;
import to.unified.unified_java_sdk.models.operations.GetHrisTimeoffRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisTimeoffRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetHrisTimeoffResponse;
import to.unified.unified_java_sdk.models.operations.GetHrisTimeshiftRequest;
import to.unified.unified_java_sdk.models.operations.GetHrisTimeshiftRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetHrisTimeshiftResponse;
import to.unified.unified_java_sdk.models.operations.ListHrisCompaniesRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisCompaniesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListHrisCompaniesResponse;
import to.unified.unified_java_sdk.models.operations.ListHrisDevicesRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisDevicesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListHrisDevicesResponse;
import to.unified.unified_java_sdk.models.operations.ListHrisEmployeesRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisEmployeesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListHrisEmployeesResponse;
import to.unified.unified_java_sdk.models.operations.ListHrisGroupsRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisGroupsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListHrisGroupsResponse;
import to.unified.unified_java_sdk.models.operations.ListHrisLocationsRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisLocationsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListHrisLocationsResponse;
import to.unified.unified_java_sdk.models.operations.ListHrisPayslipsRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisPayslipsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListHrisPayslipsResponse;
import to.unified.unified_java_sdk.models.operations.ListHrisTimeoffsRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisTimeoffsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListHrisTimeoffsResponse;
import to.unified.unified_java_sdk.models.operations.ListHrisTimeshiftsRequest;
import to.unified.unified_java_sdk.models.operations.ListHrisTimeshiftsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListHrisTimeshiftsResponse;
import to.unified.unified_java_sdk.models.operations.PatchHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.PatchHrisDeviceRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisDeviceRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchHrisDeviceResponse;
import to.unified.unified_java_sdk.models.operations.PatchHrisEmployeeRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisEmployeeRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchHrisEmployeeResponse;
import to.unified.unified_java_sdk.models.operations.PatchHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.PatchHrisLocationRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchHrisLocationResponse;
import to.unified.unified_java_sdk.models.operations.PatchHrisTimeshiftRequest;
import to.unified.unified_java_sdk.models.operations.PatchHrisTimeshiftRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchHrisTimeshiftResponse;
import to.unified.unified_java_sdk.models.operations.RemoveHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.RemoveHrisDeviceRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisDeviceRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveHrisDeviceResponse;
import to.unified.unified_java_sdk.models.operations.RemoveHrisEmployeeRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisEmployeeRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveHrisEmployeeResponse;
import to.unified.unified_java_sdk.models.operations.RemoveHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.RemoveHrisLocationRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveHrisLocationResponse;
import to.unified.unified_java_sdk.models.operations.RemoveHrisTimeshiftRequest;
import to.unified.unified_java_sdk.models.operations.RemoveHrisTimeshiftRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveHrisTimeshiftResponse;
import to.unified.unified_java_sdk.models.operations.UpdateHrisCompanyRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisCompanyRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateHrisCompanyResponse;
import to.unified.unified_java_sdk.models.operations.UpdateHrisDeviceRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisDeviceRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateHrisDeviceResponse;
import to.unified.unified_java_sdk.models.operations.UpdateHrisEmployeeRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisEmployeeRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateHrisEmployeeResponse;
import to.unified.unified_java_sdk.models.operations.UpdateHrisGroupRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisGroupRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateHrisGroupResponse;
import to.unified.unified_java_sdk.models.operations.UpdateHrisLocationRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateHrisLocationResponse;
import to.unified.unified_java_sdk.models.operations.UpdateHrisTimeshiftRequest;
import to.unified.unified_java_sdk.models.operations.UpdateHrisTimeshiftRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateHrisTimeshiftResponse;
import to.unified.unified_java_sdk.operations.CreateHrisCompanyOperation;
import to.unified.unified_java_sdk.operations.CreateHrisDeviceOperation;
import to.unified.unified_java_sdk.operations.CreateHrisEmployeeOperation;
import to.unified.unified_java_sdk.operations.CreateHrisGroupOperation;
import to.unified.unified_java_sdk.operations.CreateHrisLocationOperation;
import to.unified.unified_java_sdk.operations.CreateHrisTimeshiftOperation;
import to.unified.unified_java_sdk.operations.GetHrisCompanyOperation;
import to.unified.unified_java_sdk.operations.GetHrisDeviceOperation;
import to.unified.unified_java_sdk.operations.GetHrisEmployeeOperation;
import to.unified.unified_java_sdk.operations.GetHrisGroupOperation;
import to.unified.unified_java_sdk.operations.GetHrisLocationOperation;
import to.unified.unified_java_sdk.operations.GetHrisPayslipOperation;
import to.unified.unified_java_sdk.operations.GetHrisTimeoffOperation;
import to.unified.unified_java_sdk.operations.GetHrisTimeshiftOperation;
import to.unified.unified_java_sdk.operations.ListHrisCompaniesOperation;
import to.unified.unified_java_sdk.operations.ListHrisDevicesOperation;
import to.unified.unified_java_sdk.operations.ListHrisEmployeesOperation;
import to.unified.unified_java_sdk.operations.ListHrisGroupsOperation;
import to.unified.unified_java_sdk.operations.ListHrisLocationsOperation;
import to.unified.unified_java_sdk.operations.ListHrisPayslipsOperation;
import to.unified.unified_java_sdk.operations.ListHrisTimeoffsOperation;
import to.unified.unified_java_sdk.operations.ListHrisTimeshiftsOperation;
import to.unified.unified_java_sdk.operations.PatchHrisCompanyOperation;
import to.unified.unified_java_sdk.operations.PatchHrisDeviceOperation;
import to.unified.unified_java_sdk.operations.PatchHrisEmployeeOperation;
import to.unified.unified_java_sdk.operations.PatchHrisGroupOperation;
import to.unified.unified_java_sdk.operations.PatchHrisLocationOperation;
import to.unified.unified_java_sdk.operations.PatchHrisTimeshiftOperation;
import to.unified.unified_java_sdk.operations.RemoveHrisCompanyOperation;
import to.unified.unified_java_sdk.operations.RemoveHrisDeviceOperation;
import to.unified.unified_java_sdk.operations.RemoveHrisEmployeeOperation;
import to.unified.unified_java_sdk.operations.RemoveHrisGroupOperation;
import to.unified.unified_java_sdk.operations.RemoveHrisLocationOperation;
import to.unified.unified_java_sdk.operations.RemoveHrisTimeshiftOperation;
import to.unified.unified_java_sdk.operations.UpdateHrisCompanyOperation;
import to.unified.unified_java_sdk.operations.UpdateHrisDeviceOperation;
import to.unified.unified_java_sdk.operations.UpdateHrisEmployeeOperation;
import to.unified.unified_java_sdk.operations.UpdateHrisGroupOperation;
import to.unified.unified_java_sdk.operations.UpdateHrisLocationOperation;
import to.unified.unified_java_sdk.operations.UpdateHrisTimeshiftOperation;


public class Hris {
    private final SDKConfiguration sdkConfiguration;

    Hris(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a company
     * 
     * @return The call builder
     */
    public CreateHrisCompanyRequestBuilder createHrisCompany() {
        return new CreateHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateHrisCompanyResponse createHrisCompany(CreateHrisCompanyRequest request) throws Exception {
        RequestOperation<CreateHrisCompanyRequest, CreateHrisCompanyResponse> operation
              = new CreateHrisCompanyOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a device
     * 
     * @return The call builder
     */
    public CreateHrisDeviceRequestBuilder createHrisDevice() {
        return new CreateHrisDeviceRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a device
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateHrisDeviceResponse createHrisDevice(CreateHrisDeviceRequest request) throws Exception {
        RequestOperation<CreateHrisDeviceRequest, CreateHrisDeviceResponse> operation
              = new CreateHrisDeviceOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create an employee
     * 
     * @return The call builder
     */
    public CreateHrisEmployeeRequestBuilder createHrisEmployee() {
        return new CreateHrisEmployeeRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an employee
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateHrisEmployeeResponse createHrisEmployee(CreateHrisEmployeeRequest request) throws Exception {
        RequestOperation<CreateHrisEmployeeRequest, CreateHrisEmployeeResponse> operation
              = new CreateHrisEmployeeOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a group
     * 
     * @return The call builder
     */
    public CreateHrisGroupRequestBuilder createHrisGroup() {
        return new CreateHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateHrisGroupResponse createHrisGroup(CreateHrisGroupRequest request) throws Exception {
        RequestOperation<CreateHrisGroupRequest, CreateHrisGroupResponse> operation
              = new CreateHrisGroupOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a location
     * 
     * @return The call builder
     */
    public CreateHrisLocationRequestBuilder createHrisLocation() {
        return new CreateHrisLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateHrisLocationResponse createHrisLocation(CreateHrisLocationRequest request) throws Exception {
        RequestOperation<CreateHrisLocationRequest, CreateHrisLocationResponse> operation
              = new CreateHrisLocationOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a timeshift
     * 
     * @return The call builder
     */
    public CreateHrisTimeshiftRequestBuilder createHrisTimeshift() {
        return new CreateHrisTimeshiftRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a timeshift
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateHrisTimeshiftResponse createHrisTimeshift(CreateHrisTimeshiftRequest request) throws Exception {
        RequestOperation<CreateHrisTimeshiftRequest, CreateHrisTimeshiftResponse> operation
              = new CreateHrisTimeshiftOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a company
     * 
     * @return The call builder
     */
    public GetHrisCompanyRequestBuilder getHrisCompany() {
        return new GetHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetHrisCompanyResponse getHrisCompany(GetHrisCompanyRequest request) throws Exception {
        RequestOperation<GetHrisCompanyRequest, GetHrisCompanyResponse> operation
              = new GetHrisCompanyOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a device
     * 
     * @return The call builder
     */
    public GetHrisDeviceRequestBuilder getHrisDevice() {
        return new GetHrisDeviceRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a device
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetHrisDeviceResponse getHrisDevice(GetHrisDeviceRequest request) throws Exception {
        RequestOperation<GetHrisDeviceRequest, GetHrisDeviceResponse> operation
              = new GetHrisDeviceOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an employee
     * 
     * @return The call builder
     */
    public GetHrisEmployeeRequestBuilder getHrisEmployee() {
        return new GetHrisEmployeeRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an employee
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetHrisEmployeeResponse getHrisEmployee(GetHrisEmployeeRequest request) throws Exception {
        RequestOperation<GetHrisEmployeeRequest, GetHrisEmployeeResponse> operation
              = new GetHrisEmployeeOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a group
     * 
     * @return The call builder
     */
    public GetHrisGroupRequestBuilder getHrisGroup() {
        return new GetHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetHrisGroupResponse getHrisGroup(GetHrisGroupRequest request) throws Exception {
        RequestOperation<GetHrisGroupRequest, GetHrisGroupResponse> operation
              = new GetHrisGroupOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a location
     * 
     * @return The call builder
     */
    public GetHrisLocationRequestBuilder getHrisLocation() {
        return new GetHrisLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetHrisLocationResponse getHrisLocation(GetHrisLocationRequest request) throws Exception {
        RequestOperation<GetHrisLocationRequest, GetHrisLocationResponse> operation
              = new GetHrisLocationOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a payslip
     * 
     * @return The call builder
     */
    public GetHrisPayslipRequestBuilder getHrisPayslip() {
        return new GetHrisPayslipRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a payslip
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetHrisPayslipResponse getHrisPayslip(GetHrisPayslipRequest request) throws Exception {
        RequestOperation<GetHrisPayslipRequest, GetHrisPayslipResponse> operation
              = new GetHrisPayslipOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a timeoff
     * 
     * @return The call builder
     */
    public GetHrisTimeoffRequestBuilder getHrisTimeoff() {
        return new GetHrisTimeoffRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a timeoff
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetHrisTimeoffResponse getHrisTimeoff(GetHrisTimeoffRequest request) throws Exception {
        RequestOperation<GetHrisTimeoffRequest, GetHrisTimeoffResponse> operation
              = new GetHrisTimeoffOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a timeshift
     * 
     * @return The call builder
     */
    public GetHrisTimeshiftRequestBuilder getHrisTimeshift() {
        return new GetHrisTimeshiftRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a timeshift
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetHrisTimeshiftResponse getHrisTimeshift(GetHrisTimeshiftRequest request) throws Exception {
        RequestOperation<GetHrisTimeshiftRequest, GetHrisTimeshiftResponse> operation
              = new GetHrisTimeshiftOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all companies
     * 
     * @return The call builder
     */
    public ListHrisCompaniesRequestBuilder listHrisCompanies() {
        return new ListHrisCompaniesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all companies
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListHrisCompaniesResponse listHrisCompanies(ListHrisCompaniesRequest request) throws Exception {
        RequestOperation<ListHrisCompaniesRequest, ListHrisCompaniesResponse> operation
              = new ListHrisCompaniesOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all devices
     * 
     * @return The call builder
     */
    public ListHrisDevicesRequestBuilder listHrisDevices() {
        return new ListHrisDevicesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all devices
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListHrisDevicesResponse listHrisDevices(ListHrisDevicesRequest request) throws Exception {
        RequestOperation<ListHrisDevicesRequest, ListHrisDevicesResponse> operation
              = new ListHrisDevicesOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all employees
     * 
     * @return The call builder
     */
    public ListHrisEmployeesRequestBuilder listHrisEmployees() {
        return new ListHrisEmployeesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all employees
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListHrisEmployeesResponse listHrisEmployees(ListHrisEmployeesRequest request) throws Exception {
        RequestOperation<ListHrisEmployeesRequest, ListHrisEmployeesResponse> operation
              = new ListHrisEmployeesOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all groups
     * 
     * @return The call builder
     */
    public ListHrisGroupsRequestBuilder listHrisGroups() {
        return new ListHrisGroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all groups
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListHrisGroupsResponse listHrisGroups(ListHrisGroupsRequest request) throws Exception {
        RequestOperation<ListHrisGroupsRequest, ListHrisGroupsResponse> operation
              = new ListHrisGroupsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all locations
     * 
     * @return The call builder
     */
    public ListHrisLocationsRequestBuilder listHrisLocations() {
        return new ListHrisLocationsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all locations
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListHrisLocationsResponse listHrisLocations(ListHrisLocationsRequest request) throws Exception {
        RequestOperation<ListHrisLocationsRequest, ListHrisLocationsResponse> operation
              = new ListHrisLocationsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all payslips
     * 
     * @return The call builder
     */
    public ListHrisPayslipsRequestBuilder listHrisPayslips() {
        return new ListHrisPayslipsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all payslips
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListHrisPayslipsResponse listHrisPayslips(ListHrisPayslipsRequest request) throws Exception {
        RequestOperation<ListHrisPayslipsRequest, ListHrisPayslipsResponse> operation
              = new ListHrisPayslipsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all timeoffs
     * 
     * @return The call builder
     */
    public ListHrisTimeoffsRequestBuilder listHrisTimeoffs() {
        return new ListHrisTimeoffsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all timeoffs
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListHrisTimeoffsResponse listHrisTimeoffs(ListHrisTimeoffsRequest request) throws Exception {
        RequestOperation<ListHrisTimeoffsRequest, ListHrisTimeoffsResponse> operation
              = new ListHrisTimeoffsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all timeshifts
     * 
     * @return The call builder
     */
    public ListHrisTimeshiftsRequestBuilder listHrisTimeshifts() {
        return new ListHrisTimeshiftsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all timeshifts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListHrisTimeshiftsResponse listHrisTimeshifts(ListHrisTimeshiftsRequest request) throws Exception {
        RequestOperation<ListHrisTimeshiftsRequest, ListHrisTimeshiftsResponse> operation
              = new ListHrisTimeshiftsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a company
     * 
     * @return The call builder
     */
    public PatchHrisCompanyRequestBuilder patchHrisCompany() {
        return new PatchHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchHrisCompanyResponse patchHrisCompany(PatchHrisCompanyRequest request) throws Exception {
        RequestOperation<PatchHrisCompanyRequest, PatchHrisCompanyResponse> operation
              = new PatchHrisCompanyOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a device
     * 
     * @return The call builder
     */
    public PatchHrisDeviceRequestBuilder patchHrisDevice() {
        return new PatchHrisDeviceRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a device
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchHrisDeviceResponse patchHrisDevice(PatchHrisDeviceRequest request) throws Exception {
        RequestOperation<PatchHrisDeviceRequest, PatchHrisDeviceResponse> operation
              = new PatchHrisDeviceOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an employee
     * 
     * @return The call builder
     */
    public PatchHrisEmployeeRequestBuilder patchHrisEmployee() {
        return new PatchHrisEmployeeRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an employee
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchHrisEmployeeResponse patchHrisEmployee(PatchHrisEmployeeRequest request) throws Exception {
        RequestOperation<PatchHrisEmployeeRequest, PatchHrisEmployeeResponse> operation
              = new PatchHrisEmployeeOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a group
     * 
     * @return The call builder
     */
    public PatchHrisGroupRequestBuilder patchHrisGroup() {
        return new PatchHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchHrisGroupResponse patchHrisGroup(PatchHrisGroupRequest request) throws Exception {
        RequestOperation<PatchHrisGroupRequest, PatchHrisGroupResponse> operation
              = new PatchHrisGroupOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a location
     * 
     * @return The call builder
     */
    public PatchHrisLocationRequestBuilder patchHrisLocation() {
        return new PatchHrisLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchHrisLocationResponse patchHrisLocation(PatchHrisLocationRequest request) throws Exception {
        RequestOperation<PatchHrisLocationRequest, PatchHrisLocationResponse> operation
              = new PatchHrisLocationOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a timeshift
     * 
     * @return The call builder
     */
    public PatchHrisTimeshiftRequestBuilder patchHrisTimeshift() {
        return new PatchHrisTimeshiftRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a timeshift
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchHrisTimeshiftResponse patchHrisTimeshift(PatchHrisTimeshiftRequest request) throws Exception {
        RequestOperation<PatchHrisTimeshiftRequest, PatchHrisTimeshiftResponse> operation
              = new PatchHrisTimeshiftOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a company
     * 
     * @return The call builder
     */
    public RemoveHrisCompanyRequestBuilder removeHrisCompany() {
        return new RemoveHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveHrisCompanyResponse removeHrisCompany(RemoveHrisCompanyRequest request) throws Exception {
        RequestOperation<RemoveHrisCompanyRequest, RemoveHrisCompanyResponse> operation
              = new RemoveHrisCompanyOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a device
     * 
     * @return The call builder
     */
    public RemoveHrisDeviceRequestBuilder removeHrisDevice() {
        return new RemoveHrisDeviceRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a device
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveHrisDeviceResponse removeHrisDevice(RemoveHrisDeviceRequest request) throws Exception {
        RequestOperation<RemoveHrisDeviceRequest, RemoveHrisDeviceResponse> operation
              = new RemoveHrisDeviceOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an employee
     * 
     * @return The call builder
     */
    public RemoveHrisEmployeeRequestBuilder removeHrisEmployee() {
        return new RemoveHrisEmployeeRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an employee
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveHrisEmployeeResponse removeHrisEmployee(RemoveHrisEmployeeRequest request) throws Exception {
        RequestOperation<RemoveHrisEmployeeRequest, RemoveHrisEmployeeResponse> operation
              = new RemoveHrisEmployeeOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a group
     * 
     * @return The call builder
     */
    public RemoveHrisGroupRequestBuilder removeHrisGroup() {
        return new RemoveHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveHrisGroupResponse removeHrisGroup(RemoveHrisGroupRequest request) throws Exception {
        RequestOperation<RemoveHrisGroupRequest, RemoveHrisGroupResponse> operation
              = new RemoveHrisGroupOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a location
     * 
     * @return The call builder
     */
    public RemoveHrisLocationRequestBuilder removeHrisLocation() {
        return new RemoveHrisLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveHrisLocationResponse removeHrisLocation(RemoveHrisLocationRequest request) throws Exception {
        RequestOperation<RemoveHrisLocationRequest, RemoveHrisLocationResponse> operation
              = new RemoveHrisLocationOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a timeshift
     * 
     * @return The call builder
     */
    public RemoveHrisTimeshiftRequestBuilder removeHrisTimeshift() {
        return new RemoveHrisTimeshiftRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a timeshift
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveHrisTimeshiftResponse removeHrisTimeshift(RemoveHrisTimeshiftRequest request) throws Exception {
        RequestOperation<RemoveHrisTimeshiftRequest, RemoveHrisTimeshiftResponse> operation
              = new RemoveHrisTimeshiftOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a company
     * 
     * @return The call builder
     */
    public UpdateHrisCompanyRequestBuilder updateHrisCompany() {
        return new UpdateHrisCompanyRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a company
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateHrisCompanyResponse updateHrisCompany(UpdateHrisCompanyRequest request) throws Exception {
        RequestOperation<UpdateHrisCompanyRequest, UpdateHrisCompanyResponse> operation
              = new UpdateHrisCompanyOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a device
     * 
     * @return The call builder
     */
    public UpdateHrisDeviceRequestBuilder updateHrisDevice() {
        return new UpdateHrisDeviceRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a device
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateHrisDeviceResponse updateHrisDevice(UpdateHrisDeviceRequest request) throws Exception {
        RequestOperation<UpdateHrisDeviceRequest, UpdateHrisDeviceResponse> operation
              = new UpdateHrisDeviceOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an employee
     * 
     * @return The call builder
     */
    public UpdateHrisEmployeeRequestBuilder updateHrisEmployee() {
        return new UpdateHrisEmployeeRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an employee
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateHrisEmployeeResponse updateHrisEmployee(UpdateHrisEmployeeRequest request) throws Exception {
        RequestOperation<UpdateHrisEmployeeRequest, UpdateHrisEmployeeResponse> operation
              = new UpdateHrisEmployeeOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a group
     * 
     * @return The call builder
     */
    public UpdateHrisGroupRequestBuilder updateHrisGroup() {
        return new UpdateHrisGroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a group
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateHrisGroupResponse updateHrisGroup(UpdateHrisGroupRequest request) throws Exception {
        RequestOperation<UpdateHrisGroupRequest, UpdateHrisGroupResponse> operation
              = new UpdateHrisGroupOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a location
     * 
     * @return The call builder
     */
    public UpdateHrisLocationRequestBuilder updateHrisLocation() {
        return new UpdateHrisLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateHrisLocationResponse updateHrisLocation(UpdateHrisLocationRequest request) throws Exception {
        RequestOperation<UpdateHrisLocationRequest, UpdateHrisLocationResponse> operation
              = new UpdateHrisLocationOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a timeshift
     * 
     * @return The call builder
     */
    public UpdateHrisTimeshiftRequestBuilder updateHrisTimeshift() {
        return new UpdateHrisTimeshiftRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a timeshift
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateHrisTimeshiftResponse updateHrisTimeshift(UpdateHrisTimeshiftRequest request) throws Exception {
        RequestOperation<UpdateHrisTimeshiftRequest, UpdateHrisTimeshiftResponse> operation
              = new UpdateHrisTimeshiftOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
