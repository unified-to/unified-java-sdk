/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.CreateUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.GetUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.GetUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.ListUnifiedWebhooksRequest;
import to.unified.unified_java_sdk.models.operations.ListUnifiedWebhooksRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListUnifiedWebhooksResponse;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedWebhookTriggerRequest;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedWebhookTriggerRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchUnifiedWebhookTriggerResponse;
import to.unified.unified_java_sdk.models.operations.RemoveUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.RemoveUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedWebhookRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedWebhookRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedWebhookResponse;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedWebhookTriggerRequest;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedWebhookTriggerRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateUnifiedWebhookTriggerResponse;
import to.unified.unified_java_sdk.operations.CreateUnifiedWebhook;
import to.unified.unified_java_sdk.operations.GetUnifiedWebhook;
import to.unified.unified_java_sdk.operations.ListUnifiedWebhooks;
import to.unified.unified_java_sdk.operations.PatchUnifiedWebhook;
import to.unified.unified_java_sdk.operations.PatchUnifiedWebhookTrigger;
import to.unified.unified_java_sdk.operations.RemoveUnifiedWebhook;
import to.unified.unified_java_sdk.operations.UpdateUnifiedWebhook;
import to.unified.unified_java_sdk.operations.UpdateUnifiedWebhookTrigger;


public class Webhook {
    private final SDKConfiguration sdkConfiguration;

    Webhook(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create webhook subscription
     * 
     * <p>The data payload received by your server is described at https://docs.unified.to/unified/overview. The `interval` field can be set as low as 1 minute for paid accounts, and 60 minutes for free accounts.
     * 
     * @return The call builder
     */
    public CreateUnifiedWebhookRequestBuilder createUnifiedWebhook() {
        return new CreateUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Create webhook subscription
     * 
     * <p>The data payload received by your server is described at https://docs.unified.to/unified/overview. The `interval` field can be set as low as 1 minute for paid accounts, and 60 minutes for free accounts.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateUnifiedWebhookResponse createUnifiedWebhook(CreateUnifiedWebhookRequest request) throws Exception {
        RequestOperation<CreateUnifiedWebhookRequest, CreateUnifiedWebhookResponse> operation
              = new CreateUnifiedWebhook.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve webhook by its ID
     * 
     * @return The call builder
     */
    public GetUnifiedWebhookRequestBuilder getUnifiedWebhook() {
        return new GetUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve webhook by its ID
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetUnifiedWebhookResponse getUnifiedWebhook(GetUnifiedWebhookRequest request) throws Exception {
        RequestOperation<GetUnifiedWebhookRequest, GetUnifiedWebhookResponse> operation
              = new GetUnifiedWebhook.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Returns all registered webhooks
     * 
     * @return The call builder
     */
    public ListUnifiedWebhooksRequestBuilder listUnifiedWebhooks() {
        return new ListUnifiedWebhooksRequestBuilder(sdkConfiguration);
    }

    /**
     * Returns all registered webhooks
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListUnifiedWebhooksResponse listUnifiedWebhooks(ListUnifiedWebhooksRequest request) throws Exception {
        RequestOperation<ListUnifiedWebhooksRequest, ListUnifiedWebhooksResponse> operation
              = new ListUnifiedWebhooks.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update webhook subscription
     * 
     * @return The call builder
     */
    public PatchUnifiedWebhookRequestBuilder patchUnifiedWebhook() {
        return new PatchUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Update webhook subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchUnifiedWebhookResponse patchUnifiedWebhook(PatchUnifiedWebhookRequest request) throws Exception {
        RequestOperation<PatchUnifiedWebhookRequest, PatchUnifiedWebhookResponse> operation
              = new PatchUnifiedWebhook.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Trigger webhook
     * 
     * @return The call builder
     */
    public PatchUnifiedWebhookTriggerRequestBuilder patchUnifiedWebhookTrigger() {
        return new PatchUnifiedWebhookTriggerRequestBuilder(sdkConfiguration);
    }

    /**
     * Trigger webhook
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchUnifiedWebhookTriggerResponse patchUnifiedWebhookTrigger(PatchUnifiedWebhookTriggerRequest request) throws Exception {
        RequestOperation<PatchUnifiedWebhookTriggerRequest, PatchUnifiedWebhookTriggerResponse> operation
              = new PatchUnifiedWebhookTrigger.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove webhook subscription
     * 
     * @return The call builder
     */
    public RemoveUnifiedWebhookRequestBuilder removeUnifiedWebhook() {
        return new RemoveUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove webhook subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveUnifiedWebhookResponse removeUnifiedWebhook(RemoveUnifiedWebhookRequest request) throws Exception {
        RequestOperation<RemoveUnifiedWebhookRequest, RemoveUnifiedWebhookResponse> operation
              = new RemoveUnifiedWebhook.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update webhook subscription
     * 
     * @return The call builder
     */
    public UpdateUnifiedWebhookRequestBuilder updateUnifiedWebhook() {
        return new UpdateUnifiedWebhookRequestBuilder(sdkConfiguration);
    }

    /**
     * Update webhook subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateUnifiedWebhookResponse updateUnifiedWebhook(UpdateUnifiedWebhookRequest request) throws Exception {
        RequestOperation<UpdateUnifiedWebhookRequest, UpdateUnifiedWebhookResponse> operation
              = new UpdateUnifiedWebhook.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Trigger webhook
     * 
     * @return The call builder
     */
    public UpdateUnifiedWebhookTriggerRequestBuilder updateUnifiedWebhookTrigger() {
        return new UpdateUnifiedWebhookTriggerRequestBuilder(sdkConfiguration);
    }

    /**
     * Trigger webhook
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateUnifiedWebhookTriggerResponse updateUnifiedWebhookTrigger(UpdateUnifiedWebhookTriggerRequest request) throws Exception {
        RequestOperation<UpdateUnifiedWebhookTriggerRequest, UpdateUnifiedWebhookTriggerResponse> operation
              = new UpdateUnifiedWebhookTrigger.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
