/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import java.util.List;
import java.util.Optional;
import to.unified.unified_java_sdk.models.operations.CreateCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.CreateCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.CreateCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.CreateCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.CreateCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.CreateCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.CreateCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.CreateCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.CreateCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.CreateCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateCommerceReviewResponse;
import to.unified.unified_java_sdk.models.operations.GetCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.GetCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.GetCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.GetCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.GetCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.GetCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetCommerceReviewResponse;
import to.unified.unified_java_sdk.models.operations.ListCommerceCollectionsRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceCollectionsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCommerceCollectionsResponse;
import to.unified.unified_java_sdk.models.operations.ListCommerceInventoriesRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceInventoriesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCommerceInventoriesResponse;
import to.unified.unified_java_sdk.models.operations.ListCommerceItemsRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceItemsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCommerceItemsResponse;
import to.unified.unified_java_sdk.models.operations.ListCommerceLocationsRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceLocationsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCommerceLocationsResponse;
import to.unified.unified_java_sdk.models.operations.ListCommerceReviewsRequest;
import to.unified.unified_java_sdk.models.operations.ListCommerceReviewsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListCommerceReviewsResponse;
import to.unified.unified_java_sdk.models.operations.PatchCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.PatchCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.PatchCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.PatchCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.PatchCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.PatchCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchCommerceReviewResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveCommerceReviewResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceCollectionRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceCollectionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceCollectionResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceInventoryRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceInventoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceInventoryResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceItemRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceItemRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceItemResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceLocationRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceLocationRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceLocationResponse;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceReviewRequest;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceReviewRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateCommerceReviewResponse;
import to.unified.unified_java_sdk.operations.CreateCommerceCollectionOperation;
import to.unified.unified_java_sdk.operations.CreateCommerceInventoryOperation;
import to.unified.unified_java_sdk.operations.CreateCommerceItemOperation;
import to.unified.unified_java_sdk.operations.CreateCommerceLocationOperation;
import to.unified.unified_java_sdk.operations.CreateCommerceReviewOperation;
import to.unified.unified_java_sdk.operations.GetCommerceCollectionOperation;
import to.unified.unified_java_sdk.operations.GetCommerceInventoryOperation;
import to.unified.unified_java_sdk.operations.GetCommerceItemOperation;
import to.unified.unified_java_sdk.operations.GetCommerceLocationOperation;
import to.unified.unified_java_sdk.operations.GetCommerceReviewOperation;
import to.unified.unified_java_sdk.operations.ListCommerceCollectionsOperation;
import to.unified.unified_java_sdk.operations.ListCommerceInventoriesOperation;
import to.unified.unified_java_sdk.operations.ListCommerceItemsOperation;
import to.unified.unified_java_sdk.operations.ListCommerceLocationsOperation;
import to.unified.unified_java_sdk.operations.ListCommerceReviewsOperation;
import to.unified.unified_java_sdk.operations.PatchCommerceCollectionOperation;
import to.unified.unified_java_sdk.operations.PatchCommerceInventoryOperation;
import to.unified.unified_java_sdk.operations.PatchCommerceItemOperation;
import to.unified.unified_java_sdk.operations.PatchCommerceLocationOperation;
import to.unified.unified_java_sdk.operations.PatchCommerceReviewOperation;
import to.unified.unified_java_sdk.operations.RemoveCommerceCollectionOperation;
import to.unified.unified_java_sdk.operations.RemoveCommerceInventoryOperation;
import to.unified.unified_java_sdk.operations.RemoveCommerceItemOperation;
import to.unified.unified_java_sdk.operations.RemoveCommerceLocationOperation;
import to.unified.unified_java_sdk.operations.RemoveCommerceReviewOperation;
import to.unified.unified_java_sdk.operations.UpdateCommerceCollectionOperation;
import to.unified.unified_java_sdk.operations.UpdateCommerceInventoryOperation;
import to.unified.unified_java_sdk.operations.UpdateCommerceItemOperation;
import to.unified.unified_java_sdk.operations.UpdateCommerceLocationOperation;
import to.unified.unified_java_sdk.operations.UpdateCommerceReviewOperation;


public class Commerce {
    private final SDKConfiguration sdkConfiguration;

    Commerce(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a collection
     * 
     * @return The call builder
     */
    public CreateCommerceCollectionRequestBuilder createCommerceCollection() {
        return new CreateCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCommerceCollectionResponse createCommerceCollection(
            CreateCommerceCollectionRequest request) throws Exception {
        RequestOperation<CreateCommerceCollectionRequest, CreateCommerceCollectionResponse> operation
              = new CreateCommerceCollectionOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create an inventory
     * 
     * @return The call builder
     */
    public CreateCommerceInventoryRequestBuilder createCommerceInventory() {
        return new CreateCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCommerceInventoryResponse createCommerceInventory(
            CreateCommerceInventoryRequest request) throws Exception {
        RequestOperation<CreateCommerceInventoryRequest, CreateCommerceInventoryResponse> operation
              = new CreateCommerceInventoryOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create an item
     * 
     * @return The call builder
     */
    public CreateCommerceItemRequestBuilder createCommerceItem() {
        return new CreateCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCommerceItemResponse createCommerceItem(
            CreateCommerceItemRequest request) throws Exception {
        RequestOperation<CreateCommerceItemRequest, CreateCommerceItemResponse> operation
              = new CreateCommerceItemOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create a location
     * 
     * @return The call builder
     */
    public CreateCommerceLocationRequestBuilder createCommerceLocation() {
        return new CreateCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCommerceLocationResponse createCommerceLocation(
            CreateCommerceLocationRequest request) throws Exception {
        RequestOperation<CreateCommerceLocationRequest, CreateCommerceLocationResponse> operation
              = new CreateCommerceLocationOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Create a review
     * 
     * @return The call builder
     */
    public CreateCommerceReviewRequestBuilder createCommerceReview() {
        return new CreateCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateCommerceReviewResponse createCommerceReview(
            CreateCommerceReviewRequest request) throws Exception {
        RequestOperation<CreateCommerceReviewRequest, CreateCommerceReviewResponse> operation
              = new CreateCommerceReviewOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve a collection
     * 
     * @return The call builder
     */
    public GetCommerceCollectionRequestBuilder getCommerceCollection() {
        return new GetCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCommerceCollectionResponse getCommerceCollection(
            GetCommerceCollectionRequest request) throws Exception {
        RequestOperation<GetCommerceCollectionRequest, GetCommerceCollectionResponse> operation
              = new GetCommerceCollectionOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve an inventory
     * 
     * @return The call builder
     */
    public GetCommerceInventoryRequestBuilder getCommerceInventory() {
        return new GetCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCommerceInventoryResponse getCommerceInventory(
            GetCommerceInventoryRequest request) throws Exception {
        RequestOperation<GetCommerceInventoryRequest, GetCommerceInventoryResponse> operation
              = new GetCommerceInventoryOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve an item
     * 
     * @return The call builder
     */
    public GetCommerceItemRequestBuilder getCommerceItem() {
        return new GetCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCommerceItemResponse getCommerceItem(
            GetCommerceItemRequest request) throws Exception {
        RequestOperation<GetCommerceItemRequest, GetCommerceItemResponse> operation
              = new GetCommerceItemOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve a location
     * 
     * @return The call builder
     */
    public GetCommerceLocationRequestBuilder getCommerceLocation() {
        return new GetCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCommerceLocationResponse getCommerceLocation(
            GetCommerceLocationRequest request) throws Exception {
        RequestOperation<GetCommerceLocationRequest, GetCommerceLocationResponse> operation
              = new GetCommerceLocationOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve a review
     * 
     * @return The call builder
     */
    public GetCommerceReviewRequestBuilder getCommerceReview() {
        return new GetCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetCommerceReviewResponse getCommerceReview(
            GetCommerceReviewRequest request) throws Exception {
        RequestOperation<GetCommerceReviewRequest, GetCommerceReviewResponse> operation
              = new GetCommerceReviewOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all collections
     * 
     * @return The call builder
     */
    public ListCommerceCollectionsRequestBuilder listCommerceCollections() {
        return new ListCommerceCollectionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all collections
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCommerceCollectionsResponse listCommerceCollections(
            ListCommerceCollectionsRequest request) throws Exception {
        RequestOperation<ListCommerceCollectionsRequest, ListCommerceCollectionsResponse> operation
              = new ListCommerceCollectionsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all inventories
     * 
     * @return The call builder
     */
    public ListCommerceInventoriesRequestBuilder listCommerceInventories() {
        return new ListCommerceInventoriesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all inventories
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCommerceInventoriesResponse listCommerceInventories(
            ListCommerceInventoriesRequest request) throws Exception {
        RequestOperation<ListCommerceInventoriesRequest, ListCommerceInventoriesResponse> operation
              = new ListCommerceInventoriesOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all items
     * 
     * @return The call builder
     */
    public ListCommerceItemsRequestBuilder listCommerceItems() {
        return new ListCommerceItemsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all items
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCommerceItemsResponse listCommerceItems(
            ListCommerceItemsRequest request) throws Exception {
        RequestOperation<ListCommerceItemsRequest, ListCommerceItemsResponse> operation
              = new ListCommerceItemsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all locations
     * 
     * @return The call builder
     */
    public ListCommerceLocationsRequestBuilder listCommerceLocations() {
        return new ListCommerceLocationsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all locations
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCommerceLocationsResponse listCommerceLocations(
            ListCommerceLocationsRequest request) throws Exception {
        RequestOperation<ListCommerceLocationsRequest, ListCommerceLocationsResponse> operation
              = new ListCommerceLocationsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all reviews
     * 
     * @return The call builder
     */
    public ListCommerceReviewsRequestBuilder listCommerceReviews() {
        return new ListCommerceReviewsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all reviews
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCommerceReviewsResponse listCommerceReviews(
            ListCommerceReviewsRequest request) throws Exception {
        RequestOperation<ListCommerceReviewsRequest, ListCommerceReviewsResponse> operation
              = new ListCommerceReviewsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a collection
     * 
     * @return The call builder
     */
    public PatchCommerceCollectionRequestBuilder patchCommerceCollection() {
        return new PatchCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCommerceCollectionResponse patchCommerceCollection(
            PatchCommerceCollectionRequest request) throws Exception {
        RequestOperation<PatchCommerceCollectionRequest, PatchCommerceCollectionResponse> operation
              = new PatchCommerceCollectionOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update an inventory
     * 
     * @return The call builder
     */
    public PatchCommerceInventoryRequestBuilder patchCommerceInventory() {
        return new PatchCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCommerceInventoryResponse patchCommerceInventory(
            PatchCommerceInventoryRequest request) throws Exception {
        RequestOperation<PatchCommerceInventoryRequest, PatchCommerceInventoryResponse> operation
              = new PatchCommerceInventoryOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update an item
     * 
     * @return The call builder
     */
    public PatchCommerceItemRequestBuilder patchCommerceItem() {
        return new PatchCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCommerceItemResponse patchCommerceItem(
            PatchCommerceItemRequest request) throws Exception {
        RequestOperation<PatchCommerceItemRequest, PatchCommerceItemResponse> operation
              = new PatchCommerceItemOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a location
     * 
     * @return The call builder
     */
    public PatchCommerceLocationRequestBuilder patchCommerceLocation() {
        return new PatchCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCommerceLocationResponse patchCommerceLocation(
            PatchCommerceLocationRequest request) throws Exception {
        RequestOperation<PatchCommerceLocationRequest, PatchCommerceLocationResponse> operation
              = new PatchCommerceLocationOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a review
     * 
     * @return The call builder
     */
    public PatchCommerceReviewRequestBuilder patchCommerceReview() {
        return new PatchCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchCommerceReviewResponse patchCommerceReview(
            PatchCommerceReviewRequest request) throws Exception {
        RequestOperation<PatchCommerceReviewRequest, PatchCommerceReviewResponse> operation
              = new PatchCommerceReviewOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove a collection
     * 
     * @return The call builder
     */
    public RemoveCommerceCollectionRequestBuilder removeCommerceCollection() {
        return new RemoveCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCommerceCollectionResponse removeCommerceCollection(
            RemoveCommerceCollectionRequest request) throws Exception {
        RequestOperation<RemoveCommerceCollectionRequest, RemoveCommerceCollectionResponse> operation
              = new RemoveCommerceCollectionOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove an inventory
     * 
     * @return The call builder
     */
    public RemoveCommerceInventoryRequestBuilder removeCommerceInventory() {
        return new RemoveCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCommerceInventoryResponse removeCommerceInventory(
            RemoveCommerceInventoryRequest request) throws Exception {
        RequestOperation<RemoveCommerceInventoryRequest, RemoveCommerceInventoryResponse> operation
              = new RemoveCommerceInventoryOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove an item
     * 
     * @return The call builder
     */
    public RemoveCommerceItemRequestBuilder removeCommerceItem() {
        return new RemoveCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCommerceItemResponse removeCommerceItem(
            RemoveCommerceItemRequest request) throws Exception {
        RequestOperation<RemoveCommerceItemRequest, RemoveCommerceItemResponse> operation
              = new RemoveCommerceItemOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove a location
     * 
     * @return The call builder
     */
    public RemoveCommerceLocationRequestBuilder removeCommerceLocation() {
        return new RemoveCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCommerceLocationResponse removeCommerceLocation(
            RemoveCommerceLocationRequest request) throws Exception {
        RequestOperation<RemoveCommerceLocationRequest, RemoveCommerceLocationResponse> operation
              = new RemoveCommerceLocationOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove a review
     * 
     * @return The call builder
     */
    public RemoveCommerceReviewRequestBuilder removeCommerceReview() {
        return new RemoveCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveCommerceReviewResponse removeCommerceReview(
            RemoveCommerceReviewRequest request) throws Exception {
        RequestOperation<RemoveCommerceReviewRequest, RemoveCommerceReviewResponse> operation
              = new RemoveCommerceReviewOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a collection
     * 
     * @return The call builder
     */
    public UpdateCommerceCollectionRequestBuilder updateCommerceCollection() {
        return new UpdateCommerceCollectionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a collection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCommerceCollectionResponse updateCommerceCollection(
            UpdateCommerceCollectionRequest request) throws Exception {
        RequestOperation<UpdateCommerceCollectionRequest, UpdateCommerceCollectionResponse> operation
              = new UpdateCommerceCollectionOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update an inventory
     * 
     * @return The call builder
     */
    public UpdateCommerceInventoryRequestBuilder updateCommerceInventory() {
        return new UpdateCommerceInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an inventory
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCommerceInventoryResponse updateCommerceInventory(
            UpdateCommerceInventoryRequest request) throws Exception {
        RequestOperation<UpdateCommerceInventoryRequest, UpdateCommerceInventoryResponse> operation
              = new UpdateCommerceInventoryOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update an item
     * 
     * @return The call builder
     */
    public UpdateCommerceItemRequestBuilder updateCommerceItem() {
        return new UpdateCommerceItemRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an item
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCommerceItemResponse updateCommerceItem(
            UpdateCommerceItemRequest request) throws Exception {
        RequestOperation<UpdateCommerceItemRequest, UpdateCommerceItemResponse> operation
              = new UpdateCommerceItemOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a location
     * 
     * @return The call builder
     */
    public UpdateCommerceLocationRequestBuilder updateCommerceLocation() {
        return new UpdateCommerceLocationRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a location
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCommerceLocationResponse updateCommerceLocation(
            UpdateCommerceLocationRequest request) throws Exception {
        RequestOperation<UpdateCommerceLocationRequest, UpdateCommerceLocationResponse> operation
              = new UpdateCommerceLocationOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a review
     * 
     * @return The call builder
     */
    public UpdateCommerceReviewRequestBuilder updateCommerceReview() {
        return new UpdateCommerceReviewRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a review
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateCommerceReviewResponse updateCommerceReview(
            UpdateCommerceReviewRequest request) throws Exception {
        RequestOperation<UpdateCommerceReviewRequest, UpdateCommerceReviewResponse> operation
              = new UpdateCommerceReviewOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
