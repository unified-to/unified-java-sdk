/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateRepoPullrequestRequest;
import to.unified.unified_java_sdk.models.operations.GetRepoPullrequestRequest;
import to.unified.unified_java_sdk.models.operations.ListRepoPullrequestsRequest;
import to.unified.unified_java_sdk.models.operations.PatchRepoPullrequestRequest;
import to.unified.unified_java_sdk.models.operations.RemoveRepoPullrequestRequest;
import to.unified.unified_java_sdk.models.operations.UpdateRepoPullrequestRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateRepoPullrequestRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateRepoPullrequestResponse;
import to.unified.unified_java_sdk.models.operations.async.GetRepoPullrequestRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetRepoPullrequestResponse;
import to.unified.unified_java_sdk.models.operations.async.ListRepoPullrequestsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListRepoPullrequestsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchRepoPullrequestRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchRepoPullrequestResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveRepoPullrequestRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveRepoPullrequestResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateRepoPullrequestRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateRepoPullrequestResponse;
import to.unified.unified_java_sdk.operations.CreateRepoPullrequest;
import to.unified.unified_java_sdk.operations.GetRepoPullrequest;
import to.unified.unified_java_sdk.operations.ListRepoPullrequests;
import to.unified.unified_java_sdk.operations.PatchRepoPullrequest;
import to.unified.unified_java_sdk.operations.RemoveRepoPullrequest;
import to.unified.unified_java_sdk.operations.UpdateRepoPullrequest;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncPullrequest {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Pullrequest syncSDK;

    AsyncPullrequest(Pullrequest syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Pullrequest sync() {
        return syncSDK;
    }


    /**
     * Create a pullrequest
     * 
     * @return The async call builder
     */
    public CreateRepoPullrequestRequestBuilder createRepoPullrequest() {
        return new CreateRepoPullrequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a pullrequest
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateRepoPullrequestResponse>} - The async response
     */
    public CompletableFuture<CreateRepoPullrequestResponse> createRepoPullrequest(CreateRepoPullrequestRequest request) {
        AsyncRequestOperation<CreateRepoPullrequestRequest, CreateRepoPullrequestResponse> operation
              = new CreateRepoPullrequest.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a pullrequest
     * 
     * @return The async call builder
     */
    public GetRepoPullrequestRequestBuilder getRepoPullrequest() {
        return new GetRepoPullrequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a pullrequest
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetRepoPullrequestResponse>} - The async response
     */
    public CompletableFuture<GetRepoPullrequestResponse> getRepoPullrequest(GetRepoPullrequestRequest request) {
        AsyncRequestOperation<GetRepoPullrequestRequest, GetRepoPullrequestResponse> operation
              = new GetRepoPullrequest.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all pullrequests
     * 
     * @return The async call builder
     */
    public ListRepoPullrequestsRequestBuilder listRepoPullrequests() {
        return new ListRepoPullrequestsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all pullrequests
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListRepoPullrequestsResponse>} - The async response
     */
    public CompletableFuture<ListRepoPullrequestsResponse> listRepoPullrequests(ListRepoPullrequestsRequest request) {
        AsyncRequestOperation<ListRepoPullrequestsRequest, ListRepoPullrequestsResponse> operation
              = new ListRepoPullrequests.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a pullrequest
     * 
     * @return The async call builder
     */
    public PatchRepoPullrequestRequestBuilder patchRepoPullrequest() {
        return new PatchRepoPullrequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a pullrequest
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchRepoPullrequestResponse>} - The async response
     */
    public CompletableFuture<PatchRepoPullrequestResponse> patchRepoPullrequest(PatchRepoPullrequestRequest request) {
        AsyncRequestOperation<PatchRepoPullrequestRequest, PatchRepoPullrequestResponse> operation
              = new PatchRepoPullrequest.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a pullrequest
     * 
     * @return The async call builder
     */
    public RemoveRepoPullrequestRequestBuilder removeRepoPullrequest() {
        return new RemoveRepoPullrequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a pullrequest
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveRepoPullrequestResponse>} - The async response
     */
    public CompletableFuture<RemoveRepoPullrequestResponse> removeRepoPullrequest(RemoveRepoPullrequestRequest request) {
        AsyncRequestOperation<RemoveRepoPullrequestRequest, RemoveRepoPullrequestResponse> operation
              = new RemoveRepoPullrequest.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a pullrequest
     * 
     * @return The async call builder
     */
    public UpdateRepoPullrequestRequestBuilder updateRepoPullrequest() {
        return new UpdateRepoPullrequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a pullrequest
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateRepoPullrequestResponse>} - The async response
     */
    public CompletableFuture<UpdateRepoPullrequestResponse> updateRepoPullrequest(UpdateRepoPullrequestRequest request) {
        AsyncRequestOperation<UpdateRepoPullrequestRequest, UpdateRepoPullrequestResponse> operation
              = new UpdateRepoPullrequest.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
