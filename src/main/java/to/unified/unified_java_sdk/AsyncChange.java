/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.GetTaskChangeRequest;
import to.unified.unified_java_sdk.models.operations.ListTaskChangesRequest;
import to.unified.unified_java_sdk.models.operations.async.GetTaskChangeRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetTaskChangeResponse;
import to.unified.unified_java_sdk.models.operations.async.ListTaskChangesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListTaskChangesResponse;
import to.unified.unified_java_sdk.operations.GetTaskChange;
import to.unified.unified_java_sdk.operations.ListTaskChanges;


public class AsyncChange {
    private final SDKConfiguration sdkConfiguration;
    private final Change syncSDK;

    AsyncChange(Change syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Change sync() {
        return syncSDK;
    }


    /**
     * Retrieve a change
     * 
     * @return The async call builder
     */
    public GetTaskChangeRequestBuilder getTaskChange() {
        return new GetTaskChangeRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a change
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetTaskChangeResponse&gt; - The async response
     */
    public CompletableFuture<GetTaskChangeResponse> getTaskChange(GetTaskChangeRequest request) {
        AsyncRequestOperation<GetTaskChangeRequest, GetTaskChangeResponse> operation
              = new GetTaskChange.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all changes
     * 
     * @return The async call builder
     */
    public ListTaskChangesRequestBuilder listTaskChanges() {
        return new ListTaskChangesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all changes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListTaskChangesResponse&gt; - The async response
     */
    public CompletableFuture<ListTaskChangesResponse> listTaskChanges(ListTaskChangesRequest request) {
        AsyncRequestOperation<ListTaskChangesRequest, ListTaskChangesResponse> operation
              = new ListTaskChanges.Async(sdkConfiguration);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
