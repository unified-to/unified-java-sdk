/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateLmsClassRequest;
import to.unified.unified_java_sdk.models.operations.CreateLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.CreateLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.CreateLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsClassRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.GetLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsClassesRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsCoursesRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsInstructorsRequest;
import to.unified.unified_java_sdk.models.operations.ListLmsStudentsRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsClassRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.PatchLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsClassRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.RemoveLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsClassRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsCourseRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsInstructorRequest;
import to.unified.unified_java_sdk.models.operations.UpdateLmsStudentRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateLmsClassRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateLmsClassResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateLmsStudentResponse;
import to.unified.unified_java_sdk.models.operations.async.GetLmsClassRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetLmsClassResponse;
import to.unified.unified_java_sdk.models.operations.async.GetLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.async.GetLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.async.GetLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetLmsStudentResponse;
import to.unified.unified_java_sdk.models.operations.async.ListLmsClassesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListLmsClassesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListLmsCoursesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListLmsCoursesResponse;
import to.unified.unified_java_sdk.models.operations.async.ListLmsInstructorsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListLmsInstructorsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListLmsStudentsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListLmsStudentsResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchLmsClassRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchLmsClassResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchLmsStudentResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveLmsClassRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveLmsClassResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveLmsStudentResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateLmsClassRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateLmsClassResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateLmsCourseRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateLmsCourseResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateLmsInstructorRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateLmsInstructorResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateLmsStudentRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateLmsStudentResponse;
import to.unified.unified_java_sdk.operations.CreateLmsClass;
import to.unified.unified_java_sdk.operations.CreateLmsCourse;
import to.unified.unified_java_sdk.operations.CreateLmsInstructor;
import to.unified.unified_java_sdk.operations.CreateLmsStudent;
import to.unified.unified_java_sdk.operations.GetLmsClass;
import to.unified.unified_java_sdk.operations.GetLmsCourse;
import to.unified.unified_java_sdk.operations.GetLmsInstructor;
import to.unified.unified_java_sdk.operations.GetLmsStudent;
import to.unified.unified_java_sdk.operations.ListLmsClasses;
import to.unified.unified_java_sdk.operations.ListLmsCourses;
import to.unified.unified_java_sdk.operations.ListLmsInstructors;
import to.unified.unified_java_sdk.operations.ListLmsStudents;
import to.unified.unified_java_sdk.operations.PatchLmsClass;
import to.unified.unified_java_sdk.operations.PatchLmsCourse;
import to.unified.unified_java_sdk.operations.PatchLmsInstructor;
import to.unified.unified_java_sdk.operations.PatchLmsStudent;
import to.unified.unified_java_sdk.operations.RemoveLmsClass;
import to.unified.unified_java_sdk.operations.RemoveLmsCourse;
import to.unified.unified_java_sdk.operations.RemoveLmsInstructor;
import to.unified.unified_java_sdk.operations.RemoveLmsStudent;
import to.unified.unified_java_sdk.operations.UpdateLmsClass;
import to.unified.unified_java_sdk.operations.UpdateLmsCourse;
import to.unified.unified_java_sdk.operations.UpdateLmsInstructor;
import to.unified.unified_java_sdk.operations.UpdateLmsStudent;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncLms {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Lms syncSDK;

    AsyncLms(Lms syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Lms sync() {
        return syncSDK;
    }


    /**
     * Create a class
     * 
     * @return The async call builder
     */
    public CreateLmsClassRequestBuilder createLmsClass() {
        return new CreateLmsClassRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a class
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateLmsClassResponse>} - The async response
     */
    public CompletableFuture<CreateLmsClassResponse> createLmsClass(CreateLmsClassRequest request) {
        AsyncRequestOperation<CreateLmsClassRequest, CreateLmsClassResponse> operation
              = new CreateLmsClass.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a course
     * 
     * @return The async call builder
     */
    public CreateLmsCourseRequestBuilder createLmsCourse() {
        return new CreateLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateLmsCourseResponse>} - The async response
     */
    public CompletableFuture<CreateLmsCourseResponse> createLmsCourse(CreateLmsCourseRequest request) {
        AsyncRequestOperation<CreateLmsCourseRequest, CreateLmsCourseResponse> operation
              = new CreateLmsCourse.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create an instructor
     * 
     * @return The async call builder
     */
    public CreateLmsInstructorRequestBuilder createLmsInstructor() {
        return new CreateLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateLmsInstructorResponse>} - The async response
     */
    public CompletableFuture<CreateLmsInstructorResponse> createLmsInstructor(CreateLmsInstructorRequest request) {
        AsyncRequestOperation<CreateLmsInstructorRequest, CreateLmsInstructorResponse> operation
              = new CreateLmsInstructor.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a student
     * 
     * @return The async call builder
     */
    public CreateLmsStudentRequestBuilder createLmsStudent() {
        return new CreateLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateLmsStudentResponse>} - The async response
     */
    public CompletableFuture<CreateLmsStudentResponse> createLmsStudent(CreateLmsStudentRequest request) {
        AsyncRequestOperation<CreateLmsStudentRequest, CreateLmsStudentResponse> operation
              = new CreateLmsStudent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a class
     * 
     * @return The async call builder
     */
    public GetLmsClassRequestBuilder getLmsClass() {
        return new GetLmsClassRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a class
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetLmsClassResponse>} - The async response
     */
    public CompletableFuture<GetLmsClassResponse> getLmsClass(GetLmsClassRequest request) {
        AsyncRequestOperation<GetLmsClassRequest, GetLmsClassResponse> operation
              = new GetLmsClass.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a course
     * 
     * @return The async call builder
     */
    public GetLmsCourseRequestBuilder getLmsCourse() {
        return new GetLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetLmsCourseResponse>} - The async response
     */
    public CompletableFuture<GetLmsCourseResponse> getLmsCourse(GetLmsCourseRequest request) {
        AsyncRequestOperation<GetLmsCourseRequest, GetLmsCourseResponse> operation
              = new GetLmsCourse.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve an instructor
     * 
     * @return The async call builder
     */
    public GetLmsInstructorRequestBuilder getLmsInstructor() {
        return new GetLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetLmsInstructorResponse>} - The async response
     */
    public CompletableFuture<GetLmsInstructorResponse> getLmsInstructor(GetLmsInstructorRequest request) {
        AsyncRequestOperation<GetLmsInstructorRequest, GetLmsInstructorResponse> operation
              = new GetLmsInstructor.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a student
     * 
     * @return The async call builder
     */
    public GetLmsStudentRequestBuilder getLmsStudent() {
        return new GetLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetLmsStudentResponse>} - The async response
     */
    public CompletableFuture<GetLmsStudentResponse> getLmsStudent(GetLmsStudentRequest request) {
        AsyncRequestOperation<GetLmsStudentRequest, GetLmsStudentResponse> operation
              = new GetLmsStudent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all classes
     * 
     * @return The async call builder
     */
    public ListLmsClassesRequestBuilder listLmsClasses() {
        return new ListLmsClassesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all classes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListLmsClassesResponse>} - The async response
     */
    public CompletableFuture<ListLmsClassesResponse> listLmsClasses(ListLmsClassesRequest request) {
        AsyncRequestOperation<ListLmsClassesRequest, ListLmsClassesResponse> operation
              = new ListLmsClasses.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all courses
     * 
     * @return The async call builder
     */
    public ListLmsCoursesRequestBuilder listLmsCourses() {
        return new ListLmsCoursesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all courses
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListLmsCoursesResponse>} - The async response
     */
    public CompletableFuture<ListLmsCoursesResponse> listLmsCourses(ListLmsCoursesRequest request) {
        AsyncRequestOperation<ListLmsCoursesRequest, ListLmsCoursesResponse> operation
              = new ListLmsCourses.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all instructors
     * 
     * @return The async call builder
     */
    public ListLmsInstructorsRequestBuilder listLmsInstructors() {
        return new ListLmsInstructorsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all instructors
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListLmsInstructorsResponse>} - The async response
     */
    public CompletableFuture<ListLmsInstructorsResponse> listLmsInstructors(ListLmsInstructorsRequest request) {
        AsyncRequestOperation<ListLmsInstructorsRequest, ListLmsInstructorsResponse> operation
              = new ListLmsInstructors.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all students
     * 
     * @return The async call builder
     */
    public ListLmsStudentsRequestBuilder listLmsStudents() {
        return new ListLmsStudentsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all students
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListLmsStudentsResponse>} - The async response
     */
    public CompletableFuture<ListLmsStudentsResponse> listLmsStudents(ListLmsStudentsRequest request) {
        AsyncRequestOperation<ListLmsStudentsRequest, ListLmsStudentsResponse> operation
              = new ListLmsStudents.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a class
     * 
     * @return The async call builder
     */
    public PatchLmsClassRequestBuilder patchLmsClass() {
        return new PatchLmsClassRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a class
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchLmsClassResponse>} - The async response
     */
    public CompletableFuture<PatchLmsClassResponse> patchLmsClass(PatchLmsClassRequest request) {
        AsyncRequestOperation<PatchLmsClassRequest, PatchLmsClassResponse> operation
              = new PatchLmsClass.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a course
     * 
     * @return The async call builder
     */
    public PatchLmsCourseRequestBuilder patchLmsCourse() {
        return new PatchLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchLmsCourseResponse>} - The async response
     */
    public CompletableFuture<PatchLmsCourseResponse> patchLmsCourse(PatchLmsCourseRequest request) {
        AsyncRequestOperation<PatchLmsCourseRequest, PatchLmsCourseResponse> operation
              = new PatchLmsCourse.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an instructor
     * 
     * @return The async call builder
     */
    public PatchLmsInstructorRequestBuilder patchLmsInstructor() {
        return new PatchLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchLmsInstructorResponse>} - The async response
     */
    public CompletableFuture<PatchLmsInstructorResponse> patchLmsInstructor(PatchLmsInstructorRequest request) {
        AsyncRequestOperation<PatchLmsInstructorRequest, PatchLmsInstructorResponse> operation
              = new PatchLmsInstructor.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a student
     * 
     * @return The async call builder
     */
    public PatchLmsStudentRequestBuilder patchLmsStudent() {
        return new PatchLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchLmsStudentResponse>} - The async response
     */
    public CompletableFuture<PatchLmsStudentResponse> patchLmsStudent(PatchLmsStudentRequest request) {
        AsyncRequestOperation<PatchLmsStudentRequest, PatchLmsStudentResponse> operation
              = new PatchLmsStudent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a class
     * 
     * @return The async call builder
     */
    public RemoveLmsClassRequestBuilder removeLmsClass() {
        return new RemoveLmsClassRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a class
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveLmsClassResponse>} - The async response
     */
    public CompletableFuture<RemoveLmsClassResponse> removeLmsClass(RemoveLmsClassRequest request) {
        AsyncRequestOperation<RemoveLmsClassRequest, RemoveLmsClassResponse> operation
              = new RemoveLmsClass.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a course
     * 
     * @return The async call builder
     */
    public RemoveLmsCourseRequestBuilder removeLmsCourse() {
        return new RemoveLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveLmsCourseResponse>} - The async response
     */
    public CompletableFuture<RemoveLmsCourseResponse> removeLmsCourse(RemoveLmsCourseRequest request) {
        AsyncRequestOperation<RemoveLmsCourseRequest, RemoveLmsCourseResponse> operation
              = new RemoveLmsCourse.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove an instructor
     * 
     * @return The async call builder
     */
    public RemoveLmsInstructorRequestBuilder removeLmsInstructor() {
        return new RemoveLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveLmsInstructorResponse>} - The async response
     */
    public CompletableFuture<RemoveLmsInstructorResponse> removeLmsInstructor(RemoveLmsInstructorRequest request) {
        AsyncRequestOperation<RemoveLmsInstructorRequest, RemoveLmsInstructorResponse> operation
              = new RemoveLmsInstructor.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a student
     * 
     * @return The async call builder
     */
    public RemoveLmsStudentRequestBuilder removeLmsStudent() {
        return new RemoveLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveLmsStudentResponse>} - The async response
     */
    public CompletableFuture<RemoveLmsStudentResponse> removeLmsStudent(RemoveLmsStudentRequest request) {
        AsyncRequestOperation<RemoveLmsStudentRequest, RemoveLmsStudentResponse> operation
              = new RemoveLmsStudent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a class
     * 
     * @return The async call builder
     */
    public UpdateLmsClassRequestBuilder updateLmsClass() {
        return new UpdateLmsClassRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a class
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateLmsClassResponse>} - The async response
     */
    public CompletableFuture<UpdateLmsClassResponse> updateLmsClass(UpdateLmsClassRequest request) {
        AsyncRequestOperation<UpdateLmsClassRequest, UpdateLmsClassResponse> operation
              = new UpdateLmsClass.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a course
     * 
     * @return The async call builder
     */
    public UpdateLmsCourseRequestBuilder updateLmsCourse() {
        return new UpdateLmsCourseRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a course
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateLmsCourseResponse>} - The async response
     */
    public CompletableFuture<UpdateLmsCourseResponse> updateLmsCourse(UpdateLmsCourseRequest request) {
        AsyncRequestOperation<UpdateLmsCourseRequest, UpdateLmsCourseResponse> operation
              = new UpdateLmsCourse.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update an instructor
     * 
     * @return The async call builder
     */
    public UpdateLmsInstructorRequestBuilder updateLmsInstructor() {
        return new UpdateLmsInstructorRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an instructor
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateLmsInstructorResponse>} - The async response
     */
    public CompletableFuture<UpdateLmsInstructorResponse> updateLmsInstructor(UpdateLmsInstructorRequest request) {
        AsyncRequestOperation<UpdateLmsInstructorRequest, UpdateLmsInstructorResponse> operation
              = new UpdateLmsInstructor.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a student
     * 
     * @return The async call builder
     */
    public UpdateLmsStudentRequestBuilder updateLmsStudent() {
        return new UpdateLmsStudentRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a student
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateLmsStudentResponse>} - The async response
     */
    public CompletableFuture<UpdateLmsStudentResponse> updateLmsStudent(UpdateLmsStudentRequest request) {
        AsyncRequestOperation<UpdateLmsStudentRequest, UpdateLmsStudentResponse> operation
              = new UpdateLmsStudent.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
