/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateAccountingCategoryRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingCategoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingCategoryResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingCategoryRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingCategoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingCategoryResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingCategoriesRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingCategoriesRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingCategoriesResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingCategoryRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingCategoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingCategoryResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingCategoryRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingCategoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingCategoryResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingCategoryRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingCategoryRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingCategoryResponse;
import to.unified.unified_java_sdk.operations.CreateAccountingCategory;
import to.unified.unified_java_sdk.operations.GetAccountingCategory;
import to.unified.unified_java_sdk.operations.ListAccountingCategories;
import to.unified.unified_java_sdk.operations.PatchAccountingCategory;
import to.unified.unified_java_sdk.operations.RemoveAccountingCategory;
import to.unified.unified_java_sdk.operations.UpdateAccountingCategory;


public class Category {
    private final SDKConfiguration sdkConfiguration;

    Category(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a category
     * 
     * @return The call builder
     */
    public CreateAccountingCategoryRequestBuilder createAccountingCategory() {
        return new CreateAccountingCategoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a category
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingCategoryResponse createAccountingCategory(CreateAccountingCategoryRequest request) throws Exception {
        RequestOperation<CreateAccountingCategoryRequest, CreateAccountingCategoryResponse> operation
              = new CreateAccountingCategory.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a category
     * 
     * @return The call builder
     */
    public GetAccountingCategoryRequestBuilder getAccountingCategory() {
        return new GetAccountingCategoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a category
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingCategoryResponse getAccountingCategory(GetAccountingCategoryRequest request) throws Exception {
        RequestOperation<GetAccountingCategoryRequest, GetAccountingCategoryResponse> operation
              = new GetAccountingCategory.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all categories
     * 
     * @return The call builder
     */
    public ListAccountingCategoriesRequestBuilder listAccountingCategories() {
        return new ListAccountingCategoriesRequestBuilder(sdkConfiguration);
    }

    /**
     * List all categories
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingCategoriesResponse listAccountingCategories(ListAccountingCategoriesRequest request) throws Exception {
        RequestOperation<ListAccountingCategoriesRequest, ListAccountingCategoriesResponse> operation
              = new ListAccountingCategories.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a category
     * 
     * @return The call builder
     */
    public PatchAccountingCategoryRequestBuilder patchAccountingCategory() {
        return new PatchAccountingCategoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a category
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingCategoryResponse patchAccountingCategory(PatchAccountingCategoryRequest request) throws Exception {
        RequestOperation<PatchAccountingCategoryRequest, PatchAccountingCategoryResponse> operation
              = new PatchAccountingCategory.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove a category
     * 
     * @return The call builder
     */
    public RemoveAccountingCategoryRequestBuilder removeAccountingCategory() {
        return new RemoveAccountingCategoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a category
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingCategoryResponse removeAccountingCategory(RemoveAccountingCategoryRequest request) throws Exception {
        RequestOperation<RemoveAccountingCategoryRequest, RemoveAccountingCategoryResponse> operation
              = new RemoveAccountingCategory.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a category
     * 
     * @return The call builder
     */
    public UpdateAccountingCategoryRequestBuilder updateAccountingCategory() {
        return new UpdateAccountingCategoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a category
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingCategoryResponse updateAccountingCategory(UpdateAccountingCategoryRequest request) throws Exception {
        RequestOperation<UpdateAccountingCategoryRequest, UpdateAccountingCategoryResponse> operation
              = new UpdateAccountingCategory.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
