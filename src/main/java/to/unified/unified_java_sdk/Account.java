/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import to.unified.unified_java_sdk.models.operations.CreateAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.CreateAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreateAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.GetAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.GetAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.ListAccountingAccountsRequest;
import to.unified.unified_java_sdk.models.operations.ListAccountingAccountsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListAccountingAccountsResponse;
import to.unified.unified_java_sdk.models.operations.PatchAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.PatchAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemoveAccountingAccountResponse;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingAccountRequest;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingAccountRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdateAccountingAccountResponse;
import to.unified.unified_java_sdk.operations.CreateAccountingAccountOperation;
import to.unified.unified_java_sdk.operations.GetAccountingAccountOperation;
import to.unified.unified_java_sdk.operations.ListAccountingAccountsOperation;
import to.unified.unified_java_sdk.operations.PatchAccountingAccountOperation;
import to.unified.unified_java_sdk.operations.RemoveAccountingAccountOperation;
import to.unified.unified_java_sdk.operations.UpdateAccountingAccountOperation;


public class Account {
    private final SDKConfiguration sdkConfiguration;

    Account(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create an account
     * 
     * @return The call builder
     */
    public CreateAccountingAccountRequestBuilder createAccountingAccount() {
        return new CreateAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAccountingAccountResponse createAccountingAccount(CreateAccountingAccountRequest request) throws Exception {
        RequestOperation<CreateAccountingAccountRequest, CreateAccountingAccountResponse> operation
              = new CreateAccountingAccountOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve an account
     * 
     * @return The call builder
     */
    public GetAccountingAccountRequestBuilder getAccountingAccount() {
        return new GetAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountingAccountResponse getAccountingAccount(GetAccountingAccountRequest request) throws Exception {
        RequestOperation<GetAccountingAccountRequest, GetAccountingAccountResponse> operation
              = new GetAccountingAccountOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List all accounts
     * 
     * @return The call builder
     */
    public ListAccountingAccountsRequestBuilder listAccountingAccounts() {
        return new ListAccountingAccountsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all accounts
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAccountingAccountsResponse listAccountingAccounts(ListAccountingAccountsRequest request) throws Exception {
        RequestOperation<ListAccountingAccountsRequest, ListAccountingAccountsResponse> operation
              = new ListAccountingAccountsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an account
     * 
     * @return The call builder
     */
    public PatchAccountingAccountRequestBuilder patchAccountingAccount() {
        return new PatchAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchAccountingAccountResponse patchAccountingAccount(PatchAccountingAccountRequest request) throws Exception {
        RequestOperation<PatchAccountingAccountRequest, PatchAccountingAccountResponse> operation
              = new PatchAccountingAccountOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Remove an account
     * 
     * @return The call builder
     */
    public RemoveAccountingAccountRequestBuilder removeAccountingAccount() {
        return new RemoveAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemoveAccountingAccountResponse removeAccountingAccount(RemoveAccountingAccountRequest request) throws Exception {
        RequestOperation<RemoveAccountingAccountRequest, RemoveAccountingAccountResponse> operation
              = new RemoveAccountingAccountOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an account
     * 
     * @return The call builder
     */
    public UpdateAccountingAccountRequestBuilder updateAccountingAccount() {
        return new UpdateAccountingAccountRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an account
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAccountingAccountResponse updateAccountingAccount(UpdateAccountingAccountRequest request) throws Exception {
        RequestOperation<UpdateAccountingAccountRequest, UpdateAccountingAccountResponse> operation
              = new UpdateAccountingAccountOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
