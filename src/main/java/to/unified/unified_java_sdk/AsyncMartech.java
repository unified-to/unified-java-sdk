/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateMartechListRequest;
import to.unified.unified_java_sdk.models.operations.CreateMartechMemberRequest;
import to.unified.unified_java_sdk.models.operations.GetMartechListRequest;
import to.unified.unified_java_sdk.models.operations.GetMartechMemberRequest;
import to.unified.unified_java_sdk.models.operations.ListMartechListsRequest;
import to.unified.unified_java_sdk.models.operations.ListMartechMembersRequest;
import to.unified.unified_java_sdk.models.operations.PatchMartechListRequest;
import to.unified.unified_java_sdk.models.operations.PatchMartechMemberRequest;
import to.unified.unified_java_sdk.models.operations.RemoveMartechListRequest;
import to.unified.unified_java_sdk.models.operations.RemoveMartechMemberRequest;
import to.unified.unified_java_sdk.models.operations.UpdateMartechListRequest;
import to.unified.unified_java_sdk.models.operations.UpdateMartechMemberRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateMartechListRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateMartechListResponse;
import to.unified.unified_java_sdk.models.operations.async.CreateMartechMemberRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateMartechMemberResponse;
import to.unified.unified_java_sdk.models.operations.async.GetMartechListRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetMartechListResponse;
import to.unified.unified_java_sdk.models.operations.async.GetMartechMemberRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetMartechMemberResponse;
import to.unified.unified_java_sdk.models.operations.async.ListMartechListsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListMartechListsResponse;
import to.unified.unified_java_sdk.models.operations.async.ListMartechMembersRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListMartechMembersResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchMartechListRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchMartechListResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchMartechMemberRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchMartechMemberResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveMartechListRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveMartechListResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveMartechMemberRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveMartechMemberResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateMartechListRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateMartechListResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateMartechMemberRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateMartechMemberResponse;
import to.unified.unified_java_sdk.operations.CreateMartechList;
import to.unified.unified_java_sdk.operations.CreateMartechMember;
import to.unified.unified_java_sdk.operations.GetMartechList;
import to.unified.unified_java_sdk.operations.GetMartechMember;
import to.unified.unified_java_sdk.operations.ListMartechLists;
import to.unified.unified_java_sdk.operations.ListMartechMembers;
import to.unified.unified_java_sdk.operations.PatchMartechList;
import to.unified.unified_java_sdk.operations.PatchMartechMember;
import to.unified.unified_java_sdk.operations.RemoveMartechList;
import to.unified.unified_java_sdk.operations.RemoveMartechMember;
import to.unified.unified_java_sdk.operations.UpdateMartechList;
import to.unified.unified_java_sdk.operations.UpdateMartechMember;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncMartech {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Martech syncSDK;

    AsyncMartech(Martech syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Martech sync() {
        return syncSDK;
    }


    /**
     * Create a list
     * 
     * @return The async call builder
     */
    public CreateMartechListRequestBuilder createMartechList() {
        return new CreateMartechListRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a list
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateMartechListResponse>} - The async response
     */
    public CompletableFuture<CreateMartechListResponse> createMartechList(CreateMartechListRequest request) {
        AsyncRequestOperation<CreateMartechListRequest, CreateMartechListResponse> operation
              = new CreateMartechList.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create a member
     * 
     * @return The async call builder
     */
    public CreateMartechMemberRequestBuilder createMartechMember() {
        return new CreateMartechMemberRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a member
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CreateMartechMemberResponse>} - The async response
     */
    public CompletableFuture<CreateMartechMemberResponse> createMartechMember(CreateMartechMemberRequest request) {
        AsyncRequestOperation<CreateMartechMemberRequest, CreateMartechMemberResponse> operation
              = new CreateMartechMember.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a list
     * 
     * @return The async call builder
     */
    public GetMartechListRequestBuilder getMartechList() {
        return new GetMartechListRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a list
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetMartechListResponse>} - The async response
     */
    public CompletableFuture<GetMartechListResponse> getMartechList(GetMartechListRequest request) {
        AsyncRequestOperation<GetMartechListRequest, GetMartechListResponse> operation
              = new GetMartechList.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a member
     * 
     * @return The async call builder
     */
    public GetMartechMemberRequestBuilder getMartechMember() {
        return new GetMartechMemberRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a member
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<GetMartechMemberResponse>} - The async response
     */
    public CompletableFuture<GetMartechMemberResponse> getMartechMember(GetMartechMemberRequest request) {
        AsyncRequestOperation<GetMartechMemberRequest, GetMartechMemberResponse> operation
              = new GetMartechMember.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all lists
     * 
     * @return The async call builder
     */
    public ListMartechListsRequestBuilder listMartechLists() {
        return new ListMartechListsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all lists
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListMartechListsResponse>} - The async response
     */
    public CompletableFuture<ListMartechListsResponse> listMartechLists(ListMartechListsRequest request) {
        AsyncRequestOperation<ListMartechListsRequest, ListMartechListsResponse> operation
              = new ListMartechLists.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all members
     * 
     * @return The async call builder
     */
    public ListMartechMembersRequestBuilder listMartechMembers() {
        return new ListMartechMembersRequestBuilder(sdkConfiguration);
    }

    /**
     * List all members
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<ListMartechMembersResponse>} - The async response
     */
    public CompletableFuture<ListMartechMembersResponse> listMartechMembers(ListMartechMembersRequest request) {
        AsyncRequestOperation<ListMartechMembersRequest, ListMartechMembersResponse> operation
              = new ListMartechMembers.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a list
     * 
     * @return The async call builder
     */
    public PatchMartechListRequestBuilder patchMartechList() {
        return new PatchMartechListRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a list
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchMartechListResponse>} - The async response
     */
    public CompletableFuture<PatchMartechListResponse> patchMartechList(PatchMartechListRequest request) {
        AsyncRequestOperation<PatchMartechListRequest, PatchMartechListResponse> operation
              = new PatchMartechList.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a member
     * 
     * @return The async call builder
     */
    public PatchMartechMemberRequestBuilder patchMartechMember() {
        return new PatchMartechMemberRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a member
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<PatchMartechMemberResponse>} - The async response
     */
    public CompletableFuture<PatchMartechMemberResponse> patchMartechMember(PatchMartechMemberRequest request) {
        AsyncRequestOperation<PatchMartechMemberRequest, PatchMartechMemberResponse> operation
              = new PatchMartechMember.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a list
     * 
     * @return The async call builder
     */
    public RemoveMartechListRequestBuilder removeMartechList() {
        return new RemoveMartechListRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a list
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveMartechListResponse>} - The async response
     */
    public CompletableFuture<RemoveMartechListResponse> removeMartechList(RemoveMartechListRequest request) {
        AsyncRequestOperation<RemoveMartechListRequest, RemoveMartechListResponse> operation
              = new RemoveMartechList.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a member
     * 
     * @return The async call builder
     */
    public RemoveMartechMemberRequestBuilder removeMartechMember() {
        return new RemoveMartechMemberRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a member
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<RemoveMartechMemberResponse>} - The async response
     */
    public CompletableFuture<RemoveMartechMemberResponse> removeMartechMember(RemoveMartechMemberRequest request) {
        AsyncRequestOperation<RemoveMartechMemberRequest, RemoveMartechMemberResponse> operation
              = new RemoveMartechMember.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a list
     * 
     * @return The async call builder
     */
    public UpdateMartechListRequestBuilder updateMartechList() {
        return new UpdateMartechListRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a list
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateMartechListResponse>} - The async response
     */
    public CompletableFuture<UpdateMartechListResponse> updateMartechList(UpdateMartechListRequest request) {
        AsyncRequestOperation<UpdateMartechListRequest, UpdateMartechListResponse> operation
              = new UpdateMartechList.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a member
     * 
     * @return The async call builder
     */
    public UpdateMartechMemberRequestBuilder updateMartechMember() {
        return new UpdateMartechMemberRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a member
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<UpdateMartechMemberResponse>} - The async response
     */
    public CompletableFuture<UpdateMartechMemberResponse> updateMartechMember(UpdateMartechMemberRequest request) {
        AsyncRequestOperation<UpdateMartechMemberRequest, UpdateMartechMemberResponse> operation
              = new UpdateMartechMember.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
