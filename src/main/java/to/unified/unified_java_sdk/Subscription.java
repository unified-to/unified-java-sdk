/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.RequestOperation;

import java.lang.Exception;
import java.util.List;
import java.util.Optional;
import to.unified.unified_java_sdk.models.operations.CreatePaymentSubscriptionRequest;
import to.unified.unified_java_sdk.models.operations.CreatePaymentSubscriptionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.CreatePaymentSubscriptionResponse;
import to.unified.unified_java_sdk.models.operations.GetPaymentSubscriptionRequest;
import to.unified.unified_java_sdk.models.operations.GetPaymentSubscriptionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.GetPaymentSubscriptionResponse;
import to.unified.unified_java_sdk.models.operations.ListPaymentSubscriptionsRequest;
import to.unified.unified_java_sdk.models.operations.ListPaymentSubscriptionsRequestBuilder;
import to.unified.unified_java_sdk.models.operations.ListPaymentSubscriptionsResponse;
import to.unified.unified_java_sdk.models.operations.PatchPaymentSubscriptionRequest;
import to.unified.unified_java_sdk.models.operations.PatchPaymentSubscriptionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.PatchPaymentSubscriptionResponse;
import to.unified.unified_java_sdk.models.operations.RemovePaymentSubscriptionRequest;
import to.unified.unified_java_sdk.models.operations.RemovePaymentSubscriptionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.RemovePaymentSubscriptionResponse;
import to.unified.unified_java_sdk.models.operations.UpdatePaymentSubscriptionRequest;
import to.unified.unified_java_sdk.models.operations.UpdatePaymentSubscriptionRequestBuilder;
import to.unified.unified_java_sdk.models.operations.UpdatePaymentSubscriptionResponse;
import to.unified.unified_java_sdk.operations.CreatePaymentSubscriptionOperation;
import to.unified.unified_java_sdk.operations.GetPaymentSubscriptionOperation;
import to.unified.unified_java_sdk.operations.ListPaymentSubscriptionsOperation;
import to.unified.unified_java_sdk.operations.PatchPaymentSubscriptionOperation;
import to.unified.unified_java_sdk.operations.RemovePaymentSubscriptionOperation;
import to.unified.unified_java_sdk.operations.UpdatePaymentSubscriptionOperation;


public class Subscription {
    private final SDKConfiguration sdkConfiguration;

    Subscription(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a subscription
     * 
     * @return The call builder
     */
    public CreatePaymentSubscriptionRequestBuilder createPaymentSubscription() {
        return new CreatePaymentSubscriptionRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreatePaymentSubscriptionResponse createPaymentSubscription(
            CreatePaymentSubscriptionRequest request) throws Exception {
        RequestOperation<CreatePaymentSubscriptionRequest, CreatePaymentSubscriptionResponse> operation
              = new CreatePaymentSubscriptionOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Retrieve a subscription
     * 
     * @return The call builder
     */
    public GetPaymentSubscriptionRequestBuilder getPaymentSubscription() {
        return new GetPaymentSubscriptionRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetPaymentSubscriptionResponse getPaymentSubscription(
            GetPaymentSubscriptionRequest request) throws Exception {
        RequestOperation<GetPaymentSubscriptionRequest, GetPaymentSubscriptionResponse> operation
              = new GetPaymentSubscriptionOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all subscriptions
     * 
     * @return The call builder
     */
    public ListPaymentSubscriptionsRequestBuilder listPaymentSubscriptions() {
        return new ListPaymentSubscriptionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List all subscriptions
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListPaymentSubscriptionsResponse listPaymentSubscriptions(
            ListPaymentSubscriptionsRequest request) throws Exception {
        RequestOperation<ListPaymentSubscriptionsRequest, ListPaymentSubscriptionsResponse> operation
              = new ListPaymentSubscriptionsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a subscription
     * 
     * @return The call builder
     */
    public PatchPaymentSubscriptionRequestBuilder patchPaymentSubscription() {
        return new PatchPaymentSubscriptionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PatchPaymentSubscriptionResponse patchPaymentSubscription(
            PatchPaymentSubscriptionRequest request) throws Exception {
        RequestOperation<PatchPaymentSubscriptionRequest, PatchPaymentSubscriptionResponse> operation
              = new PatchPaymentSubscriptionOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Remove a subscription
     * 
     * @return The call builder
     */
    public RemovePaymentSubscriptionRequestBuilder removePaymentSubscription() {
        return new RemovePaymentSubscriptionRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public RemovePaymentSubscriptionResponse removePaymentSubscription(
            RemovePaymentSubscriptionRequest request) throws Exception {
        RequestOperation<RemovePaymentSubscriptionRequest, RemovePaymentSubscriptionResponse> operation
              = new RemovePaymentSubscriptionOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update a subscription
     * 
     * @return The call builder
     */
    public UpdatePaymentSubscriptionRequestBuilder updatePaymentSubscription() {
        return new UpdatePaymentSubscriptionRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a subscription
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdatePaymentSubscriptionResponse updatePaymentSubscription(
            UpdatePaymentSubscriptionRequest request) throws Exception {
        RequestOperation<UpdatePaymentSubscriptionRequest, UpdatePaymentSubscriptionResponse> operation
              = new UpdatePaymentSubscriptionOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
