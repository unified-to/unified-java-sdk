/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package to.unified.unified_java_sdk;

import static to.unified.unified_java_sdk.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import to.unified.unified_java_sdk.models.operations.CreateMetadataMetadataRequest;
import to.unified.unified_java_sdk.models.operations.GetMetadataMetadataRequest;
import to.unified.unified_java_sdk.models.operations.ListMetadataMetadatasRequest;
import to.unified.unified_java_sdk.models.operations.PatchMetadataMetadataRequest;
import to.unified.unified_java_sdk.models.operations.RemoveMetadataMetadataRequest;
import to.unified.unified_java_sdk.models.operations.UpdateMetadataMetadataRequest;
import to.unified.unified_java_sdk.models.operations.async.CreateMetadataMetadataRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.CreateMetadataMetadataResponse;
import to.unified.unified_java_sdk.models.operations.async.GetMetadataMetadataRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.GetMetadataMetadataResponse;
import to.unified.unified_java_sdk.models.operations.async.ListMetadataMetadatasRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.ListMetadataMetadatasResponse;
import to.unified.unified_java_sdk.models.operations.async.PatchMetadataMetadataRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.PatchMetadataMetadataResponse;
import to.unified.unified_java_sdk.models.operations.async.RemoveMetadataMetadataRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.RemoveMetadataMetadataResponse;
import to.unified.unified_java_sdk.models.operations.async.UpdateMetadataMetadataRequestBuilder;
import to.unified.unified_java_sdk.models.operations.async.UpdateMetadataMetadataResponse;
import to.unified.unified_java_sdk.operations.CreateMetadataMetadata;
import to.unified.unified_java_sdk.operations.GetMetadataMetadata;
import to.unified.unified_java_sdk.operations.ListMetadataMetadatas;
import to.unified.unified_java_sdk.operations.PatchMetadataMetadata;
import to.unified.unified_java_sdk.operations.RemoveMetadataMetadata;
import to.unified.unified_java_sdk.operations.UpdateMetadataMetadata;
import to.unified.unified_java_sdk.utils.Headers;


public class AsyncMetadata {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Metadata syncSDK;

    AsyncMetadata(Metadata syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Metadata sync() {
        return syncSDK;
    }


    /**
     * Create a metadata
     * 
     * @return The async call builder
     */
    public CreateMetadataMetadataRequestBuilder createMetadataMetadata() {
        return new CreateMetadataMetadataRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a metadata
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateMetadataMetadataResponse&gt; - The async response
     */
    public CompletableFuture<CreateMetadataMetadataResponse> createMetadataMetadata(CreateMetadataMetadataRequest request) {
        AsyncRequestOperation<CreateMetadataMetadataRequest, CreateMetadataMetadataResponse> operation
              = new CreateMetadataMetadata.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Retrieve a metadata
     * 
     * @return The async call builder
     */
    public GetMetadataMetadataRequestBuilder getMetadataMetadata() {
        return new GetMetadataMetadataRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a metadata
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;GetMetadataMetadataResponse&gt; - The async response
     */
    public CompletableFuture<GetMetadataMetadataResponse> getMetadataMetadata(GetMetadataMetadataRequest request) {
        AsyncRequestOperation<GetMetadataMetadataRequest, GetMetadataMetadataResponse> operation
              = new GetMetadataMetadata.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List all metadatas
     * 
     * @return The async call builder
     */
    public ListMetadataMetadatasRequestBuilder listMetadataMetadatas() {
        return new ListMetadataMetadatasRequestBuilder(sdkConfiguration);
    }

    /**
     * List all metadatas
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;ListMetadataMetadatasResponse&gt; - The async response
     */
    public CompletableFuture<ListMetadataMetadatasResponse> listMetadataMetadatas(ListMetadataMetadatasRequest request) {
        AsyncRequestOperation<ListMetadataMetadatasRequest, ListMetadataMetadatasResponse> operation
              = new ListMetadataMetadatas.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a metadata
     * 
     * @return The async call builder
     */
    public PatchMetadataMetadataRequestBuilder patchMetadataMetadata() {
        return new PatchMetadataMetadataRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a metadata
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;PatchMetadataMetadataResponse&gt; - The async response
     */
    public CompletableFuture<PatchMetadataMetadataResponse> patchMetadataMetadata(PatchMetadataMetadataRequest request) {
        AsyncRequestOperation<PatchMetadataMetadataRequest, PatchMetadataMetadataResponse> operation
              = new PatchMetadataMetadata.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Remove a metadata
     * 
     * @return The async call builder
     */
    public RemoveMetadataMetadataRequestBuilder removeMetadataMetadata() {
        return new RemoveMetadataMetadataRequestBuilder(sdkConfiguration);
    }

    /**
     * Remove a metadata
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;RemoveMetadataMetadataResponse&gt; - The async response
     */
    public CompletableFuture<RemoveMetadataMetadataResponse> removeMetadataMetadata(RemoveMetadataMetadataRequest request) {
        AsyncRequestOperation<RemoveMetadataMetadataRequest, RemoveMetadataMetadataResponse> operation
              = new RemoveMetadataMetadata.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a metadata
     * 
     * @return The async call builder
     */
    public UpdateMetadataMetadataRequestBuilder updateMetadataMetadata() {
        return new UpdateMetadataMetadataRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a metadata
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;UpdateMetadataMetadataResponse&gt; - The async response
     */
    public CompletableFuture<UpdateMetadataMetadataResponse> updateMetadataMetadata(UpdateMetadataMetadataRequest request) {
        AsyncRequestOperation<UpdateMetadataMetadataRequest, UpdateMetadataMetadataResponse> operation
              = new UpdateMetadataMetadata.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
