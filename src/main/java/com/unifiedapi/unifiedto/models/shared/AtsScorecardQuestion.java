/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.unifiedapi.unifiedto.models.shared;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.unifiedapi.unifiedto.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;


public class AtsScorecardQuestion {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("answer")
    private Optional<String> answer;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private Optional<String> description;

    @JsonProperty("text")
    private String text;

    @JsonCreator
    public AtsScorecardQuestion(
            @JsonProperty("answer") Optional<String> answer,
            @JsonProperty("description") Optional<String> description,
            @JsonProperty("text") String text) {
        Utils.checkNotNull(answer, "answer");
        Utils.checkNotNull(description, "description");
        Utils.checkNotNull(text, "text");
        this.answer = answer;
        this.description = description;
        this.text = text;
    }
    
    public AtsScorecardQuestion(
            String text) {
        this(Optional.empty(), Optional.empty(), text);
    }

    @JsonIgnore
    public Optional<String> answer() {
        return answer;
    }

    @JsonIgnore
    public Optional<String> description() {
        return description;
    }

    @JsonIgnore
    public String text() {
        return text;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public AtsScorecardQuestion withAnswer(String answer) {
        Utils.checkNotNull(answer, "answer");
        this.answer = Optional.ofNullable(answer);
        return this;
    }

    public AtsScorecardQuestion withAnswer(Optional<String> answer) {
        Utils.checkNotNull(answer, "answer");
        this.answer = answer;
        return this;
    }

    public AtsScorecardQuestion withDescription(String description) {
        Utils.checkNotNull(description, "description");
        this.description = Optional.ofNullable(description);
        return this;
    }

    public AtsScorecardQuestion withDescription(Optional<String> description) {
        Utils.checkNotNull(description, "description");
        this.description = description;
        return this;
    }

    public AtsScorecardQuestion withText(String text) {
        Utils.checkNotNull(text, "text");
        this.text = text;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AtsScorecardQuestion other = (AtsScorecardQuestion) o;
        return 
            Objects.deepEquals(this.answer, other.answer) &&
            Objects.deepEquals(this.description, other.description) &&
            Objects.deepEquals(this.text, other.text);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            answer,
            description,
            text);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AtsScorecardQuestion.class,
                "answer", answer,
                "description", description,
                "text", text);
    }
    
    public final static class Builder {
 
        private Optional<String> answer = Optional.empty();
 
        private Optional<String> description = Optional.empty();
 
        private String text;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder answer(String answer) {
            Utils.checkNotNull(answer, "answer");
            this.answer = Optional.ofNullable(answer);
            return this;
        }

        public Builder answer(Optional<String> answer) {
            Utils.checkNotNull(answer, "answer");
            this.answer = answer;
            return this;
        }

        public Builder description(String description) {
            Utils.checkNotNull(description, "description");
            this.description = Optional.ofNullable(description);
            return this;
        }

        public Builder description(Optional<String> description) {
            Utils.checkNotNull(description, "description");
            this.description = description;
            return this;
        }

        public Builder text(String text) {
            Utils.checkNotNull(text, "text");
            this.text = text;
            return this;
        }
        
        public AtsScorecardQuestion build() {
            return new AtsScorecardQuestion(
                answer,
                description,
                text);
        }
    }
}

